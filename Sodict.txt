
        [
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "client",
                "DEPTH 4": "type",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteClientType",
                "BO_NAME": "ClientTypeBO",
                "METHOD_NAME": "deleteClientType",
                "DOF_NAME": "ClientTypeDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.CLIENTTYPE WHERE CLIENTTYPE_CODE = :CLIENTTYPE_CODE AND (COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "CLIENTTYPE",
                "COLUMN": "CLIENTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "client",
                "DEPTH 4": "type",
                "DEPTH 5": "so",
                "SO_NAME": "InsertClientType",
                "BO_NAME": "ClientTypeBO",
                "METHOD_NAME": "insertClientType",
                "DOF_NAME": "ClientTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CLIENTTYPE VALUES (:CLIENTTYPE_CODE, :CLIENTTYPE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "CLIENTTYPE",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "client",
                "DEPTH 4": "type",
                "DEPTH 5": "so",
                "SO_NAME": "InsertClientType",
                "BO_NAME": "ClientTypeBO",
                "METHOD_NAME": "insertClientType",
                "DOF_NAME": "ClientTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CLIENTTYPE VALUES (:CLIENTTYPE_CODE, :CLIENTTYPE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "CLIENTTYPE",
                "COLUMN": ":CLIENTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "client",
                "DEPTH 4": "type",
                "DEPTH 5": "so",
                "SO_NAME": "InsertClientType",
                "BO_NAME": "ClientTypeBO",
                "METHOD_NAME": "insertClientType",
                "DOF_NAME": "ClientTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CLIENTTYPE VALUES (:CLIENTTYPE_CODE, :CLIENTTYPE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "CLIENTTYPE",
                "COLUMN": ":CLIENTTYPE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "client",
                "DEPTH 4": "type",
                "DEPTH 5": "so",
                "SO_NAME": "InsertClientType",
                "BO_NAME": "ClientTypeBO",
                "METHOD_NAME": "insertClientType",
                "DOF_NAME": "ClientTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CLIENTTYPE VALUES (:CLIENTTYPE_CODE, :CLIENTTYPE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "CLIENTTYPE",
                "COLUMN": ":COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "deleteConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.CONACC WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "CONACC_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "CONACC_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "CONACC_FONT_SIZE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE1"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE2"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE3"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE4"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE5"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE6"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "LANGUAGE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "insertConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONACC ( CONACC_CODE, CONACC_FONT_SIZE, ACCOUNT_CODE1, ACCOUNT_CODE2, ACCOUNT_CODE3, ACCOUNT_CODE4, ACCOUNT_CODE5, ACCOUNT_CODE6, LANGUAGE_CODE, COMPANY_CODE ) VALUES ( (SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC), :CONACC_FONT_SIZE, :ACCOUNT_CODE1, :ACCOUNT_CODE2, :ACCOUNT_CODE3, :ACCOUNT_CODE4, :ACCOUNT_CODE5, :ACCOUNT_CODE6, :LANGUAGE_CODE, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "CONACC_FONT_SIZE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE1"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE2"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE3"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE4"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE5"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "ACCOUNT_CODE6"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "LANGUAGE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "acc",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAccSO",
                "BO_NAME": "ConAccBO",
                "METHOD_NAME": "updateConAccByCode",
                "DOF_NAME": "ConAccDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONACC SET CONACC_FONT_SIZE = :CONACC_FONT_SIZE, ACCOUNT_CODE1 = :ACCOUNT_CODE1, ACCOUNT_CODE2 = :ACCOUNT_CODE2, ACCOUNT_CODE3 = :ACCOUNT_CODE3, ACCOUNT_CODE4 = :ACCOUNT_CODE4, ACCOUNT_CODE5 = :ACCOUNT_CODE5, ACCOUNT_CODE6 = :ACCOUNT_CODE6, LANGUAGE_CODE = :LANGUAGE_CODE, COMPANY_CODE = :COMPANY_CODE WHERE CONACC_CODE = :CONACC_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONACC",
                "COLUMN": "CONACC_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "deleteConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.CONALL WHERE CONALL_CODE = :CONALL_CODE AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_VAT_INCLUDED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_PROJECT_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_FUNDS_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_SITE_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_ITEM_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE1"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE2"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE3"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE4"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE5"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE6"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "InsertConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "insertConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.CONALL ( CONALL_CODE, CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6, COMPANY_CODE ) VALUES ( (SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL), :CONALL_VAT_INCLUDED, :CONALL_PROJECT_CODE_USED, :CONALL_FUNDS_CODE_USED, :CONALL_SITE_CODE_USED, :CONALL_ITEM_CODE_USED, :DISPLAYDIGITS_CODE1, :DISPLAYDIGITS_CODE2, :DISPLAYDIGITS_CODE3, :DISPLAYDIGITS_CODE4, :DISPLAYDIGITS_CODE5, :DISPLAYDIGITS_CODE6, :COMPANY_CODE );",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_VAT_INCLUDED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_PROJECT_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_FUNDS_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_SITE_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_ITEM_CODE_USED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE1"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE2"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE3"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE4"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE5"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "DISPLAYDIGITS_CODE6"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "configure",
                "DEPTH 4": "all",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateConAllSO",
                "BO_NAME": "ConAllBO",
                "METHOD_NAME": "updateConAllByCode",
                "DOF_NAME": "ConAllDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CONALL SET CONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED, CONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED, CONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED, CONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED, CONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED, DISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1, DISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2, DISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3, DISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4, DISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5, DISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6, COMPANY_CODE = :COMPANY_CODE WHERE CONALL_CODE = :CONALL_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CONALL",
                "COLUMN": "CONALL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "ledger",
                "DEPTH 4": "coa",
                "DEPTH 5": "so",
                "SO_NAME": "ReadCOAListSO",
                "BO_NAME": "ReadCOA",
                "METHOD_NAME": "readCoaList",
                "ERROR": "PARSING_SERVER_ERROR : 잘못된 DOF 경로 입니다. 쓰이지 않는 DOF 이거나, 빌드가 안된 DOF 이므로 영향도 분석에서 제외하겠습니다."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "IndustrySO",
                "BO_NAME": "IndustryBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "IndustryDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.INDUSTRY VALUES (:INDUSTRY_CODE, :INDUSTRY_SECTOR, :INDUSTRY_NAME, :INDUSTRY_REMARKS);",
                "SCHEMA": "FS",
                "TABLE": "INDUSTRY",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "IndustrySO",
                "BO_NAME": "IndustryBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "IndustryDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.INDUSTRY VALUES (:INDUSTRY_CODE, :INDUSTRY_SECTOR, :INDUSTRY_NAME, :INDUSTRY_REMARKS);",
                "SCHEMA": "FS",
                "TABLE": "INDUSTRY",
                "COLUMN": ":INDUSTRY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "IndustrySO",
                "BO_NAME": "IndustryBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "IndustryDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.INDUSTRY VALUES (:INDUSTRY_CODE, :INDUSTRY_SECTOR, :INDUSTRY_NAME, :INDUSTRY_REMARKS);",
                "SCHEMA": "FS",
                "TABLE": "INDUSTRY",
                "COLUMN": ":INDUSTRY_SECTOR"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "IndustrySO",
                "BO_NAME": "IndustryBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "IndustryDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.INDUSTRY VALUES (:INDUSTRY_CODE, :INDUSTRY_SECTOR, :INDUSTRY_NAME, :INDUSTRY_REMARKS);",
                "SCHEMA": "FS",
                "TABLE": "INDUSTRY",
                "COLUMN": ":INDUSTRY_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "IndustrySO",
                "BO_NAME": "IndustryBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "IndustryDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.INDUSTRY VALUES (:INDUSTRY_CODE, :INDUSTRY_SECTOR, :INDUSTRY_NAME, :INDUSTRY_REMARKS);",
                "SCHEMA": "FS",
                "TABLE": "INDUSTRY",
                "COLUMN": ":INDUSTRY_REMARKS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "InsertLocalTaxSO",
                "BO_NAME": "LocalTaxBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "insert",
                "QUERY": "INSERT INTO FS.LOCALTAX values (:LOCALTAX_CODE,:LOCALTAX_NAME);",
                "SCHEMA": "FS",
                "TABLE": "LOCALTAX",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "InsertLocalTaxSO",
                "BO_NAME": "LocalTaxBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "insert",
                "QUERY": "INSERT INTO FS.LOCALTAX values (:LOCALTAX_CODE,:LOCALTAX_NAME);",
                "SCHEMA": "FS",
                "TABLE": "LOCALTAX",
                "COLUMN": ":LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "InsertLocalTaxSO",
                "BO_NAME": "LocalTaxBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "insert",
                "QUERY": "INSERT INTO FS.LOCALTAX values (:LOCALTAX_CODE,:LOCALTAX_NAME);",
                "SCHEMA": "FS",
                "TABLE": "LOCALTAX",
                "COLUMN": ":LOCALTAX_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "youngjune_leeLocalTaxSO",
                "BO_NAME": "youngjune_leeLocalTaxBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "youngjune_leeLocalTaxDOF",
                "QUERY_NAME": "insert",
                "QUERY": "INSERT INTO FS.LOCALTAX values (:LOCALTAX_CODE,:LOCALTAX_NAME);",
                "SCHEMA": "FS",
                "TABLE": "LOCALTAX",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "youngjune_leeLocalTaxSO",
                "BO_NAME": "youngjune_leeLocalTaxBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "youngjune_leeLocalTaxDOF",
                "QUERY_NAME": "insert",
                "QUERY": "INSERT INTO FS.LOCALTAX values (:LOCALTAX_CODE,:LOCALTAX_NAME);",
                "SCHEMA": "FS",
                "TABLE": "LOCALTAX",
                "COLUMN": ":LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "SO_NAME": "youngjune_leeLocalTaxSO",
                "BO_NAME": "youngjune_leeLocalTaxBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "youngjune_leeLocalTaxDOF",
                "QUERY_NAME": "insert",
                "QUERY": "INSERT INTO FS.LOCALTAX values (:LOCALTAX_CODE,:LOCALTAX_NAME);",
                "SCHEMA": "FS",
                "TABLE": "LOCALTAX",
                "COLUMN": ":LOCALTAX_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "DeleteEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "deleteEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.EMPLOYEE WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_POSITION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_RANK"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_JOB"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_VALUE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_PASSWORD"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_EMAIL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_PHONE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":EMPLOYEE_SKILL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "InsertEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "insertEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.EMPLOYEE  VALUES (:EMPLOYEE_CODE,  :COMPANY_CODE,  :EMPLOYEE_NAME,  :EMPLOYEE_POSITION,  :EMPLOYEE_RANK,  :EMPLOYEE_JOB,  :EMPLOYEE_VALUE,  :EMPLOYEE_ID,  :EMPLOYEE_PASSWORD,  :EMPLOYEE_EMAIL,  :EMPLOYEE_PHONE,  :EMPLOYEE_SKILL,  :DEPARTMENT_CODE, :DEPARTMENT_NAME); ",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": ":DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_POSITION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_RANK"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_JOB"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_VALUE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_PASSWORD"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_EMAIL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_PHONE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_SKILL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "code",
                "DEPTH 3": "employee",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateEmployeeSO",
                "BO_NAME": "EmployeeBO",
                "METHOD_NAME": "updateEmployee",
                "DOF_NAME": "EmployeeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.EMPLOYEE SET COMPANY_CODE = :COMPANY_CODE,  EMPLOYEE_NAME = :EMPLOYEE_NAME,  EMPLOYEE_POSITION = :EMPLOYEE_POSITION,  EMPLOYEE_RANK = :EMPLOYEE_RANK,  EMPLOYEE_JOB = :EMPLOYEE_JOB,  EMPLOYEE_VALUE = :EMPLOYEE_VALUE,  EMPLOYEE_ID = :EMPLOYEE_ID,  EMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD,  EMPLOYEE_EMAIL = :EMPLOYEE_EMAIL,  EMPLOYEE_PHONE = :EMPLOYEE_PHONE,  EMPLOYEE_SKILL = :EMPLOYEE_SKILL,  DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME WHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;",
                "SCHEMA": "FS",
                "TABLE": "EMPLOYEE",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByDate",
                "BO_NAME": "ReadDocByDateBO",
                "METHOD_NAME": "readDocByDate",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCDATEREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_DATE = to_date(:DOC_DATE,'YYYY-MM-DD') AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByDate",
                "BO_NAME": "ReadDocByDateBO",
                "METHOD_NAME": "readDocByDate",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCDATEREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_DATE = to_date(:DOC_DATE,'YYYY-MM-DD') AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByDate",
                "BO_NAME": "ReadDocByDateBO",
                "METHOD_NAME": "readDocByDate",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCDATEREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_DATE = to_date(:DOC_DATE,'YYYY-MM-DD') AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByMonthRangeSO",
                "BO_NAME": "ReadDocByMonthRangeBO",
                "METHOD_NAME": "readDocByMonthRange",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADMONTH",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE (DOC_DATE <= (SELECT LAST_DAY(to_date(:END_MONTH,'YYYY-MM')) FROM dual) AND DOC_DATE > to_date(:START_MONTH,'YYYY-MM-DD')) AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByMonthRangeSO",
                "BO_NAME": "ReadDocByMonthRangeBO",
                "METHOD_NAME": "readDocByMonthRange",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADMONTH",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE (DOC_DATE <= (SELECT LAST_DAY(to_date(:END_MONTH,'YYYY-MM')) FROM dual) AND DOC_DATE > to_date(:START_MONTH,'YYYY-MM-DD')) AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByMonthRangeSO",
                "BO_NAME": "ReadDocByMonthRangeBO",
                "METHOD_NAME": "readDocByMonthRange",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADMONTH",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE (DOC_DATE <= (SELECT LAST_DAY(to_date(:END_MONTH,'YYYY-MM')) FROM dual) AND DOC_DATE > to_date(:START_MONTH,'YYYY-MM-DD')) AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocReadByMonthRangeSO",
                "BO_NAME": "ReadDocByMonthRangeBO",
                "METHOD_NAME": "readDocByMonthRange",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADMONTH",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE (DOC_DATE <= (SELECT LAST_DAY(to_date(:END_MONTH,'YYYY-MM')) FROM dual) AND DOC_DATE > to_date(:START_MONTH,'YYYY-MM-DD')) AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE ORDER BY DOC_DATE ASC, DOC_ORDER ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadGeneralDocumentSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadGeneralDocumentSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadGeneralDocumentSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "DeleteDocJournalBO",
                "METHOD_NAME": "deleteDocJournal",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCJDELETE",
                "QUERY": "DELETE FROM FS.DOCJOURNAL  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_DEBIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_CREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ABSTRACT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNALTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopyGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocDeleteSO",
                "BO_NAME": "DeleteDocJournalBO",
                "METHOD_NAME": "deleteDocJournal",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCJDELETE",
                "QUERY": "DELETE FROM FS.DOCJOURNAL  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "GeneralDocDeleteSO",
                "BO_NAME": "DeleteDocBO",
                "METHOD_NAME": "deleteDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCDELETE",
                "QUERY": "DELETE FROM FS.DOC  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_DEBIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_CREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ABSTRACT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "InsertGeneralDocSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNALTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveGeneralDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadDocListByRowSeqSO",
                "BO_NAME": "ReadDocListByRowSeqBO",
                "METHOD_NAME": "readDocListByRowSeq",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADCOPYMOVE",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ in :_dynamic ORDER BY DOC_ROWSEQ ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadDocListByRowSeqSO",
                "BO_NAME": "ReadDocListByRowSeqBO",
                "METHOD_NAME": "readDocListByRowSeq",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADCOPYMOVE",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ in :_dynamic ORDER BY DOC_ROWSEQ ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "generaldoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadDocListByRowSeqSO",
                "BO_NAME": "ReadDocListByRowSeqBO",
                "METHOD_NAME": "readDocListByRowSeq",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREADCOPYMOVE",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ in :_dynamic ORDER BY DOC_ROWSEQ ASC;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "ReadDocSalesBO",
                "METHOD_NAME": "readDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESREAD",
                "QUERY": "SELECT DOCSALES.DOC_ROWSEQ,  DOCSALES.DOCSALES_PRODUCTNAME,  DOCSALES.DOCSALES_TOTALPRICE,  DOCSALES.DOCSALES_TOTALVAT,  DOCSALES.DOCSALES_TOTALAMOUNT,  DOCSALES.DOCSALES_ELECTAX, DOCSALES.DOCSALES_CLIENT, DOCSALES.CLIENT_CODE, CLIENT.CLIENT_NAME, CLIENT.CLIENT_NUMBER, DOCSALES.DOCSALESTYPE_CODE, DOCSALESTYPE.DOCSALESTYPE_NAME, DOCSALESTYPE_ISVAT, DOCSALES.VATNONDEDUCTIBLE_CODE, VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_NAME, DOCSALES.DOCSALESJOURNAL_CODE, DOCSALES.DOCTYPE_CODE, DOCSALES.CLIENT_OCARD_CODE, CLIENTCARD.CLIENT_NAME AS CLIENT_OCARD_NAME FROM FS.DOCSALES LEFT JOIN FS.CLIENT ON DOCSALES.CLIENT_CODE = CLIENT.CLIENT_CODE LEFT JOIN FS.DOCSALESTYPE ON DOCSALES.DOCSALESTYPE_CODE = DOCSALESTYPE.DOCSALESTYPE_CODE LEFT JOIN FS.VATNONDEDUCTIBLE ON DOCSALES.VATNONDEDUCTIBLE_CODE = VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_CODE LEFT JOIN FS.CLIENT AS CLIENTCARD ON DOCSALES.CLIENT_OCARD_CODE = CLIENTCARD.CLIENT_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_PRODUCTNAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_TOTALPRICE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_TOTALVAT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_TOTALAMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_ELECTAX"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_CLIENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "CLIENT_OCARD_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALESTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "VATNONDEDUCTIBLE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALESJOURNAL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "CopySalesDocSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocDeleteSO",
                "BO_NAME": "DeleteDocJournalBO",
                "METHOD_NAME": "deleteDocJournal",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCJDELETE",
                "QUERY": "DELETE FROM FS.DOCJOURNAL  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocDeleteSO",
                "BO_NAME": "DeleteDocSalesBO",
                "METHOD_NAME": "deleteDocSales",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSALESDELETE",
                "QUERY": "DELETE FROM FS.DOCSALES WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocDeleteSO",
                "BO_NAME": "DeleteDocProductBO",
                "METHOD_NAME": "deleteDocProduct",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCPRODUCTDELETE",
                "QUERY": "DELETE FROM FS.DOCPRODUCT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCPRODUCT",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocDeleteSO",
                "BO_NAME": "DeleteDocBO",
                "METHOD_NAME": "deleteDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCDELETE",
                "QUERY": "DELETE FROM FS.DOC  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "DocSalesJournalGenerateSO",
                "BO_NAME": "ReadDocSalesTypeInfoBO",
                "METHOD_NAME": "readDocSalesTypeInfo",
                "DOF_NAME": "DocSalesTypeInfoDOF",
                "QUERY_NAME": "DOCSALESTYPEINFOREAD",
                "QUERY": "SELECT  DOCSALESTYPE_NAME,  DOCSALESTYPE_ISVAT, DOCSALESTYPE.DOCTYPE_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  DOCSALESJOURNAL.ACCOUNT_4NAME FROM FS.DOCSALESTYPE LEFT JOIN (SELECT DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCTYPE_CODE, DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  ACCOUNT.ACCOUNT_4NAME FROM FS.DOCSALESJOURNAL LEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL ON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE WHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE; ",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DOCSALESJOURNAL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "DocSalesJournalGenerateSO",
                "BO_NAME": "ReadDocSalesTypeInfoBO",
                "METHOD_NAME": "readDocSalesTypeInfo",
                "DOF_NAME": "DocSalesTypeInfoDOF",
                "QUERY_NAME": "DOCSALESTYPEINFOREAD",
                "QUERY": "SELECT  DOCSALESTYPE_NAME,  DOCSALESTYPE_ISVAT, DOCSALESTYPE.DOCTYPE_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  DOCSALESJOURNAL.ACCOUNT_4NAME FROM FS.DOCSALESTYPE LEFT JOIN (SELECT DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCTYPE_CODE, DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  ACCOUNT.ACCOUNT_4NAME FROM FS.DOCSALESJOURNAL LEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL ON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE WHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE; ",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DOCSALESJOURNAL_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "DocSalesJournalGenerateSO",
                "BO_NAME": "ReadDocSalesTypeInfoBO",
                "METHOD_NAME": "readDocSalesTypeInfo",
                "DOF_NAME": "DocSalesTypeInfoDOF",
                "QUERY_NAME": "DOCSALESTYPEINFOREAD",
                "QUERY": "SELECT  DOCSALESTYPE_NAME,  DOCSALESTYPE_ISVAT, DOCSALESTYPE.DOCTYPE_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  DOCSALESJOURNAL.ACCOUNT_4NAME FROM FS.DOCSALESTYPE LEFT JOIN (SELECT DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCTYPE_CODE, DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  ACCOUNT.ACCOUNT_4NAME FROM FS.DOCSALESJOURNAL LEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL ON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE WHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE; ",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DOCSALESJOURNAL_DEBITCREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "DocSalesJournalGenerateSO",
                "BO_NAME": "ReadDocSalesTypeInfoBO",
                "METHOD_NAME": "readDocSalesTypeInfo",
                "DOF_NAME": "DocSalesTypeInfoDOF",
                "QUERY_NAME": "DOCSALESTYPEINFOREAD",
                "QUERY": "SELECT  DOCSALESTYPE_NAME,  DOCSALESTYPE_ISVAT, DOCSALESTYPE.DOCTYPE_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  DOCSALESJOURNAL.ACCOUNT_4NAME FROM FS.DOCSALESTYPE LEFT JOIN (SELECT DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCTYPE_CODE, DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  ACCOUNT.ACCOUNT_4NAME FROM FS.DOCSALESJOURNAL LEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL ON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE WHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE; ",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "DocSalesJournalGenerateSO",
                "BO_NAME": "ReadDocSalesTypeInfoBO",
                "METHOD_NAME": "readDocSalesTypeInfo",
                "DOF_NAME": "DocSalesTypeInfoDOF",
                "QUERY_NAME": "DOCSALESTYPEINFOREAD",
                "QUERY": "SELECT  DOCSALESTYPE_NAME,  DOCSALESTYPE_ISVAT, DOCSALESTYPE.DOCTYPE_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  DOCSALESJOURNAL.ACCOUNT_4NAME FROM FS.DOCSALESTYPE LEFT JOIN (SELECT DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCTYPE_CODE, DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  ACCOUNT.ACCOUNT_4NAME FROM FS.DOCSALESJOURNAL LEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL ON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE WHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE; ",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "ACCOUNT_4NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "DocSalesJournalGenerateSO",
                "BO_NAME": "ReadDocSalesTypeInfoBO",
                "METHOD_NAME": "readDocSalesTypeInfo",
                "DOF_NAME": "DocSalesTypeInfoDOF",
                "QUERY_NAME": "DOCSALESTYPEINFOREAD",
                "QUERY": "SELECT  DOCSALESTYPE_NAME,  DOCSALESTYPE_ISVAT, DOCSALESTYPE.DOCTYPE_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  DOCSALESJOURNAL.ACCOUNT_4NAME FROM FS.DOCSALESTYPE LEFT JOIN (SELECT DOCSALESJOURNAL.DOCSALESJOURNAL_CODE,  DOCSALESJOURNAL.DOCTYPE_CODE, DOCSALESJOURNAL.DOCSALESJOURNAL_NAME, DOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT,  DOCSALESJOURNAL.ACCOUNT_CODE,  ACCOUNT.ACCOUNT_4NAME FROM FS.DOCSALESJOURNAL LEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL ON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE WHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE; ",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocBO",
                "METHOD_NAME": "insertDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCINSERT",
                "QUERY": "INSERT  INTO FS.DOC( DOC_ROWSEQ, COMPANY_CODE, DOC_DATE, DOC_ORDER, DOC_MOVEDCOPIED, DOC_PARENT, EMPLOYEE_CODE, SITE_CODE, PROJECT_CODE, DOCTYPE_CODE, LOCALTAX_CODE) VALUES ( (SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC), :COMPANY_CODE, to_date(:DOC_DATE, 'YYYY-MM-DD'), (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE), :DOC_MOVEDCOPIED, :DOC_PARENT, :EMPLOYEE_CODE, :SITE_CODE, :PROJECT_CODE, :DOCTYPE_CODE, :LOCALTAX_CODE);",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_DEBIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_CREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ABSTRACT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNALTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_PRODUCTNAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_TOTALPRICE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_TOTALVAT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_TOTALAMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_ELECTAX"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_CLIENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "CLIENT_OCARD_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALESTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "VATNONDEDUCTIBLE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALESJOURNAL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocInsertSO",
                "BO_NAME": "InsertDocSalesBO",
                "METHOD_NAME": "insertDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESINSERT",
                "QUERY": "INSERT INTO FS.DOCSALES (DOC_ROWSEQ,  DOCSALES_PRODUCTNAME, DOCSALES_TOTALPRICE,  DOCSALES_TOTALVAT,  DOCSALES_TOTALAMOUNT,  DOCSALES_ELECTAX, DOCSALES_CLIENT, CLIENT_CODE, CLIENT_OCARD_CODE, DOCSALESTYPE_CODE,  VATNONDEDUCTIBLE_CODE,  DOCSALESJOURNAL_CODE,  DOCTYPE_CODE) VALUES (:DOC_ROWSEQ,  :DOCSALES_PRODUCTNAME,  :DOCSALES_TOTALPRICE,  :DOCSALES_TOTALVAT,  :DOCSALES_TOTALAMOUNT,  :DOCSALES_ELECTAX,  :DOCSALES_CLIENT, :CLIENT_CODE, :CLIENT_OCARD_CODE, :DOCSALESTYPE_CODE,  :VATNONDEDUCTIBLE_CODE,  :DOCSALESJOURNAL_CODE,  :DOCTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "ReadDocSalesBO",
                "METHOD_NAME": "readDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESREAD",
                "QUERY": "SELECT DOCSALES.DOC_ROWSEQ,  DOCSALES.DOCSALES_PRODUCTNAME,  DOCSALES.DOCSALES_TOTALPRICE,  DOCSALES.DOCSALES_TOTALVAT,  DOCSALES.DOCSALES_TOTALAMOUNT,  DOCSALES.DOCSALES_ELECTAX, DOCSALES.DOCSALES_CLIENT, DOCSALES.CLIENT_CODE, CLIENT.CLIENT_NAME, CLIENT.CLIENT_NUMBER, DOCSALES.DOCSALESTYPE_CODE, DOCSALESTYPE.DOCSALESTYPE_NAME, DOCSALESTYPE_ISVAT, DOCSALES.VATNONDEDUCTIBLE_CODE, VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_NAME, DOCSALES.DOCSALESJOURNAL_CODE, DOCSALES.DOCTYPE_CODE, DOCSALES.CLIENT_OCARD_CODE, CLIENTCARD.CLIENT_NAME AS CLIENT_OCARD_NAME FROM FS.DOCSALES LEFT JOIN FS.CLIENT ON DOCSALES.CLIENT_CODE = CLIENT.CLIENT_CODE LEFT JOIN FS.DOCSALESTYPE ON DOCSALES.DOCSALESTYPE_CODE = DOCSALESTYPE.DOCSALESTYPE_CODE LEFT JOIN FS.VATNONDEDUCTIBLE ON DOCSALES.VATNONDEDUCTIBLE_CODE = VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_CODE LEFT JOIN FS.CLIENT AS CLIENTCARD ON DOCSALES.CLIENT_OCARD_CODE = CLIENTCARD.CLIENT_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocSalesProductNameBO",
                "METHOD_NAME": "updateDocSalesProductName",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESUPDATEPRODUCT",
                "QUERY": "UPDATE FS.DOCSALES SET DOCSALES_PRODUCTNAME = :DOCSALES_PRODUCTNAME WHERE DOC_ROWSEQ = :DOC_ROWSEQ; ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOCSALES_PRODUCTNAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "MoveSalesDocSO",
                "BO_NAME": "UpdateDocSalesProductNameBO",
                "METHOD_NAME": "updateDocSalesProductName",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESUPDATEPRODUCT",
                "QUERY": "UPDATE FS.DOCSALES SET DOCSALES_PRODUCTNAME = :DOCSALES_PRODUCTNAME WHERE DOC_ROWSEQ = :DOC_ROWSEQ; ",
                "SCHEMA": "FS",
                "TABLE": "DOCSALES",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadSingleSalesDocumentSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "EMPLOYEE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadSingleSalesDocumentSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadSingleSalesDocumentSO",
                "BO_NAME": "ReadDocBO",
                "METHOD_NAME": "readDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCREAD",
                "QUERY": "SELECT DOC.DOC_ROWSEQ, DOC.COMPANY_CODE, to_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE, DOC.DOC_ORDER, DOC.DOC_MOVEDCOPIED, DOC.DOC_PARENT, DOC.EMPLOYEE_CODE, EMPDEPT.EMPLOYEE_NAME, EMPDEPT.DEPARTMENT_CODE, EMPDEPT.DEPARTMENT_NAME, DOC.SITE_CODE, SITE.SITE_NAME, DOC.PROJECT_CODE, PROJECT.PROJECT_NAME, DOC.DOCTYPE_CODE, DOCTYPE.DOCTYPE_NAME, DOC.LOCALTAX_CODE, LOCALTAX.LOCALTAX_NAME FROM FS.DOC LEFT JOIN ( SELECT EMPLOYEE.EMPLOYEE_CODE, EMPLOYEE.EMPLOYEE_NAME, EMPLOYEE.DEPARTMENT_CODE, DEPARTMENT.DEPARTMENT_NAME FROM FS.EMPLOYEE LEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE LEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE LEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE LEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE LEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": ".",
                "TABLE": ")",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "ReadSingleSalesDocumentSO",
                "BO_NAME": "ReadDocSalesBO",
                "METHOD_NAME": "readDocSales",
                "DOF_NAME": "DocSalesDOF",
                "QUERY_NAME": "DOCSALESREAD",
                "QUERY": "SELECT DOCSALES.DOC_ROWSEQ,  DOCSALES.DOCSALES_PRODUCTNAME,  DOCSALES.DOCSALES_TOTALPRICE,  DOCSALES.DOCSALES_TOTALVAT,  DOCSALES.DOCSALES_TOTALAMOUNT,  DOCSALES.DOCSALES_ELECTAX, DOCSALES.DOCSALES_CLIENT, DOCSALES.CLIENT_CODE, CLIENT.CLIENT_NAME, CLIENT.CLIENT_NUMBER, DOCSALES.DOCSALESTYPE_CODE, DOCSALESTYPE.DOCSALESTYPE_NAME, DOCSALESTYPE_ISVAT, DOCSALES.VATNONDEDUCTIBLE_CODE, VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_NAME, DOCSALES.DOCSALESJOURNAL_CODE, DOCSALES.DOCTYPE_CODE, DOCSALES.CLIENT_OCARD_CODE, CLIENTCARD.CLIENT_NAME AS CLIENT_OCARD_NAME FROM FS.DOCSALES LEFT JOIN FS.CLIENT ON DOCSALES.CLIENT_CODE = CLIENT.CLIENT_CODE LEFT JOIN FS.DOCSALESTYPE ON DOCSALES.DOCSALESTYPE_CODE = DOCSALESTYPE.DOCSALESTYPE_CODE LEFT JOIN FS.VATNONDEDUCTIBLE ON DOCSALES.VATNONDEDUCTIBLE_CODE = VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_CODE LEFT JOIN FS.CLIENT AS CLIENTCARD ON DOCSALES.CLIENT_OCARD_CODE = CLIENTCARD.CLIENT_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATE",
                "QUERY": "UPDATE FS.DOC SET DOCTYPE_CODE = :DOCTYPE_CODE, DOC_PARENT = :DOC_PARENT, COMPANY_CODE = :COMPANY_CODE, EMPLOYEE_CODE = :EMPLOYEE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ORDER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOCTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_MOVEDCOPIED"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "UpdateDocBO",
                "METHOD_NAME": "updateDoc",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCSUPDATEDATE",
                "QUERY": "UPDATE FS.DOC SET COMPANY_CODE = :COMPANY_CODE, DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'), DOC_ORDER = (SELECT MAX(DOC_ORDER)+1 FROM FS.DOC WHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD') OR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)), EMPLOYEE_CODE = :EMPLOYEE_CODE, DOCTYPE_CODE = :DOCTYPE_CODE, SITE_CODE = :SITE_CODE, PROJECT_CODE = :PROJECT_CODE, LOCALTAX_CODE = :LOCALTAX_CODE, DOC_MOVEDCOPIED = :DOC_MOVEDCOPIED, DOC_PARENT = :DOC_PARENT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "DeleteDocJournalBO",
                "METHOD_NAME": "deleteDocJournal",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCJDELETE",
                "QUERY": "DELETE FROM FS.DOCJOURNAL  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_DEBIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_CREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNAL_ABSTRACT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "InsertDocJournalBO",
                "METHOD_NAME": "insertDocJournal",
                "DOF_NAME": "DocJournalDOF",
                "QUERY_NAME": "DOCJOURNALINSERT",
                "QUERY": "INSERT  INTO FS.DOCJOURNAL( DOCJOURNAL_ROWSEQ, DOCJOURNAL_DEBIT, DOCJOURNAL_CREDIT, DOCJOURNAL_ABSTRACT, ABSTRACT_ID, CLIENT_CODE, DOC_ROWSEQ, ACCOUNT_CODE, DOCJOURNALTYPE_CODE ) VALUES ( (SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL), :DOCJOURNAL_DEBIT, :DOCJOURNAL_CREDIT, :DOCJOURNAL_ABSTRACT, :ABSTRACT_ID, :CLIENT_CODE, :DOC_ROWSEQ, :ACCOUNT_CODE, :DOCJOURNALTYPE_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DOCJOURNAL",
                "COLUMN": "DOCJOURNALTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "document",
                "DEPTH 3": "salesdoc",
                "DEPTH 4": "so",
                "SO_NAME": "SalesDocUpdateSO",
                "BO_NAME": "DeleteDocProductBO",
                "METHOD_NAME": "deleteDocProduct",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCPRODUCTDELETE",
                "QUERY": "DELETE FROM FS.DOCPRODUCT WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOCPRODUCT",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "dq",
                "SO_NAME": "ReadPivotSO",
                "BO_NAME": "ReadPivotBO",
                "METHOD_NAME": "readPivot",
                "DOF_NAME": ":_dynamicDqDOF",
                "QUERY_NAME": "DQSELECT",
                "QUERY": "SELECT * FROM KH.DQTESTMAIN, (SELECT * FROM KH.DQTESTKEYVALUE PIVOT ( MAX (DUMMYCOLUMN_VALUE) FOR DUMMYCOLUMN_KEYCODE IN :_dynamic)) AS DQTESTPIVOT WHERE DQTESTMAIN.DUMMYCOLUMN_EMPNO = DQTESTPIVOT.DUMMYCOLUMN_EMPNO",
                "SCHEMA": ":_DYNAMIC",
                "TABLE": ")",
                "COLUMN": "DUMMYCOLUMN_EMPNO"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteLocalTaxCodeSO",
                "BO_NAME": "DelectLocalTaxCodeBO",
                "METHOD_NAME": "DeleteMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ DELETE FROM FS.LOCALTAX WHERE     LOCALTAX_CODE = :LOCALTAX_CODE; ",
                "SCHEMA": "FROM",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteLocalTaxSO",
                "BO_NAME": "DeleteLocalTaxBO",
                "METHOD_NAME": "DeleteMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ DELETE FROM FS.LOCALTAX WHERE     LOCALTAX_CODE = :LOCALTAX_CODE; ",
                "SCHEMA": "FROM",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "InsertLocalTaxCodeSO",
                "BO_NAME": "InsertLocalTaxCodeBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ INSERT INTO FS.LOCALTAX (     LOCALTAX_CODE,     LOCALTAX_NAME ) VALUES (     :LOCALTAX_CODE,     :LOCALTAX_NAME )",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "LOCALTAX"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "InsertLocalTaxCodeSO",
                "BO_NAME": "InsertLocalTaxCodeBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ INSERT INTO FS.LOCALTAX (     LOCALTAX_CODE,     LOCALTAX_NAME ) VALUES (     :LOCALTAX_CODE,     :LOCALTAX_NAME )",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "InsertLocalTaxCodeSO",
                "BO_NAME": "InsertLocalTaxCodeBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ INSERT INTO FS.LOCALTAX (     LOCALTAX_CODE,     LOCALTAX_NAME ) VALUES (     :LOCALTAX_CODE,     :LOCALTAX_NAME )",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateLocalTaxSO",
                "BO_NAME": "UpdateLocalTaxBO",
                "METHOD_NAME": "UpdateMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ UPDATE     FS.LOCALTAX SET     LOCALTAX_CODE = :LOCALTAX_CODE,     LOCALTAX_NAME = :LOCALTAX_NAME WHERE     LOCALTAX_CODE = :LOCALTAX_CODE; ",
                "SCHEMA": "/* COM.TMAX.FS.DEPTH1.DEPTH2.SO.LOCALTAXDOF */",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtax",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateLocalTaxSO",
                "BO_NAME": "UpdateLocalTaxBO",
                "METHOD_NAME": "UpdateMethod",
                "DOF_NAME": "LocalTaxDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */ UPDATE     FS.LOCALTAX SET     LOCALTAX_CODE = :LOCALTAX_CODE,     LOCALTAX_NAME = :LOCALTAX_NAME WHERE     LOCALTAX_CODE = :LOCALTAX_CODE; ",
                "SCHEMA": "/* COM.TMAX.FS.DEPTH1.DEPTH2.SO.LOCALTAXDOF */",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtaxcorptype",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteLocalTaxCorpTypeSO",
                "BO_NAME": "DeleteLocalTaxCorpTypeBO",
                "METHOD_NAME": "DeleteMethod",
                "DOF_NAME": "LocalTaxCorpTypeDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */ DELETE FROM FS.LOCALTAX_CORP_TYPE WHERE     LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE; ",
                "SCHEMA": "FROM",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CORP_TYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtaxcorptype",
                "DEPTH 5": "so",
                "SO_NAME": "InsertLocalTaxCorpTypeCodeSO",
                "BO_NAME": "InsertLocalTaxCorpTypeCodeBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxCorpTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */ INSERT INTO FS.LOCALTAX_CORP_TYPE (     LOCALTAX_CORP_TYPE_CODE,     LOCALTAX_CORP_TYPE_CORPERATION ) VALUES (     :LOCALTAX_CORP_TYPE_CODE,     :LOCALTAX_CORP_TYPE_CORPERATION )",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CORP_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtaxcorptype",
                "DEPTH 5": "so",
                "SO_NAME": "InsertLocalTaxCorpTypeCodeSO",
                "BO_NAME": "InsertLocalTaxCorpTypeCodeBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxCorpTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */ INSERT INTO FS.LOCALTAX_CORP_TYPE (     LOCALTAX_CORP_TYPE_CODE,     LOCALTAX_CORP_TYPE_CORPERATION ) VALUES (     :LOCALTAX_CORP_TYPE_CODE,     :LOCALTAX_CORP_TYPE_CORPERATION )",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CORP_TYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtaxcorptype",
                "DEPTH 5": "so",
                "SO_NAME": "InsertLocalTaxCorpTypeCodeSO",
                "BO_NAME": "InsertLocalTaxCorpTypeCodeBO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "LocalTaxCorpTypeDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */ INSERT INTO FS.LOCALTAX_CORP_TYPE (     LOCALTAX_CORP_TYPE_CODE,     LOCALTAX_CORP_TYPE_CORPERATION ) VALUES (     :LOCALTAX_CORP_TYPE_CODE,     :LOCALTAX_CORP_TYPE_CORPERATION )",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CORP_TYPE_CORPERATION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtaxcorptype",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateLocalTaxCorpTypeSO",
                "BO_NAME": "UpdateLocalTaxCorpTypeBO",
                "METHOD_NAME": "UpdateMethod",
                "DOF_NAME": "LocalTaxCorpTypeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */ UPDATE     FS.LOCALTAX_CORP_TYPE SET     LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE,     LOCALTAX_CORP_TYPE_CORPERATION = :LOCALTAX_CORP_TYPE_CORPERATION WHERE     LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE; ",
                "SCHEMA": "/* COM.TMAX.FS.LOCALTAXCORPTYPE.LOCALTAXCORPTYPEDOF */",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CORP_TYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "localtaxcorptype",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateLocalTaxCorpTypeSO",
                "BO_NAME": "UpdateLocalTaxCorpTypeBO",
                "METHOD_NAME": "UpdateMethod",
                "DOF_NAME": "LocalTaxCorpTypeDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */ UPDATE     FS.LOCALTAX_CORP_TYPE SET     LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE,     LOCALTAX_CORP_TYPE_CORPERATION = :LOCALTAX_CORP_TYPE_CORPERATION WHERE     LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE; ",
                "SCHEMA": "/* COM.TMAX.FS.LOCALTAXCORPTYPE.LOCALTAXCORPTYPEDOF */",
                "TABLE": ".",
                "COLUMN": "LOCALTAX_CORP_TYPE_CORPERATION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteFixedAssetSO",
                "BO_NAME": "DeleteFixedAssetBO",
                "METHOD_NAME": "DeleteFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.FIXEDASSET WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":FIXEDASSET_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":EMPLOYEE_USE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":INDUSTRY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":FIXEDASSET_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "TO_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": ":FIXEDASSET_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "InsertFixedAssetSO",
                "BO_NAME": "InsertFixedAssetBO",
                "METHOD_NAME": "insertFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.FIXEDASSET VALUES (     :FIXEDASSET_CODE,     :ACCOUNT_CODE,     :EMPLOYEE_USE_CODE,     :SITE_CODE,     :INDUSTRY_CODE,     :PROJECT_CODE,     :FIXEDASSET_NAME, \tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),     :FIXEDASSET_AMOUNTSET,     :FIXEDASSET_PRECUTSUM,     :FIXEDASSET_PRESET,     :FIXEDASSET_NEWPLUS,     :FIXEDASSET_PARTSELLDISUSE,     :FIXEDASSET_TRUSTAMOUNTSET,     :FIXEDASSET_TRUSTCUTSUM,     :FIXEDASSET_TRUSTCUTSET,     :FIXEDASSET_CUTSET,     :FIXEDASSET_CUTTYPE_CODE,     :FIXEDASSET_DURATIONRATIO,     :FIXEDASSET_DURATIONTIME,     TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),     :FIXEDASSET_CUTAMOUNT,     :FIXEDASSET_TRUSTBOOKAMOUNT,     :FIXEDASSET_PREOVERCUTSUM,     :FIXEDASSET_PREPAYSUM,     :FIXEDASSET_CUTNOW,     :FIXEDASSET_CUTASSUMESUM,     :FIXEDASSET_CUTRANGE,     :FIXEDASSET_CUTRATIO,     :FIXEDASSET_SPECIALCUTRATIO,     :FIXEDASSET_SPECIALCUTAMOUNT,     :FIXEDASSET_CUTSUM,     :FIXEDASSET_SET,     :FIXEDASSET_ISSPECIAL_CODE,     :FIXEDASSET_ISCAR_CODE,     :FIXEDASSET_AMOUNT,     :FIXEDASSET_TYPERANGE_CODE,     TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MINOVERCUTSET,     :FIXEDASSET_CUTASSUMEAMOUNT,     TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),     :FIXEDASSET_MANAGECODE,     :FIXEDASSET_GETBY,     :FIXEDASSET_MADEBY,     :FIXEDASSET_SIZE,     :FIXEDASSET_MODEL,     :FIXEDASSET_REMARKS,     :FIXEDASSET_HISTORY,     :FIXEDASSET_TYPE_CODE,     :COMPANY_CODE,     :EMPLOYEE_MANAGE_CODE,     :FIXEDASSET_ISSPECIAL_YEAR );",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "'YYYY.MM.DD'"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "EMPLOYEE_USE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "INDUSTRY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_AMOUNTSET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_PRECUTSUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_PRESET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_NEWPLUS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_PARTSELLDISUSE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_TRUSTAMOUNTSET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_TRUSTCUTSUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_TRUSTCUTSET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTSET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_DURATIONRATIO"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_DURATIONTIME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_ISCUTFINISHDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTAMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_TRUSTBOOKAMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_PREOVERCUTSUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_PREPAYSUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTNOW"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTASSUMESUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTRANGE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTRATIO"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_SPECIALCUTRATIO"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_SPECIALCUTAMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTSUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_SET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_ISSPECIAL_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_ISCAR_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_TYPERANGE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_GIVEDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_MINOVERCUTSET"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTASSUMEAMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_DISUSEDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_MANAGECODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_GETBY"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_MADEBY"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_SIZE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_MODEL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_REMARKS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_HISTORY"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "EMPLOYEE_MANAGE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_ISSPECIAL_YEAR"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetSO",
                "BO_NAME": "UpdateFixedAssetBO",
                "METHOD_NAME": "updateFixedAsset",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.FIXEDASSET SET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,   SITE_CODE =  :SITE_CODE,   INDUSTRY_CODE =  :INDUSTRY_CODE,   PROJECT_CODE =  :PROJECT_CODE,   FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,   FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,   FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,   FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,   FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,   FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,   FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,   FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,   FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,   FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,   FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,   FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,   FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,   FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,   FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,   FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,   FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,   FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,   FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,   FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,   FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,   FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,   FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,   FIXEDASSET_SET =  :FIXEDASSET_SET,   FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,   FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,   FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,   FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,   FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,   FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,   FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),   FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,   FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,   FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,   FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,   FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,   FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,   FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,   EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,   FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetTableSO",
                "BO_NAME": "UpdateFixedAssetTableBO",
                "METHOD_NAME": "updateFixedAssetTable",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATETABLE",
                "QUERY": "UPDATE FS.FIXEDASSET SET FIXEDASSET_CODE = :FIXEDASSET_CODE,   FIXEDASSET_NAME = :FIXEDASSET_NAME,   FIXEDASSET_DATE = TO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTTYPE_CODE = :FIXEDASSET_CUTTYPE_CODE WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetTableSO",
                "BO_NAME": "UpdateFixedAssetTableBO",
                "METHOD_NAME": "updateFixedAssetTable",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATETABLE",
                "QUERY": "UPDATE FS.FIXEDASSET SET FIXEDASSET_CODE = :FIXEDASSET_CODE,   FIXEDASSET_NAME = :FIXEDASSET_NAME,   FIXEDASSET_DATE = TO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTTYPE_CODE = :FIXEDASSET_CUTTYPE_CODE WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetTableSO",
                "BO_NAME": "UpdateFixedAssetTableBO",
                "METHOD_NAME": "updateFixedAssetTable",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATETABLE",
                "QUERY": "UPDATE FS.FIXEDASSET SET FIXEDASSET_CODE = :FIXEDASSET_CODE,   FIXEDASSET_NAME = :FIXEDASSET_NAME,   FIXEDASSET_DATE = TO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTTYPE_CODE = :FIXEDASSET_CUTTYPE_CODE WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "fixed",
                "DEPTH 4": "register",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateFixedAssetTableSO",
                "BO_NAME": "UpdateFixedAssetTableBO",
                "METHOD_NAME": "updateFixedAssetTable",
                "DOF_NAME": "FixedAssetDOF",
                "QUERY_NAME": "UPDATETABLE",
                "QUERY": "UPDATE FS.FIXEDASSET SET FIXEDASSET_CODE = :FIXEDASSET_CODE,   FIXEDASSET_NAME = :FIXEDASSET_NAME,   FIXEDASSET_DATE = TO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),   FIXEDASSET_CUTTYPE_CODE = :FIXEDASSET_CUTTYPE_CODE WHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;",
                "SCHEMA": "FS",
                "TABLE": "FIXEDASSET",
                "COLUMN": "FIXEDASSET_CUTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "deleteAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.ABSTRACT WHERE ABSTRACT_ID = :ABSTRACT_ID;",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "insertAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.ABSTRACT (     ABSTRACT_ID,     ABSTRACT_NAME,     ABSTRACT_CODE,     ABSTRACT_TYPE,     ACCOUNT_CODE,     ABSTRACT_EXTRA ) VALUES (     :ABSTRACT_ID,     :ABSTRACT_NAME,     :ABSTRACT_CODE,     :ABSTRACT_TYPE,     :ACCOUNT_CODE,     :ABSTRACT_EXTRA);",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "insertAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.ABSTRACT (     ABSTRACT_ID,     ABSTRACT_NAME,     ABSTRACT_CODE,     ABSTRACT_TYPE,     ACCOUNT_CODE,     ABSTRACT_EXTRA ) VALUES (     :ABSTRACT_ID,     :ABSTRACT_NAME,     :ABSTRACT_CODE,     :ABSTRACT_TYPE,     :ACCOUNT_CODE,     :ABSTRACT_EXTRA);",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "insertAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.ABSTRACT (     ABSTRACT_ID,     ABSTRACT_NAME,     ABSTRACT_CODE,     ABSTRACT_TYPE,     ACCOUNT_CODE,     ABSTRACT_EXTRA ) VALUES (     :ABSTRACT_ID,     :ABSTRACT_NAME,     :ABSTRACT_CODE,     :ABSTRACT_TYPE,     :ACCOUNT_CODE,     :ABSTRACT_EXTRA);",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "insertAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.ABSTRACT (     ABSTRACT_ID,     ABSTRACT_NAME,     ABSTRACT_CODE,     ABSTRACT_TYPE,     ACCOUNT_CODE,     ABSTRACT_EXTRA ) VALUES (     :ABSTRACT_ID,     :ABSTRACT_NAME,     :ABSTRACT_CODE,     :ABSTRACT_TYPE,     :ACCOUNT_CODE,     :ABSTRACT_EXTRA);",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "insertAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.ABSTRACT (     ABSTRACT_ID,     ABSTRACT_NAME,     ABSTRACT_CODE,     ABSTRACT_TYPE,     ACCOUNT_CODE,     ABSTRACT_EXTRA ) VALUES (     :ABSTRACT_ID,     :ABSTRACT_NAME,     :ABSTRACT_CODE,     :ABSTRACT_TYPE,     :ACCOUNT_CODE,     :ABSTRACT_EXTRA);",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "insertAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.ABSTRACT (     ABSTRACT_ID,     ABSTRACT_NAME,     ABSTRACT_CODE,     ABSTRACT_TYPE,     ACCOUNT_CODE,     ABSTRACT_EXTRA ) VALUES (     :ABSTRACT_ID,     :ABSTRACT_NAME,     :ABSTRACT_CODE,     :ABSTRACT_TYPE,     :ACCOUNT_CODE,     :ABSTRACT_EXTRA);",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_EXTRA"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "updateAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ABSTRACT SET     ABSTRACT_NAME = :ABSTRACT_NAME,     ABSTRACT_CODE = :ABSTRACT_CODE,     ABSTRACT_TYPE = :ABSTRACT_TYPE,     ABSTRACT_EXTRA =:ABSTRACT_EXTRA WHERE ABSTRACT_ID = :ABSTRACT_ID; ",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "updateAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ABSTRACT SET     ABSTRACT_NAME = :ABSTRACT_NAME,     ABSTRACT_CODE = :ABSTRACT_CODE,     ABSTRACT_TYPE = :ABSTRACT_TYPE,     ABSTRACT_EXTRA =:ABSTRACT_EXTRA WHERE ABSTRACT_ID = :ABSTRACT_ID; ",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "updateAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ABSTRACT SET     ABSTRACT_NAME = :ABSTRACT_NAME,     ABSTRACT_CODE = :ABSTRACT_CODE,     ABSTRACT_TYPE = :ABSTRACT_TYPE,     ABSTRACT_EXTRA =:ABSTRACT_EXTRA WHERE ABSTRACT_ID = :ABSTRACT_ID; ",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "updateAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ABSTRACT SET     ABSTRACT_NAME = :ABSTRACT_NAME,     ABSTRACT_CODE = :ABSTRACT_CODE,     ABSTRACT_TYPE = :ABSTRACT_TYPE,     ABSTRACT_EXTRA =:ABSTRACT_EXTRA WHERE ABSTRACT_ID = :ABSTRACT_ID; ",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_EXTRA"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "abs",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAbstractSO",
                "BO_NAME": "CRUDAbstractBO",
                "METHOD_NAME": "updateAbstract",
                "DOF_NAME": "AbstractCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ABSTRACT SET     ABSTRACT_NAME = :ABSTRACT_NAME,     ABSTRACT_CODE = :ABSTRACT_CODE,     ABSTRACT_TYPE = :ABSTRACT_TYPE,     ABSTRACT_EXTRA =:ABSTRACT_EXTRA WHERE ABSTRACT_ID = :ABSTRACT_ID; ",
                "SCHEMA": "FS",
                "TABLE": "ABSTRACT",
                "COLUMN": "ABSTRACT_ID"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "deleteAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.ACCOUNT WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_4NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_USAGE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_REL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_PRNAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_ENG"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_3NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_2NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_1NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "InsertAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "insertAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "INSERT_ALL",
                "QUERY": "INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN)  VALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_ADMIN"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_4NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_USAGE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_REL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_PRNAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_ENG"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_3NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_2NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_1NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_ADMIN"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAccountSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccount",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN WHERE ACCOUNT_CODE=:ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateDebitListSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccountDebitList",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATEDEBITLIST",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_DEBIT = '1' WHERE  ((ACCOUNT_1NAME IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST) OR ACCOUNT_2NAME IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST)) AND ACCOUNT_TYPE = '1') OR ((ACCOUNT_1NAME NOT IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST) AND ACCOUNT_2NAME NOT IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST)) AND ACCOUNT_TYPE = '2') ;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_DEBIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "account",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateDebitListSO",
                "BO_NAME": "CRUDAccountBO",
                "METHOD_NAME": "updateAccountDebitList",
                "DOF_NAME": "AccountCRUDDOF",
                "QUERY_NAME": "UPDATEDEBITLIST",
                "QUERY": "UPDATE FS.ACCOUNT SET ACCOUNT_DEBIT = '1' WHERE  ((ACCOUNT_1NAME IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST) OR ACCOUNT_2NAME IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST)) AND ACCOUNT_TYPE = '1') OR ((ACCOUNT_1NAME NOT IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST) AND ACCOUNT_2NAME NOT IN (SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST)) AND ACCOUNT_TYPE = '2') ;",
                "SCHEMA": "FS",
                "TABLE": "ACCOUNT",
                "COLUMN": "ACCOUNT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "DeletePBSSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "DeletePBS",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "DeleteRow",
                "QUERY": "DELETE FROM FS.PREBALANCESHEET WHERE ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "InsertPBSCodeSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "InsertPBSCode",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "InsertCode",
                "QUERY": "INSERT INTO FS.PREBALANCESHEET (ACCOUNT_CODE ) SELECT ACCOUNT_CODE  FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePBSDebitCreditSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "UpdatePBSDebitCredit",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "UpdateDebitCredit",
                "QUERY": "UPDATE     FS.PREBALANCESHEET SET     PREBALANCESHEET_DEBIT = :PREBALANCESHEET_DEBIT,     PREBALANCESHEET_CREDIT = :PREBALANCESHEET_CREDIT,     PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR      WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "PREBALANCESHEET_DEBIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePBSDebitCreditSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "UpdatePBSDebitCredit",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "UpdateDebitCredit",
                "QUERY": "UPDATE     FS.PREBALANCESHEET SET     PREBALANCESHEET_DEBIT = :PREBALANCESHEET_DEBIT,     PREBALANCESHEET_CREDIT = :PREBALANCESHEET_CREDIT,     PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR      WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "PREBALANCESHEET_CREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePBSDebitCreditSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "UpdatePBSDebitCredit",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "UpdateDebitCredit",
                "QUERY": "UPDATE     FS.PREBALANCESHEET SET     PREBALANCESHEET_DEBIT = :PREBALANCESHEET_DEBIT,     PREBALANCESHEET_CREDIT = :PREBALANCESHEET_CREDIT,     PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR      WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "PREBALANCESHEET_YEAR"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePBSDebitCreditSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "UpdatePBSDebitCredit",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "UpdateDebitCredit",
                "QUERY": "UPDATE     FS.PREBALANCESHEET SET     PREBALANCESHEET_DEBIT = :PREBALANCESHEET_DEBIT,     PREBALANCESHEET_CREDIT = :PREBALANCESHEET_CREDIT,     PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR      WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateYearSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "UpdateYear",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "UpdateYear",
                "QUERY": "UPDATE     FS.PREBALANCESHEET SET \tPREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "PREBALANCESHEET_YEAR"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "prebalancesheet",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateYearSO",
                "BO_NAME": "PBSBO",
                "METHOD_NAME": "UpdateYear",
                "DOF_NAME": "PBSDOF",
                "QUERY_NAME": "UpdateYear",
                "QUERY": "UPDATE     FS.PREBALANCESHEET SET \tPREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PREBALANCESHEET",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteCCOSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "DeleteCCO",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "DeleteCCO",
                "QUERY": "DELETE FROM FS.PRECCO WHERE CLIENT_CODE = :CLIENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "InsertCCOCodeSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "InsertCCOCode",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "InsertCCOCode",
                "QUERY": "INSERT INTO FS.PRECCO (CLIENT_CODE) SELECT CLIENT_CODE FROM FS.CLIENT WHERE CLIENT_CODE = :CLIENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCCOAccountSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "UpdateCCOCode",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "UpdateCCOCode",
                "QUERY": "UPDATE    FS.PRECCO SET    CLIENT_CODE = :CLIENT_CODE WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCCOAccountSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "UpdateCCOCode",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "UpdateCCOCode",
                "QUERY": "UPDATE    FS.PRECCO SET    CLIENT_CODE = :CLIENT_CODE WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCCOAmountSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "UpdateCCOAmount",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "UpdateCCOAmount",
                "QUERY": "UPDATE    FS.PRECCO SET    PRECCO_AMOUNT = :PRECCO_AMOUNT WHERE     CLIENT_CODE = :CLIENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "PRECCO_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCCOAmountSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "UpdateCCOAmount",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "UpdateCCOAmount",
                "QUERY": "UPDATE    FS.PRECCO SET    PRECCO_AMOUNT = :PRECCO_AMOUNT WHERE     CLIENT_CODE = :CLIENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCCOCodeSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "UpdateCCOCode",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "UpdateCCOCode",
                "QUERY": "UPDATE    FS.PRECCO SET    CLIENT_CODE = :CLIENT_CODE WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precco",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCCOCodeSO",
                "BO_NAME": "CCOBO",
                "METHOD_NAME": "UpdateCCOCode",
                "DOF_NAME": "CCODOF",
                "QUERY_NAME": "UpdateCCOCode",
                "QUERY": "UPDATE    FS.PRECCO SET    CLIENT_CODE = :CLIENT_CODE WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECCO",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precostofgoods",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteCOGSO",
                "BO_NAME": "COGBO",
                "METHOD_NAME": "DeleteCOG",
                "DOF_NAME": "COGDOF",
                "QUERY_NAME": "DeleteRow",
                "QUERY": "DELETE FROM FS.PRECOSTOFGOODS WHERE ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECOSTOFGOODS",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precostofgoods",
                "DEPTH 5": "so",
                "SO_NAME": "InsertCOGCodeSO",
                "BO_NAME": "COGBO",
                "METHOD_NAME": "InsertCOGCode",
                "DOF_NAME": "COGDOF",
                "QUERY_NAME": "InsertCode",
                "QUERY": "INSERT INTO FS.PRECOSTOFGOODS (ACCOUNT_CODE) SELECT ACCOUNT_CODE FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECOSTOFGOODS",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precostofgoods",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCOGAmountSO",
                "BO_NAME": "COGBO",
                "METHOD_NAME": "UpdateCOGAmount",
                "DOF_NAME": "COGDOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PRECOSTOFGOODS SET    PRECOSTOFGOODS_AMOUNT = :PRECOSTOFGOODS_AMOUNT WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECOSTOFGOODS",
                "COLUMN": "PRECOSTOFGOODS_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "precostofgoods",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateCOGAmountSO",
                "BO_NAME": "COGBO",
                "METHOD_NAME": "UpdateCOGAmount",
                "DOF_NAME": "COGDOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PRECOSTOFGOODS SET    PRECOSTOFGOODS_AMOUNT = :PRECOSTOFGOODS_AMOUNT WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRECOSTOFGOODS",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "DeletePISSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "DeletePIS",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "DeleteRow",
                "QUERY": "DELETE FROM FS.PREINCOMESTATEMENT WHERE ACCOUNT_CODE = :ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISAmountSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISAmount",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PREINCOMESTATEMENT SET    PREINCOMESTATEMENT_AMOUNT = :PREINCOMESTATEMENT_AMOUNT,    PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD'),    PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD')     WHERE     ACCOUNT_CODE = :ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISAmountSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISAmount",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PREINCOMESTATEMENT SET    PREINCOMESTATEMENT_AMOUNT = :PREINCOMESTATEMENT_AMOUNT,    PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD'),    PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD')     WHERE     ACCOUNT_CODE = :ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_STDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISAmountSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISAmount",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PREINCOMESTATEMENT SET    PREINCOMESTATEMENT_AMOUNT = :PREINCOMESTATEMENT_AMOUNT,    PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD'),    PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD')     WHERE     ACCOUNT_CODE = :ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_EDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISAmountSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISAmount",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PREINCOMESTATEMENT SET    PREINCOMESTATEMENT_AMOUNT = :PREINCOMESTATEMENT_AMOUNT,    PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD'),    PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD')     WHERE     ACCOUNT_CODE = :ACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISEdDateSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISEdDate",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateEDDate",
                "QUERY": "UPDATE     FS.PREINCOMESTATEMENT SET     PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD') WHERE     PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD');",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_EDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISEdDateSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISEdDate",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateEDDate",
                "QUERY": "UPDATE     FS.PREINCOMESTATEMENT SET     PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD') WHERE     PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD');",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_STDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISStDateSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISStDate",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateSTDate",
                "QUERY": "UPDATE     FS.PREINCOMESTATEMENT SET     PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD') WHERE     PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD');",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_STDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "preincomestatement",
                "DEPTH 5": "so",
                "SO_NAME": "UpdatePISStDateSO",
                "BO_NAME": "PISBO",
                "METHOD_NAME": "UpdatePISStDate",
                "DOF_NAME": "PISDOF",
                "QUERY_NAME": "UpdateSTDate",
                "QUERY": "UPDATE     FS.PREINCOMESTATEMENT SET     PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD') WHERE     PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD');",
                "SCHEMA": "FS",
                "TABLE": "PREINCOMESTATEMENT",
                "COLUMN": "PREINCOMESTATEMENT_EDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteSOASO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "DeleteSOA",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "DeleteRow",
                "QUERY": "DELETE FROM FS.PRESOA WHERE ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "InsertSOASubjectSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "InsertSOASubject",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "InsertSubject",
                "QUERY": "INSERT INTO FS.PRESOA (PRESOA_SUBJECT) VALUES ( :PRESOA_SUBJECT)",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "PRESOA_SUBJECT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOAAmountSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOAAmount",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PRESOA SET    PRESOA_AMOUNT = :PRESOA_AMOUNT WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "PRESOA_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOAAmountSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOAAmount",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateAmount",
                "QUERY": "UPDATE    FS.PRESOA SET    PRESOA_AMOUNT = :PRESOA_AMOUNT WHERE     ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOACodeSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOACode",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateCode",
                "QUERY": "UPDATE \tFS.PRESOA SET     ACCOUNT_CODE = (SELECT ACCOUNT_CODE FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOAEdDateSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOAEdDate",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateEdDate",
                "QUERY": "UPDATE     FS.PRESOA SET     PRESOA_EDDATE =to_date(:PRESOA_EDDATE, 'YYYY/MM/DD') WHERE     PRESOA_STDATE =to_date(:PRESOA_STDATE, 'YYYY/MM/DD')",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "PRESOA_EDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOAEdDateSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOAEdDate",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateEdDate",
                "QUERY": "UPDATE     FS.PRESOA SET     PRESOA_EDDATE =to_date(:PRESOA_EDDATE, 'YYYY/MM/DD') WHERE     PRESOA_STDATE =to_date(:PRESOA_STDATE, 'YYYY/MM/DD')",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "PRESOA_STDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOAStDateSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOAStDate",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateStDate",
                "QUERY": "UPDATE \tFS.PRESOA SET     PRESOA_STDATE =to_date(:PRESOA_STDATE, 'YYYY/MM/DD') WHERE     PRESOA_EDDATE =to_date(:PRESOA_EDDATE, 'YYYY/MM/DD')",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "PRESOA_STDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "presoa",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSOAStDateSO",
                "BO_NAME": "SOABO",
                "METHOD_NAME": "UpdateSOAStDate",
                "DOF_NAME": "SOADOF",
                "QUERY_NAME": "UpdateStDate",
                "QUERY": "UPDATE \tFS.PRESOA SET     PRESOA_STDATE =to_date(:PRESOA_STDATE, 'YYYY/MM/DD') WHERE     PRESOA_EDDATE =to_date(:PRESOA_EDDATE, 'YYYY/MM/DD')",
                "SCHEMA": "FS",
                "TABLE": "PRESOA",
                "COLUMN": "PRESOA_EDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "B"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "B"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "LEFTVAL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "A"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "STDACCOUNT_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "FROM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "FS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "STDACCOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "AS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "A"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "SELECT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "SUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert11BO",
                "METHOD_NAME": "InsertMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT11",
                "QUERY": "INSERT INTO FS.INCOME01 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL FROM  ( SELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,  DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE FROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE LEFT JOIN FS.DOCUMENT ON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE where (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS(  TO_DATE(CONCAT( (select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual))) ) GROUP BY STDACCOUNT_CODE  ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME01",
                "COLUMN": "DOCJOURNAL_CREDIT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "B"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "B"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "LEFTVAL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "A"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "STDACCOUNT_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "FROM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "FS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "STDACCOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "AS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "A"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "SELECT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "SUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDate01SO",
                "BO_NAME": "Insert12BO",
                "METHOD_NAME": "Insert12",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT12",
                "QUERY": "INSERT INTO FS.INCOME02 SELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT  FROM FS.STDACCOUNT AS A,   (  SELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL FROM ( SELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT FROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE  LEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE WHERE A.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12)) AND A.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual) ) GROUP BY STDACCOUNT_CODE ) AS B WHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "INCOME02",
                "COLUMN": "PREINCOMESTATEMENT_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert13BO",
                "METHOD_NAME": "Insert13",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT13",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS01',NULL,NULL,  --매출액 --당기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT VALUES ('IS09',NULL,NULL,  --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS01',NULL,NULL, --매출액  --전기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT2 VALUES ('IS09',NULL,NULL, --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT2 VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) SELECT * FROM DUAL; ",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "ISCOMPONENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert13BO",
                "METHOD_NAME": "Insert13",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT13",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS01',NULL,NULL,  --매출액 --당기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT VALUES ('IS09',NULL,NULL,  --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS01',NULL,NULL, --매출액  --전기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT2 VALUES ('IS09',NULL,NULL, --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT2 VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) SELECT * FROM DUAL; ",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert13BO",
                "METHOD_NAME": "Insert13",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT13",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS01',NULL,NULL,  --매출액 --당기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT VALUES ('IS09',NULL,NULL,  --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS01',NULL,NULL, --매출액  --전기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT2 VALUES ('IS09',NULL,NULL, --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT2 VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) SELECT * FROM DUAL; ",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "'IS01'"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert13BO",
                "METHOD_NAME": "Insert13",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT13",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS01',NULL,NULL,  --매출액 --당기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT VALUES ('IS09',NULL,NULL,  --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS01',NULL,NULL, --매출액  --전기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT2 VALUES ('IS09',NULL,NULL, --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT2 VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) SELECT * FROM DUAL; ",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "NULL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert13BO",
                "METHOD_NAME": "Insert13",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT13",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS01',NULL,NULL,  --매출액 --당기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT VALUES ('IS09',NULL,NULL,  --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS01',NULL,NULL, --매출액  --전기 테이블에서 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS01' GROUP BY STDACCOUNT_PARENT ),0)) INTO FS.ISCOMPONENT2 VALUES ('IS09',NULL,NULL, --매출원가 NVL(( SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) + NVL(( SELECT SUM( NVL(RIGHTVAL,0) ) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_PARENT = 'IS09' GROUP BY STDACCOUNT_PARENT ),0) ) INTO FS.ISCOMPONENT2 VALUES ('IS21',NULL,NULL, --판관비 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS63',NULL,NULL, --영업외손익(수익) NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS81',NULL,NULL, --영업외비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT) ,0)) INTO FS.ISCOMPONENT2 VALUES ('IS100',NULL,NULL, --법인세비용 NVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT) ,0)) SELECT * FROM DUAL; ",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "NULL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert14BO",
                "METHOD_NAME": "Insert14",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT14",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS20',NULL,NULL,  (  --당기매출총이익(로우넘1로 멀티 서브쿼리 방지해줘야.. 피오문제)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) INTO FS.ISCOMPONENT2 VALUES ('IS20',NULL,NULL,  (  --전기매출총이익(ROWNUM)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "ISCOMPONENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert14BO",
                "METHOD_NAME": "Insert14",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT14",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS20',NULL,NULL,  (  --당기매출총이익(로우넘1로 멀티 서브쿼리 방지해줘야.. 피오문제)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) INTO FS.ISCOMPONENT2 VALUES ('IS20',NULL,NULL,  (  --전기매출총이익(ROWNUM)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert14BO",
                "METHOD_NAME": "Insert14",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT14",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS20',NULL,NULL,  (  --당기매출총이익(로우넘1로 멀티 서브쿼리 방지해줘야.. 피오문제)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) INTO FS.ISCOMPONENT2 VALUES ('IS20',NULL,NULL,  (  --전기매출총이익(ROWNUM)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "'IS20'"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert14BO",
                "METHOD_NAME": "Insert14",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT14",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS20',NULL,NULL,  (  --당기매출총이익(로우넘1로 멀티 서브쿼리 방지해줘야.. 피오문제)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) INTO FS.ISCOMPONENT2 VALUES ('IS20',NULL,NULL,  (  --전기매출총이익(ROWNUM)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "NULL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert14BO",
                "METHOD_NAME": "Insert14",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT14",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT VALUES ('IS20',NULL,NULL,  (  --당기매출총이익(로우넘1로 멀티 서브쿼리 방지해줘야.. 피오문제)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) INTO FS.ISCOMPONENT2 VALUES ('IS20',NULL,NULL,  (  --전기매출총이익(ROWNUM)  SELECT NVL(RIGHTVAL,0) -   (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)  FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1 )) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "NULL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert15BO",
                "METHOD_NAME": "Insert15",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT15",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT --당기영업이익(ROWNUM) VALUES ('IS62',NULL,NULL,   (SELECT NVL(RIGHTVAL,0) -  (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS21' AND ROWNUM=1)  --뺄대상 FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS20' AND ROWNUM=1) ) INTO FS.ISCOMPONENT2 --전기영업이익(ROWNUM) VALUES ('IS62',NULL,NULL,   (SELECT NVL(RIGHTVAL,0) -  (SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS21' AND ROWNUM=1)  --뺄대상 FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS20' AND ROWNUM=1) ) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "ISCOMPONENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert16BO",
                "METHOD_NAME": "Insert16",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT16",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT --당기 법인세차감전이익(ROWNUM) VALUES ('IS99',NULL,NULL,   (SELECT NVL(RIGHTVAL,0)  -(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS81' AND ROWNUM=1)  --뺄대상(영업외비용) +(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS63' AND ROWNUM=1)  --더할대상(영업외손익) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS62' AND ROWNUM=1) --차감전대상(영업이익) ) INTO FS.ISCOMPONENT2 --전기 법인세차감전이익(ROWNUM) VALUES ('IS99',NULL,NULL,   (SELECT NVL(RIGHTVAL,0)  -(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS81' AND ROWNUM=1)  --뺄대상(영업외비용) +(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS63' AND ROWNUM=1)  --더할대상(영업외손익) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS62' AND ROWNUM=1) --차감전대상(영업이익) ) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "ISCOMPONENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert17BO",
                "METHOD_NAME": "Insert17",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT17",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT --당기순손익(이익)(ROWNUM) VALUES ('IS102',NULL,NULL,   (SELECT NVL(RIGHTVAL,0)  -(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS100' AND ROWNUM=1)  --뺄대상(법인세비용) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS99' AND ROWNUM=1) --차감전대상(법인세차감전이익) ) INTO FS.ISCOMPONENT2 --전기의 당기순손익(이익)(ROWNUM) VALUES ('IS102',NULL,NULL,   (SELECT NVL(RIGHTVAL,0)  -(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS100' AND ROWNUM=1)  --뺄대상(법인세비용) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS99' AND ROWNUM=1) --차감전대상(법인세차감전이익) ) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "ISCOMPONENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert18BO",
                "METHOD_NAME": "Insert18",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT18",
                "QUERY": "INSERT INTO FS.ISCOMPONENT (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT) SELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT FROM FS.INCOME01;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert18BO",
                "METHOD_NAME": "Insert18",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT18",
                "QUERY": "INSERT INTO FS.ISCOMPONENT (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT) SELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT FROM FS.INCOME01;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT",
                "COLUMN": "LEFTVAL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert18BO",
                "METHOD_NAME": "Insert18",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT18",
                "QUERY": "INSERT INTO FS.ISCOMPONENT (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT) SELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT FROM FS.INCOME01;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT",
                "COLUMN": "STDACCOUNT_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert19BO",
                "METHOD_NAME": "Insert19",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT19",
                "QUERY": "INSERT INTO FS.ISCOMPONENT2 (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT) SELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT FROM FS.INCOME02;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT2",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert19BO",
                "METHOD_NAME": "Insert19",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT19",
                "QUERY": "INSERT INTO FS.ISCOMPONENT2 (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT) SELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT FROM FS.INCOME02;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT2",
                "COLUMN": "LEFTVAL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert19BO",
                "METHOD_NAME": "Insert19",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT19",
                "QUERY": "INSERT INTO FS.ISCOMPONENT2 (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT) SELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT FROM FS.INCOME02;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT2",
                "COLUMN": "STDACCOUNT_PARENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadAccountISSO",
                "BO_NAME": "Insert121BO",
                "METHOD_NAME": "Insert121",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "INSERT121",
                "QUERY": "INSERT ALL INTO FS.ISCOMPONENT --당기 상품매출원가(ROWNUM) VALUES ('IS10',NULL,'IS09',   ((   NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS11' AND ROWNUM=1),0) --더할대상(기초재고액)  +NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS12' AND ROWNUM=1),0)  --더할대상(당기매입액) -NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS13' AND ROWNUM=1),0)  --뺄대상(기말재고액) -NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS14' AND ROWNUM=1),0)  --뺄대상(타계정대체액)   )) ) INTO FS.ISCOMPONENT2 --전기 상품매출원가(ROWNUM) VALUES ('IS10',NULL,'IS09',   ((   NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS11' AND ROWNUM=1),0) --더할대상(기초재고액)  +NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS12' AND ROWNUM=1),0)  --더할대상(당기매입액) -NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS13' AND ROWNUM=1),0)  --뺄대상(기말재고액) -NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS14' AND ROWNUM=1),0)  --뺄대상(타계정대체액)   )) ) SELECT * FROM DUAL;",
                "SCHEMA": "INTO",
                "TABLE": ".",
                "COLUMN": "ISCOMPONENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadISSO",
                "BO_NAME": "ReadISBO",
                "METHOD_NAME": "SelectMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "SELECTIS",
                "QUERY": "SELECT A.STDACCOUNT_NAME, A.STDACCOUNT_CODE, B.LEFTVAL AS DOCJOURNAL_DEBIT, B.RIGHTVAL AS DOCJOURNAL_CREDIT FROM FS.STDACCOUNT AS A FULL OUTER  JOIN FS.ISCOMPONENT AS B ON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE WHERE A.STDACCOUNT_CODE LIKE 'IS%' ORDER BY LENGTH( A.STDACCOUNT_CODE), A.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "STDACCOUNT",
                "COLUMN": "STDACCOUNT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadISSO",
                "BO_NAME": "ReadISBO",
                "METHOD_NAME": "SelectMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "SELECTIS",
                "QUERY": "SELECT A.STDACCOUNT_NAME, A.STDACCOUNT_CODE, B.LEFTVAL AS DOCJOURNAL_DEBIT, B.RIGHTVAL AS DOCJOURNAL_CREDIT FROM FS.STDACCOUNT AS A FULL OUTER  JOIN FS.ISCOMPONENT AS B ON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE WHERE A.STDACCOUNT_CODE LIKE 'IS%' ORDER BY LENGTH( A.STDACCOUNT_CODE), A.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "STDACCOUNT",
                "COLUMN": "STDACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadISSO",
                "BO_NAME": "ReadISBO",
                "METHOD_NAME": "SelectMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "SELECTIS",
                "QUERY": "SELECT A.STDACCOUNT_NAME, A.STDACCOUNT_CODE, B.LEFTVAL AS DOCJOURNAL_DEBIT, B.RIGHTVAL AS DOCJOURNAL_CREDIT FROM FS.STDACCOUNT AS A FULL OUTER  JOIN FS.ISCOMPONENT AS B ON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE WHERE A.STDACCOUNT_CODE LIKE 'IS%' ORDER BY LENGTH( A.STDACCOUNT_CODE), A.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT",
                "COLUMN": "LEFTVAL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "is",
                "DEPTH 5": "so",
                "SO_NAME": "ReadISSO",
                "BO_NAME": "ReadISBO",
                "METHOD_NAME": "SelectMethod",
                "DOF_NAME": "ISDOF",
                "QUERY_NAME": "SELECTIS",
                "QUERY": "SELECT A.STDACCOUNT_NAME, A.STDACCOUNT_CODE, B.LEFTVAL AS DOCJOURNAL_DEBIT, B.RIGHTVAL AS DOCJOURNAL_CREDIT FROM FS.STDACCOUNT AS A FULL OUTER  JOIN FS.ISCOMPONENT AS B ON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE WHERE A.STDACCOUNT_CODE LIKE 'IS%' ORDER BY LENGTH( A.STDACCOUNT_CODE), A.STDACCOUNT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "ISCOMPONENT",
                "COLUMN": "RIGHTVAL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "sare",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSARECodeSO",
                "BO_NAME": "UpdateSARECodeBO",
                "METHOD_NAME": "UpdateCode",
                "DOF_NAME": "SAREDOF",
                "QUERY_NAME": "UPDATECODE",
                "QUERY": "UPDATE FS.SARE SET ACCOUNT_CODE = :ACCOUNT_CODE, SARE_SUBJECT = :SARE_SUBJECT WHERE  SARE_SUBJECT = :SARE_SUBJECT",
                "SCHEMA": "FS",
                "TABLE": "SARE",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "sare",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSARECodeSO",
                "BO_NAME": "UpdateSARECodeBO",
                "METHOD_NAME": "UpdateCode",
                "DOF_NAME": "SAREDOF",
                "QUERY_NAME": "UPDATECODE",
                "QUERY": "UPDATE FS.SARE SET ACCOUNT_CODE = :ACCOUNT_CODE, SARE_SUBJECT = :SARE_SUBJECT WHERE  SARE_SUBJECT = :SARE_SUBJECT",
                "SCHEMA": "FS",
                "TABLE": "SARE",
                "COLUMN": "SARE_SUBJECT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "sare",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSARESubjectSO",
                "BO_NAME": "UpdateSARESubjectBO",
                "METHOD_NAME": "UpdateSubject",
                "DOF_NAME": "SAREDOF",
                "QUERY_NAME": "UPDATESUBJECT",
                "QUERY": "UPDATE FS.SARE SET SARE_SUBJECT = :SARE_SUBJECT, ACCOUNT_CODE = :ACCOUNT_CODE WHERE  ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "SARE",
                "COLUMN": "SARE_SUBJECT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "statement",
                "DEPTH 4": "sare",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSARESubjectSO",
                "BO_NAME": "UpdateSARESubjectBO",
                "METHOD_NAME": "UpdateSubject",
                "DOF_NAME": "SAREDOF",
                "QUERY_NAME": "UPDATESUBJECT",
                "QUERY": "UPDATE FS.SARE SET SARE_SUBJECT = :SARE_SUBJECT, ACCOUNT_CODE = :ACCOUNT_CODE WHERE  ACCOUNT_CODE = :ACCOUNT_CODE",
                "SCHEMA": "FS",
                "TABLE": "SARE",
                "COLUMN": "ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "DeleteClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "DeleteClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.CLIENT WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "InsertClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "InsertClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT  INTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE) VALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "InsertClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "InsertClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT  INTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE) VALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "InsertClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "InsertClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT  INTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE) VALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NUMBER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "InsertClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "InsertClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT  INTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE) VALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_REPRESENTATION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "InsertClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "InsertClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT  INTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE) VALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_DIVISION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "InsertClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "InsertClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT  INTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE) VALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_IS_USE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "UpdateClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE WHERE CLIENT_CODE = :CLIENT_CODE; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "UpdateClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE WHERE CLIENT_CODE = :CLIENT_CODE; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NUMBER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "UpdateClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE WHERE CLIENT_CODE = :CLIENT_CODE; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_REPRESENTATION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "UpdateClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE WHERE CLIENT_CODE = :CLIENT_CODE; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_DIVISION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "UpdateClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE WHERE CLIENT_CODE = :CLIENT_CODE; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_IS_USE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable1SO",
                "BO_NAME": "InsertClientTable1BO",
                "METHOD_NAME": "UpdateClientTable1Method",
                "DOF_NAME": "InsertClientTable1DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE WHERE CLIENT_CODE = :CLIENT_CODE; ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NUMBER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ID_NUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_REPRESENTATION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_BUSINESS_CONDITION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_EVENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ZIPCODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ADDRESS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_TEL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_FAX"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_IS_MAIN_ESTABLISHMENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_UNIT_REPORT_CLIENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_OUTPUT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_STARTDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ENDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NOTE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable2SO",
                "BO_NAME": "ClientTable2BO",
                "METHOD_NAME": "UpdateClientTable2Method",
                "DOF_NAME": "ClientTable2DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_IN_CHARGE_TEL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_IN_CHARGE_EMAIL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_HOMEPAGE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "BANKCODEHELP_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_BANK_ACCOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ODEPOSIT_ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "ACCOUNT_OBASIC_ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "ACCOUNT_ORELATIVE_ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_EXTRA_LIMIT_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_MORTGAGE_LIMIT_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_UNIT_PRICE_SALES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_UNIT_PRICE_PURCHASE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_LIQUOR_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable3SO",
                "BO_NAME": "ClientTable3BO",
                "METHOD_NAME": "UpdateClientTable3Method",
                "DOF_NAME": "ClientTable3DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NUMBER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "BANKCODEHELP_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_DEPOSIT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_INTEREST_RATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_OVERDRAFT_LIMIT_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_OVERDRAFT_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ID_NUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_IS_MAIN_ESTABLISHMENT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "ACCOUNT_OBASIC_ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ZIPCODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ADDRESS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "LOCALTAX_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_TEL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_FAX"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_HOMEPAGE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_STARTDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ENDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NOTE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable4",
                "BO_NAME": "ClientTable4BO",
                "METHOD_NAME": "UpdateClientTable4Method",
                "DOF_NAME": "ClientTable4DOF",
                "QUERY_NAME": "Update",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;  ",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NUMBER"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_DEPOSIT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_PAYMENT_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ODEPOSIT_ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_OVERDRAFT_LIMIT_AMOUNT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_DIVISION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ID_NUM"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "ACCOUNT_OBASIC_ACCOUNT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENTTYPE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ZIPCODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ADDRESS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_TEL"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_FAX"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_HOMEPAGE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_STARTDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_ENDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_NOTE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "infra",
                "DEPTH 3": "client",
                "DEPTH 4": "so",
                "SO_NAME": "UpdateClientTable5SO",
                "BO_NAME": "ClientTable5BO",
                "METHOD_NAME": "UpdateClientTable5Method",
                "DOF_NAME": "ClientTable5DOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.CLIENT SET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE WHERE CLIENT_CODE = :CLIENT_CODE;",
                "SCHEMA": "FS",
                "TABLE": "CLIENT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "taxrefundbank",
                "DEPTH 5": "so",
                "SO_NAME": "InsertTaxRefundBankSO",
                "BO_NAME": "CRUDTaxRefundBankBO",
                "METHOD_NAME": "insertTaxRefundBank",
                "DOF_NAME": "CRUDTaxRefundBankDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.TAXREFUNDBANK VALUES (:TAXREFUNDBANK_CODE, :TAXREFUNDBANK_BANKNAME);",
                "SCHEMA": "FS",
                "TABLE": "TAXREFUNDBANK",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "taxrefundbank",
                "DEPTH 5": "so",
                "SO_NAME": "InsertTaxRefundBankSO",
                "BO_NAME": "CRUDTaxRefundBankBO",
                "METHOD_NAME": "insertTaxRefundBank",
                "DOF_NAME": "CRUDTaxRefundBankDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.TAXREFUNDBANK VALUES (:TAXREFUNDBANK_CODE, :TAXREFUNDBANK_BANKNAME);",
                "SCHEMA": "FS",
                "TABLE": "TAXREFUNDBANK",
                "COLUMN": ":TAXREFUNDBANK_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "code",
                "DEPTH 4": "taxrefundbank",
                "DEPTH 5": "so",
                "SO_NAME": "InsertTaxRefundBankSO",
                "BO_NAME": "CRUDTaxRefundBankBO",
                "METHOD_NAME": "insertTaxRefundBank",
                "DOF_NAME": "CRUDTaxRefundBankDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.TAXREFUNDBANK VALUES (:TAXREFUNDBANK_CODE, :TAXREFUNDBANK_BANKNAME);",
                "SCHEMA": "FS",
                "TABLE": "TAXREFUNDBANK",
                "COLUMN": ":TAXREFUNDBANK_BANKNAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteAllDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "deleteAllDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.DEPARTMENT WHERE DEPARTMENT_CODE=:DEPARTMENT_CODE ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "deleteDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.DEPARTMENT WHERE DEPARTMENT_CODE=:DEPARTMENT_CODE ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "insertDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.DEPARTMENT VALUES (:DEPARTMENT_CODE, :DEPARTMENT_NAME, :DEPARTMENT_OPARENT_CODE, :COMPANY_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "insertDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.DEPARTMENT VALUES (:DEPARTMENT_CODE, :DEPARTMENT_NAME, :DEPARTMENT_OPARENT_CODE, :COMPANY_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": ":DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "insertDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.DEPARTMENT VALUES (:DEPARTMENT_CODE, :DEPARTMENT_NAME, :DEPARTMENT_OPARENT_CODE, :COMPANY_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": ":DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "insertDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.DEPARTMENT VALUES (:DEPARTMENT_CODE, :DEPARTMENT_NAME, :DEPARTMENT_OPARENT_CODE, :COMPANY_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": ":DEPARTMENT_OPARENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "InsertDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "insertDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.DEPARTMENT VALUES (:DEPARTMENT_CODE, :DEPARTMENT_NAME, :DEPARTMENT_OPARENT_CODE, :COMPANY_CODE); ",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": ":COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "ReadDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "readDepartment",
                "DOF_NAME": "DocDOF",
                "QUERY_NAME": "DOCDELETE",
                "QUERY": "DELETE FROM FS.DOC  WHERE DOC_ROWSEQ = :DOC_ROWSEQ;",
                "SCHEMA": "FS",
                "TABLE": "DOC",
                "COLUMN": "DOC_ROWSEQ"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAllDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateAllDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAllDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateAllDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAllDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateAllDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_OPARENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateAllDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateAllDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "DEPARTMENT_OPARENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "department",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateDepartmentSO",
                "BO_NAME": "CRUDDepartmentBO",
                "METHOD_NAME": "updateDepartment",
                "DOF_NAME": "CRUDDepartmentDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.DEPARTMENT SET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE WHERE DEPARTMENT_CODE = :DEPARTMENT_CODE",
                "SCHEMA": "FS",
                "TABLE": "DEPARTMENT",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "deleteSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.SITE WHERE SITE_CODE = :SITE_CODE",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "InsertSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "insertSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.SITE VALUES (:SITE_CODE, :SITE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "InsertSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "insertSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.SITE VALUES (:SITE_CODE, :SITE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": ":SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "InsertSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "insertSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.SITE VALUES (:SITE_CODE, :SITE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": ":SITE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "InsertSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "insertSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.SITE VALUES (:SITE_CODE, :SITE_NAME, :COMPANY_CODE)",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": ":COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "updateSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.SITE SET SITE_CODE =:SITE_CODE, SITE_NAME = :SITE_NAME, COMPANY_CODE = :COMPANY_CODE WHERE SITE_CODE =:SITE_CODE",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": "SITE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "updateSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.SITE SET SITE_CODE =:SITE_CODE, SITE_NAME = :SITE_NAME, COMPANY_CODE = :COMPANY_CODE WHERE SITE_CODE =:SITE_CODE",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": "SITE_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "site",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateSiteSO",
                "BO_NAME": "CRUDSiteBO",
                "METHOD_NAME": "updateSite",
                "DOF_NAME": "CRUDSiteDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.SITE SET SITE_CODE =:SITE_CODE, SITE_NAME = :SITE_NAME, COMPANY_CODE = :COMPANY_CODE WHERE SITE_CODE =:SITE_CODE",
                "SCHEMA": "FS",
                "TABLE": "SITE",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteProjectEmpRelSO",
                "BO_NAME": "CRUDProjectEmpRelBO",
                "METHOD_NAME": "deleteProjectEmpRel",
                "DOF_NAME": "CRUDProjectEmpRelDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.PROJ_EMP_REL WHERE PROJECT_CODE =:PROJECT_CODE AND EMPLOYEE_CODE= :EMPLOYEE_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJ_EMP_REL",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteProjectEmpRelSO",
                "BO_NAME": "CRUDProjectEmpRelBO",
                "METHOD_NAME": "deleteProjectEmpRel",
                "DOF_NAME": "CRUDProjectEmpRelDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.PROJ_EMP_REL WHERE PROJECT_CODE =:PROJECT_CODE AND EMPLOYEE_CODE= :EMPLOYEE_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJ_EMP_REL",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "deleteProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.PROJECT WHERE PROJECT_CODE=:PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectEmpRelSO",
                "BO_NAME": "CRUDProjectEmpRelBO",
                "METHOD_NAME": "insertProjectEmpRel",
                "DOF_NAME": "CRUDProjectEmpRelDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJ_EMP_REL VALUES (:PROJECT_CODE, :EMPLOYEE_CODE)",
                "SCHEMA": "FS",
                "TABLE": "PROJ_EMP_REL",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectEmpRelSO",
                "BO_NAME": "CRUDProjectEmpRelBO",
                "METHOD_NAME": "insertProjectEmpRel",
                "DOF_NAME": "CRUDProjectEmpRelDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJ_EMP_REL VALUES (:PROJECT_CODE, :EMPLOYEE_CODE)",
                "SCHEMA": "FS",
                "TABLE": "PROJ_EMP_REL",
                "COLUMN": ":PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectEmpRelSO",
                "BO_NAME": "CRUDProjectEmpRelBO",
                "METHOD_NAME": "insertProjectEmpRel",
                "DOF_NAME": "CRUDProjectEmpRelDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJ_EMP_REL VALUES (:PROJECT_CODE, :EMPLOYEE_CODE)",
                "SCHEMA": "FS",
                "TABLE": "PROJ_EMP_REL",
                "COLUMN": ":EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": ":PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": ":CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": ":PROJECT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "TO_DATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": ":PROJECT_STARTDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "insertProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROJECT  VALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)   ",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "'YYYY/MM/DD'"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "CLIENT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_STARTDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_ENDDATE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_VALUE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_CONDITION"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "PROJECT_ABSTRACT"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "project",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProjectSO",
                "BO_NAME": "CRUDProjectBO",
                "METHOD_NAME": "updateProject",
                "DOF_NAME": "CRUDProjectDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PROJECT SET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE WHERE PROJECT_CODE= :PROJECT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROJECT",
                "COLUMN": "COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteProductEmpRelSO",
                "BO_NAME": "CRUDProductEmpRelBO",
                "METHOD_NAME": "deleteProductEmpRel",
                "DOF_NAME": "CRUDProductEmpRelDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.PROD_EMP_REL WHERE PRODUCT_CODE =:PRODUCT_CODE AND EMPLOYEE_CODE= :EMPLOYEE_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROD_EMP_REL",
                "COLUMN": "PRODUCT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteProductEmpRelSO",
                "BO_NAME": "CRUDProductEmpRelBO",
                "METHOD_NAME": "deleteProductEmpRel",
                "DOF_NAME": "CRUDProductEmpRelDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.PROD_EMP_REL WHERE PRODUCT_CODE =:PRODUCT_CODE AND EMPLOYEE_CODE= :EMPLOYEE_CODE",
                "SCHEMA": "FS",
                "TABLE": "PROD_EMP_REL",
                "COLUMN": "EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "DeleteProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "deleteProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "DELETE",
                "QUERY": "DELETE FROM FS.PRODUCT WHERE PRODUCT_CODE =:PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "PRODUCT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductEmpRelSO",
                "BO_NAME": "CRUDProductEmpRelBO",
                "METHOD_NAME": "insertProductEmpRel",
                "DOF_NAME": "CRUDProductEmpRelDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROD_EMP_REL VALUES (:PRODUCT_CODE, :EMPLOYEE_CODE)",
                "SCHEMA": "FS",
                "TABLE": "PROD_EMP_REL",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductEmpRelSO",
                "BO_NAME": "CRUDProductEmpRelBO",
                "METHOD_NAME": "insertProductEmpRel",
                "DOF_NAME": "CRUDProductEmpRelDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROD_EMP_REL VALUES (:PRODUCT_CODE, :EMPLOYEE_CODE)",
                "SCHEMA": "FS",
                "TABLE": "PROD_EMP_REL",
                "COLUMN": ":PRODUCT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductEmpRelSO",
                "BO_NAME": "CRUDProductEmpRelBO",
                "METHOD_NAME": "insertProductEmpRel",
                "DOF_NAME": "CRUDProductEmpRelDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PROD_EMP_REL VALUES (:PRODUCT_CODE, :EMPLOYEE_CODE)",
                "SCHEMA": "FS",
                "TABLE": "PROD_EMP_REL",
                "COLUMN": ":EMPLOYEE_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "VALUES"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": ":PRODUCT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": ":PRODUCT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": ":PRODUCT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": ":PRODUCT_TAXTYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": ":PRODUCT_REMARKS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "InsertProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "insertProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "INSERT",
                "QUERY": "INSERT INTO FS.PRODUCT VALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE) ",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": ":COMPANY_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "ReadProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "readProduct",
                "ERROR": "PARSING_SERVER_ERROR : Dof경로 에러.사용하지않는 DOF 이거나 빌드가 안된 DOF 이므로 영향도 분석에서 제외하겠습니다."
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "updateProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PRODUCT SET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE WHERE PRODUCT_CODE= :PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "PRODUCT_CODE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "updateProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PRODUCT SET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE WHERE PRODUCT_CODE= :PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "PRODUCT_NAME"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "updateProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PRODUCT SET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE WHERE PRODUCT_CODE= :PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "PRODUCT_TYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "updateProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PRODUCT SET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE WHERE PRODUCT_CODE= :PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "PRODUCT_TAXTYPE"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "updateProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PRODUCT SET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE WHERE PRODUCT_CODE= :PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "PRODUCT_REMARKS"
            },
            {
                "APPLICATION_NAME": "FS",
                "SERVICEGROUP_NAME": "CORE",
                "META": "meta",
                "DEPTH 0": "com",
                "DEPTH 1": "tmax",
                "DEPTH 2": "fs",
                "DEPTH 3": "infra",
                "DEPTH 4": "product",
                "DEPTH 5": "so",
                "SO_NAME": "UpdateProductSO",
                "BO_NAME": "CRUDProductBO",
                "METHOD_NAME": "updateProduct",
                "DOF_NAME": "CRUDProductDOF",
                "QUERY_NAME": "UPDATE",
                "QUERY": "UPDATE FS.PRODUCT SET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE WHERE PRODUCT_CODE= :PRODUCT_CODE",
                "SCHEMA": "FS",
                "TABLE": "PRODUCT",
                "COLUMN": "COMPANY_CODE"
            }
        ]

