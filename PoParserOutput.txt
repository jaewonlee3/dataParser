[['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'client', 'type', 'so', 'SO_NAME : DeleteClientType', 'ClientTypeBO', 'deleteClientType', 'ClientTypeDOF', 'DELETE', 'DELETE FROM FS.CLIENTTYPE WHERE\nCLIENTTYPE_CODE = :CLIENTTYPE_CODE\nAND\n(COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'client', 'type', 'so', 'SO_NAME : DeleteClientType', 'ClientTypeBO', 'deleteClientType', 'ClientTypeDOF', 'SELECT', "SELECT * FROM FS.CLIENTTYPE\nWHERE\n(CLIENTTYPE_CODE LIKE '%'||:CLIENTTYPE_CODE||'%')\nOR\n(CLIENTTYPE_NAME LIKE '%'||:CLIENTTYPE_NAME||'%')\nAND\n(:COMPANY_CODE IS NULL OR COMPANY_CODE LIKE '%'||:COMPANY_CODE||'%')\nORDER BY CLIENTTYPE_CODE"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'client', 'type', 'so', 'SO_NAME : InsertClientType', 'ClientTypeBO', 'insertClientType', 'ClientTypeDOF', 'INSERT', 'INSERT INTO FS.CLIENTTYPE VALUES (:CLIENTTYPE_CODE, :CLIENTTYPE_NAME, :COMPANY_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'client', 'type', 'so', 'SO_NAME : InsertClientType', 'ClientTypeBO', 'insertClientType', 'ClientTypeDOF', 'SELECT', "SELECT * FROM FS.CLIENTTYPE\nWHERE\n(CLIENTTYPE_CODE LIKE '%'||:CLIENTTYPE_CODE||'%')\nOR\n(CLIENTTYPE_NAME LIKE '%'||:CLIENTTYPE_NAME||'%')\nAND\n(:COMPANY_CODE IS NULL OR COMPANY_CODE LIKE '%'||:COMPANY_CODE||'%')\nORDER BY CLIENTTYPE_CODE"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'client', 'type', 'so', 'SO_NAME : ReadClientTypeList', 'ClientTypeBO', 'readClientTypeList', 'ClientTypeDOF', 'SELECT', "SELECT * FROM FS.CLIENTTYPE\nWHERE\n(CLIENTTYPE_CODE LIKE '%'||:CLIENTTYPE_CODE||'%')\nOR\n(CLIENTTYPE_NAME LIKE '%'||:CLIENTTYPE_NAME||'%')\nAND\n(:COMPANY_CODE IS NULL OR COMPANY_CODE LIKE '%'||:COMPANY_CODE||'%')\nORDER BY CLIENTTYPE_CODE"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'acc', 'so', 'SO_NAME : DeleteConAccSO', 'ConAccBO', 'deleteConAccByCode', 'ConAccDOF', 'DELETE', 'DELETE FROM FS.CONACC WHERE CONACC_CODE = :CONACC_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'acc', 'so', 'SO_NAME : InsertConAccSO', 'ConAccBO', 'insertConAccByCode', 'ConAccDOF', 'INSERT', 'INSERT INTO\nFS.CONACC\n(\nCONACC_CODE,\nCONACC_FONT_SIZE,\nACCOUNT_CODE1,\nACCOUNT_CODE2,\nACCOUNT_CODE3,\nACCOUNT_CODE4,\nACCOUNT_CODE5,\nACCOUNT_CODE6,\nLANGUAGE_CODE,\nCOMPANY_CODE\n)\nVALUES\n(\n(SELECT MAX(CONACC_CODE) + 1 FROM FS.CONACC),\n:CONACC_FONT_SIZE,\n:ACCOUNT_CODE1,\n:ACCOUNT_CODE2,\n:ACCOUNT_CODE3,\n:ACCOUNT_CODE4,\n:ACCOUNT_CODE5,\n:ACCOUNT_CODE6,\n:LANGUAGE_CODE,\n:COMPANY_CODE\n);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'acc', 'so', 'SO_NAME : ReadConAccSO', 'ConAccBO', 'readConAccByCode', 'ConAccDOF', 'SELECT', 'SELECT * FROM FS.CONACC WHERE CONACC_CODE = :CONACC_CODE AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'acc', 'so', 'SO_NAME : UpdateConAccSO', 'ConAccBO', 'updateConAccByCode', 'ConAccDOF', 'UPDATE', 'UPDATE FS.CONACC\nSET\nCONACC_FONT_SIZE = :CONACC_FONT_SIZE,\nACCOUNT_CODE1 = :ACCOUNT_CODE1,\nACCOUNT_CODE2 = :ACCOUNT_CODE2,\nACCOUNT_CODE3 = :ACCOUNT_CODE3,\nACCOUNT_CODE4 = :ACCOUNT_CODE4,\nACCOUNT_CODE5 = :ACCOUNT_CODE5,\nACCOUNT_CODE6 = :ACCOUNT_CODE6,\nLANGUAGE_CODE = :LANGUAGE_CODE,\nCOMPANY_CODE = :COMPANY_CODE\nWHERE CONACC_CODE = :CONACC_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'all', 'so', 'SO_NAME : DeleteConAllSO', 'ConAllBO', 'deleteConAllByCode', 'ConAllDOF', 'DELETE', 'DELETE FROM FS.CONALL WHERE CONALL_CODE = :CONALL_CODE AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'all', 'so', 'SO_NAME : InsertConAllSO', 'ConAllBO', 'insertConAllByCode', 'ConAllDOF', 'INSERT', 'INSERT INTO\nFS.CONALL\n(\nCONALL_CODE,\nCONALL_VAT_INCLUDED,\nCONALL_PROJECT_CODE_USED,\nCONALL_FUNDS_CODE_USED,\nCONALL_SITE_CODE_USED,\nCONALL_ITEM_CODE_USED,\nDISPLAYDIGITS_CODE1,\nDISPLAYDIGITS_CODE2,\nDISPLAYDIGITS_CODE3,\nDISPLAYDIGITS_CODE4,\nDISPLAYDIGITS_CODE5,\nDISPLAYDIGITS_CODE6,\nCOMPANY_CODE\n)\nVALUES\n(\n(SELECT MAX(CONALL_CODE) + 1 FROM FS.CONALL),\n:CONALL_VAT_INCLUDED,\n:CONALL_PROJECT_CODE_USED,\n:CONALL_FUNDS_CODE_USED,\n:CONALL_SITE_CODE_USED,\n:CONALL_ITEM_CODE_USED,\n:DISPLAYDIGITS_CODE1,\n:DISPLAYDIGITS_CODE2,\n:DISPLAYDIGITS_CODE3,\n:DISPLAYDIGITS_CODE4,\n:DISPLAYDIGITS_CODE5,\n:DISPLAYDIGITS_CODE6,\n:COMPANY_CODE\n);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'all', 'so', 'SO_NAME : ReadConAll', 'ConAllBO', 'readConAllByCode', 'ConAllDOF', 'SELECT', 'SELECT * FROM FS.CONALL WHERE CONALL_CODE = :CONALL_CODE AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'configure', 'all', 'so', 'SO_NAME : UpdateConAllSO', 'ConAllBO', 'updateConAllByCode', 'ConAllDOF', 'UPDATE', 'UPDATE FS.CONALL\nSET\nCONALL_VAT_INCLUDED = :CONALL_VAT_INCLUDED,\nCONALL_PROJECT_CODE_USED = :CONALL_PROJECT_CODE_USED,\nCONALL_FUNDS_CODE_USED = :CONALL_FUNDS_CODE_USED,\nCONALL_SITE_CODE_USED = :CONALL_SITE_CODE_USED,\nCONALL_ITEM_CODE_USED = :CONALL_ITEM_CODE_USED,\nDISPLAYDIGITS_CODE1 = :DISPLAYDIGITS_CODE1,\nDISPLAYDIGITS_CODE2 = :DISPLAYDIGITS_CODE2,\nDISPLAYDIGITS_CODE3 = :DISPLAYDIGITS_CODE3,\nDISPLAYDIGITS_CODE4 = :DISPLAYDIGITS_CODE4,\nDISPLAYDIGITS_CODE5 = :DISPLAYDIGITS_CODE5,\nDISPLAYDIGITS_CODE6 = :DISPLAYDIGITS_CODE6,\nCOMPANY_CODE = :COMPANY_CODE\nWHERE CONALL_CODE = :CONALL_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheetpercoa', 'so', 'SO_NAME : ReadPBSPerCOASO', 'ReadPBSPerCOA', 'readPBSPerCOA', 'PBSPriceFactory', 'SELECT', 'SELECT\n    FS.PREBALANCESHEET.PREBALANCESHEET_DEBIT,\n    FS.PREBALANCESHEET.PREBALANCESHEET_CREDIT\nFROM\n   FS.PREBALANCESHEET\n   LEFT JOIN FS.ACCOUNT ON PREBALANCESHEET.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\nWHERE\nPREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR\nAND\nFS.ACCOUNT.ACCOUNT_CODE = :ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadCOAListSO', 'ReadCOA', 'readCoaList', 'LedgerCOAFactory', 'SELECT', "SELECT \nDOCUMENT.ACCOUNT_CODE, DOCUMENT.ACCOUNT_4NAME\nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE \nDOCUMENT.ACCOUNT_CODE BETWEEN :START_ACCOUNT_CODE AND :END_ACCOUNT_CODE\nAND\nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD')\nGROUP BY DOCUMENT.ACCOUNT_CODE, DOCUMENT.ACCOUNT_4NAME\nORDER BY DOCUMENT.ACCOUNT_CODE ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadCOASO', 'ReadCOA', 'readCoa', 'LedgerCOAFactory', 'READCOA', 'SELECT ACCOUNT_4NAME FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadGLDailySO', 'ReadGL', 'readDailyGL', 'GeneralLedgerFactory', 'SELECTDAY', "SELECT \nACCOUNT_DEBIT, SUM(DOCUMENT.DOCJOURNAL_DEBIT) AS DOCJOURNAL_DEBIT, SUM(DOCUMENT.DOCJOURNAL_CREDIT) AS DOCJOURNAL_CREDIT, DOCUMENT.DOC_DATE \nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE\nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE \nAND\nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD') \nGROUP BY DOCUMENT.DOC_DATE, ACCOUNT_DEBIT\nORDER BY DOCUMENT.DOC_DATE ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadGLDailySO', 'ReadGL', 'readDailyGL', 'GeneralLedgerFactory', 'SELECTMONTH', "SELECT \nACCOUNT_DEBIT, SUM(DOCUMENT.DOCJOURNAL_DEBIT) AS DOCJOURNAL_DEBIT, SUM(DOCUMENT.DOCJOURNAL_CREDIT) AS DOCJOURNAL_CREDIT,\nto_char(DOCUMENT.DOC_DATE, 'YYYY/MM') AS DOC_DATE \nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE \nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE\nAND\nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD')\nGROUP BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM'), ACCOUNT_DEBIT \nORDER BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM') ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadGLMonthlySO', 'ReadGL', 'readMonthlyGL', 'GeneralLedgerFactory', 'SELECTMONTH', "SELECT \nACCOUNT_DEBIT, SUM(DOCUMENT.DOCJOURNAL_DEBIT) AS DOCJOURNAL_DEBIT, SUM(DOCUMENT.DOCJOURNAL_CREDIT) AS DOCJOURNAL_CREDIT,\nto_char(DOCUMENT.DOC_DATE, 'YYYY/MM') AS DOC_DATE \nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE \nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE\nAND\nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD')\nGROUP BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM'), ACCOUNT_DEBIT \nORDER BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM') ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadLedgerAllListSO', 'ReadLedgerAll', 'readLedgerAll', 'LedgerFactory', 'SELECT_LEDGERALL', "SELECT\nDOCUMENT.DOC_DATE, to_char(DOCUMENT.DOC_DATE, 'MM') AS MONTH, to_char(DOCUMENT.DOC_DATE, 'DD') AS DAY, DOCUMENT.DOC_ORDER, DOCUMENT.DOC_ROWSEQ, DOCUMENT.DOCJOURNALTYPE_NAME, DOCUMENT.ACCOUNT_CODE, \nDOCUMENT.ACCOUNT_4NAME, DOCUMENT.CLIENT_CODE, DOCUMENT.CLIENT_NAME, DOCUMENT.ABSTRACT_ID, \nDOCUMENT.ABSTRACT_NAME, DOCUMENT.DOCJOURNAL_DEBIT, DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCTYPE_CODE\nFROM FS.DOCUMENT \nWHERE\nDOCUMENT.DOC_ROWSEQ = :DOC_ROWSEQ \nORDER BY DOCUMENT.DOC_DATE ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadLedgerListMonthlySO', 'ReadLedger', 'readLedgerPerCOAMonthly', 'LedgerFactory', 'SELECTMONTH', "SELECT \nDOCUMENT.ACCOUNT_CODE, DOCUMENT.DOC_ROWSEQ, DOCUMENT.DOCTYPE_CODE, DOCUMENT.DOC_DATE, DOCUMENT.ABSTRACT_CODE, DOCUMENT.ABSTRACT_NAME, DOCUMENT.DOCJOURNAL_ABSTRACT, DOCUMENT.CLIENT_CODE, DOCUMENT.CLIENT_NAME, \nDOCUMENT.DOCJOURNAL_DEBIT, DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOC_ORDER, DOCUMENT.DOCJOURNALTYPE_NAME, SALESDOCUMENT.CLIENT_NUMBER, \nSALESDOCUMENT.DOCSALESTYPE_NAME, SALESDOCUMENT.CLIENT_OCARD_CODE, SALESDOCUMENT.CLIENT_OCARD_NAME, DOCUMENT.ACCOUNT_DEBIT \nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE \nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE \nAND \n(DOCUMENT.DOC_DATE <= (SELECT LAST_DAY(to_date(:END_DATE,'YYYY/MM')) FROM dual) \nAND DOCUMENT.DOC_DATE >= to_date(:START_DATE,'YYYY/MM/DD')) \nORDER BY DOCUMENT.DOC_DATE ASC; "], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadLedgerListMonthlySO', 'ReadLedger', 'readLedgerPerCOAMonthly', 'LedgerFactory', 'SUM', "SELECT \nto_char(DOCUMENT.DOC_DATE, 'YYYY/MM') AS DOC_DATE, SUM(DOCUMENT.DOCJOURNAL_DEBIT) AS DOCJOURNAL_DEBIT, SUM(DOCUMENT.DOCJOURNAL_CREDIT) AS DOCJOURNAL_CREDIT \nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE \nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE \nAND \nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD') \nGROUP BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM') \nORDER BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM') ASC"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadLedgerListSO', 'ReadLedger', 'readLedgerPerCOA', 'LedgerFactory', 'SELECT', "SELECT\nDOCUMENT.ACCOUNT_CODE, DOCUMENT.DOC_ROWSEQ, DOCUMENT.DOCTYPE_CODE, DOCUMENT.DOC_DATE, DOCUMENT.ABSTRACT_CODE, DOCUMENT.ABSTRACT_NAME, DOCUMENT.DOCJOURNAL_ABSTRACT, DOCUMENT.CLIENT_CODE, DOCUMENT.CLIENT_NAME, \nDOCUMENT.DOCJOURNAL_DEBIT, DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOC_ORDER, DOCUMENT.DOCJOURNALTYPE_NAME, SALESDOCUMENT.CLIENT_NUMBER, \nSALESDOCUMENT.DOCSALESTYPE_NAME, SALESDOCUMENT.CLIENT_OCARD_CODE, SALESDOCUMENT.CLIENT_OCARD_NAME, DOCUMENT.ACCOUNT_DEBIT\nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ\nWHERE\nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE\nAND\nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD')\nORDER BY DOCUMENT.DOC_DATE ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ledger', 'coa', 'so', 'SO_NAME : ReadLedgerListSO', 'ReadLedger', 'readLedgerPerCOA', 'LedgerFactory', 'SUM', "SELECT \nto_char(DOCUMENT.DOC_DATE, 'YYYY/MM') AS DOC_DATE, SUM(DOCUMENT.DOCJOURNAL_DEBIT) AS DOCJOURNAL_DEBIT, SUM(DOCUMENT.DOCJOURNAL_CREDIT) AS DOCJOURNAL_CREDIT \nFROM FS.DOCUMENT LEFT JOIN FS.SALESDOCUMENT ON FS.DOCUMENT.DOC_ROWSEQ = FS.SALESDOCUMENT.DOC_ROWSEQ \nWHERE \nDOCUMENT.ACCOUNT_CODE = :ACCOUNT_CODE \nAND \nDOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYY/MM/DD') AND to_date(:END_DATE, 'YYYY/MM/DD') \nGROUP BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM') \nORDER BY to_char(DOCUMENT.DOC_DATE, 'YYYY/MM') ASC"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListByCOA', 'ReadTTBList', 'readTTBListByCOA', 'TTBFactory', 'SELECT_LV1', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_1NAME\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nGROUP BY FS.ACCOUNT.ACCOUNT_1NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListByCOA', 'ReadTTBList', 'readTTBListByCOA', 'TTBFactory', 'SELECT_LV2', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_2NAME\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE) \nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nGROUP BY FS.ACCOUNT.ACCOUNT_2NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListByCOA', 'ReadTTBList', 'readTTBListByCOA', 'TTBFactory', 'SELECT_LV3', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_3NAME \nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nAND\n(FS.ACCOUNT.ACCOUNT_2NAME IS NULL OR FS.ACCOUNT.ACCOUNT_2NAME = :ACCOUNT_2NAME)\nGROUP BY FS.ACCOUNT.ACCOUNT_3NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListByCOA', 'ReadTTBList', 'readTTBListByCOA', 'TTBFactory', 'SELECT_LV4', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, FS.ACCOUNT.ACCOUNT_4NAME, FS.ACCOUNT.ACCOUNT_CODE \nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nAND\n(FS.ACCOUNT.ACCOUNT_2NAME IS NULL OR FS.ACCOUNT.ACCOUNT_2NAME = :ACCOUNT_2NAME)\nAND\n(FS.ACCOUNT.ACCOUNT_3NAME IS NULL OR FS.ACCOUNT.ACCOUNT_3NAME = :ACCOUNT_3NAME)\nGROUP BY FS.ACCOUNT.ACCOUNT_CODE, FS.ACCOUNT.ACCOUNT_DEBIT, FS.ACCOUNT.ACCOUNT_4NAME \nORDER BY FS.ACCOUNT.ACCOUNT_CODE"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListForSubmission', 'ReadTTBList', 'readTTBListForSubmission', 'TTBFactory', 'SELECT_LV1', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_1NAME\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nGROUP BY FS.ACCOUNT.ACCOUNT_1NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListForSubmission', 'ReadTTBList', 'readTTBListForSubmission', 'TTBFactory', 'SELECT_LV2', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_2NAME\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE) \nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nGROUP BY FS.ACCOUNT.ACCOUNT_2NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListForSubmission', 'ReadTTBList', 'readTTBListForSubmission', 'TTBFactory', 'SELECT_LV3', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_3NAME \nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nAND\n(FS.ACCOUNT.ACCOUNT_2NAME IS NULL OR FS.ACCOUNT.ACCOUNT_2NAME = :ACCOUNT_2NAME)\nGROUP BY FS.ACCOUNT.ACCOUNT_3NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'ttb', 'so', 'SO_NAME : ReadTTBListForSubmission', 'ReadTTBList', 'readTTBListForSubmission', 'TTBFactory', 'SELECT_LV4', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, FS.ACCOUNT.ACCOUNT_4NAME, FS.ACCOUNT.ACCOUNT_CODE \nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nAND\n(FS.ACCOUNT.ACCOUNT_2NAME IS NULL OR FS.ACCOUNT.ACCOUNT_2NAME = :ACCOUNT_2NAME)\nAND\n(FS.ACCOUNT.ACCOUNT_3NAME IS NULL OR FS.ACCOUNT.ACCOUNT_3NAME = :ACCOUNT_3NAME)\nGROUP BY FS.ACCOUNT.ACCOUNT_CODE, FS.ACCOUNT.ACCOUNT_DEBIT, FS.ACCOUNT.ACCOUNT_4NAME \nORDER BY FS.ACCOUNT.ACCOUNT_CODE"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'SO_NAME : IndustrySO', 'IndustryBO', 'InsertMethod', 'IndustryDOF', 'INSERT', 'INSERT\nINTO FS.INDUSTRY\nVALUES (:INDUSTRY_CODE, :INDUSTRY_SECTOR, :INDUSTRY_NAME, :INDUSTRY_REMARKS);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'SO_NAME : InsertLocalTaxSO', 'LocalTaxBO', 'InsertMethod', 'LocalTaxDOF', 'insert', 'INSERT\nINTO FS.LOCALTAX\nvalues (:LOCALTAX_CODE,:LOCALTAX_NAME);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'SO_NAME : youngjune_leeLocalTaxSO', 'youngjune_leeLocalTaxBO', 'InsertMethod', 'youngjune_leeLocalTaxDOF', 'insert', 'INSERT\nINTO FS.LOCALTAX\nvalues (:LOCALTAX_CODE,:LOCALTAX_NAME);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'code', 'employee', 'so', 'SO_NAME : DeleteEmployeeSO', 'EmployeeBO', 'deleteEmployee', 'EmployeeDOF', 'DELETE', 'DELETE FROM FS.EMPLOYEE\nWHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'code', 'employee', 'so', 'SO_NAME : InsertEmployeeSO', 'EmployeeBO', 'insertEmployee', 'EmployeeDOF', 'INSERT', 'INSERT INTO FS.EMPLOYEE \nVALUES (:EMPLOYEE_CODE, \n:COMPANY_CODE, \n:EMPLOYEE_NAME, \n:EMPLOYEE_POSITION, \n:EMPLOYEE_RANK, \n:EMPLOYEE_JOB, \n:EMPLOYEE_VALUE, \n:EMPLOYEE_ID, \n:EMPLOYEE_PASSWORD, \n:EMPLOYEE_EMAIL, \n:EMPLOYEE_PHONE, \n:EMPLOYEE_SKILL, \n:DEPARTMENT_CODE,\n:DEPARTMENT_NAME);\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'code', 'employee', 'so', 'SO_NAME : ReadEmployeeSO', 'EmployeeBO', 'readEmployee', 'EmployeeSimpleDOF', 'SEARCHEMPDEPT', "SELECT  \nEMPLOYEE_CODE, \nEMPLOYEE_NAME, \nDEPARTMENT_CODE,\nDEPARTMENT_NAME\nFROM FS.EMPLOYEE\nWHERE (:EMPLOYEE_CODE IS NULL OR EMPLOYEE_CODE LIKE '%'||:EMPLOYEE_CODE||'%')\nAND (:EMPLOYEE_NAME IS NULL OR EMPLOYEE_NAME LIKE '%'||:EMPLOYEE_NAME||'%')\nAND (:DEPARTMENT_CODE IS NULL OR DEPARTMENT_CODE LIKE '%'||:DEPARTMENT_CODE||'%')\nAND (:DEPARTMENT_NAME IS NULL OR DEPARTMENT_NAME LIKE '%'||:DEPARTMENT_NAME||'%');"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'code', 'employee', 'so', 'SO_NAME : UpdateEmployeeSO', 'EmployeeBO', 'updateEmployee', 'EmployeeDOF', 'UPDATE', 'UPDATE FS.EMPLOYEE\nSET\nCOMPANY_CODE = :COMPANY_CODE, \nEMPLOYEE_NAME = :EMPLOYEE_NAME, \nEMPLOYEE_POSITION = :EMPLOYEE_POSITION, \nEMPLOYEE_RANK = :EMPLOYEE_RANK, \nEMPLOYEE_JOB = :EMPLOYEE_JOB, \nEMPLOYEE_VALUE = :EMPLOYEE_VALUE, \nEMPLOYEE_ID = :EMPLOYEE_ID, \nEMPLOYEE_PASSWORD = :EMPLOYEE_PASSWORD, \nEMPLOYEE_EMAIL = :EMPLOYEE_EMAIL, \nEMPLOYEE_PHONE = :EMPLOYEE_PHONE, \nEMPLOYEE_SKILL = :EMPLOYEE_SKILL, \nDEPARTMENT_CODE = :DEPARTMENT_CODE,\nDEPARTMENT_NAME = :DEPARTMENT_NAME\nWHERE EMPLOYEE_CODE = :EMPLOYEE_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadDocumentByDateRangeSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadDocumentByDateRangeSO', 'ReadGeneralDocumentBO', 'readGeneralDocumentByDateRange', 'DocumentDOF', 'READDOCUMENTBYDATERANGE', "SELECT\nDOC_ROWSEQ,\nto_char(DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC_ORDER,\nDOCTYPE_CODE,\nDOCTYPE_NAME,\nEMPLOYEE_CODE,\nEMPLOYEE_NAME,\nDEPARTMENT_CODE,\nDEPARTMENT_NAME,\nSITE_CODE,\nSITE_NAME,\nPROJECT_CODE,\nPROJECT_NAME,\nDOCJOURNALTYPE_CODE,\nDOCJOURNALTYPE_NAME,\nACCOUNT_CODE,\nACCOUNT_4NAME,\nABSTRACT_ID,\nABSTRACT_CODE,\nABSTRACT_NAME,\nDOCJOURNAL_ABSTRACT,\nCLIENT_CODE,\nCLIENT_NAME,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT\nFROM FS.DOCUMENT\nWHERE (DOC_DATE <= to_date(:END_DATE,'YYYY-MM-DD')\nAND DOC_DATE >= to_date(:START_DATE,'YYYY-MM-DD'))\nORDER BY DOC_DATE ASC, DOC_ORDER ASC, DOCJOURNAL_ROWSEQ ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : GeneralDocReadByDate', 'ReadDocByDateBO', 'readDocByDate', 'DocDOF', 'DOCDATEREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_DATE = to_date(:DOC_DATE,'YYYY-MM-DD') AND DOC.DOCTYPE_CODE = :DOCTYPE_CODE\nORDER BY DOC_DATE ASC, DOC_ORDER ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : GeneralDocReadByMonthRangeSO', 'ReadDocByMonthRangeBO', 'readDocByMonthRange', 'DocDOF', 'DOCREADMONTH', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE (DOC_DATE <= (SELECT LAST_DAY(to_date(:END_MONTH,'YYYY-MM')) FROM dual)\nAND DOC_DATE > to_date(:START_MONTH,'YYYY-MM-DD'))\nAND DOC.DOCTYPE_CODE = :DOCTYPE_CODE\nORDER BY DOC_DATE ASC, DOC_ORDER ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : GeneralDocJournalReadSO', 'ReadDocJournalBO', 'readDocJournal', 'DocJournalDOF', 'DOCJOURNALREAD', 'SELECT DOCJOURNAL_ROWSEQ, \nDOCJOURNAL_DEBIT, \nDOCJOURNAL_CREDIT, \nDOCJOURNAL_ABSTRACT, \nDOC_ROWSEQ, \nDOCJOURNAL.ACCOUNT_CODE, \nACCOUNT.ACCOUNT_4NAME, \nDOCJOURNAL.CLIENT_CODE, \nCLIENT.CLIENT_NAME, \nDOCJOURNAL.DOCJOURNALTYPE_CODE, \nDOCJOURNALTYPE.DOCJOURNALTYPE_NAME, \nDOCJOURNAL.ABSTRACT_ID, \nABSTRACT.ABSTRACT_CODE,\nABSTRACT.ABSTRACT_NAME\nFROM FS.DOCJOURNAL\nLEFT JOIN FS.ACCOUNT ON DOCJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\nLEFT JOIN FS.CLIENT ON DOCJOURNAL.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCJOURNALTYPE ON DOCJOURNAL.DOCJOURNALTYPE_CODE = DOCJOURNALTYPE.DOCJOURNALTYPE_CODE\nLEFT JOIN FS.ABSTRACT ON DOCJOURNAL.ABSTRACT_ID = ABSTRACT.ABSTRACT_ID\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ\nORDER BY DOCJOURNAL_ROWSEQ ASC;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : GeneralDocJournalReadSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentByDateSO', 'ReadGeneralDocumentBO', 'readGeneralDocumentByDate', 'DocumentDOF', 'READDOCUMENTBYDATE', "SELECT\nDOC_ROWSEQ,\nto_char(DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC_ORDER,\nDOCTYPE_CODE,\nDOCTYPE_NAME,\nEMPLOYEE_CODE,\nEMPLOYEE_NAME,\nDEPARTMENT_CODE,\nDEPARTMENT_NAME,\nSITE_CODE,\nSITE_NAME,\nPROJECT_CODE,\nPROJECT_NAME,\nDOCJOURNALTYPE_CODE,\nDOCJOURNALTYPE_NAME,\nACCOUNT_CODE,\nACCOUNT_4NAME,\nABSTRACT_ID,\nABSTRACT_CODE,\nABSTRACT_NAME,\nDOCJOURNAL_ABSTRACT,\nCLIENT_CODE,\nCLIENT_NAME,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT\nFROM FS.DOCUMENT\nWHERE DOC_DATE = to_date(:DOC_DATE,'YYYY-MM-DD')\nORDER BY DOC_DATE ASC, DOC_ORDER ASC, DOCJOURNAL_ROWSEQ ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentByDateSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentByMonthRangeSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentByMonthRangeSO', 'ReadGeneralDocumentBO', 'readGeneralDocumentByMonthRange', 'DocumentDOF', 'READDOCUMENTBYMONTHRANGE', "SELECT\nDOC_ROWSEQ,\nto_char(DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC_ORDER,\nDOCTYPE_CODE,\nDOCTYPE_NAME,\nEMPLOYEE_CODE,\nEMPLOYEE_NAME,\nDEPARTMENT_CODE,\nDEPARTMENT_NAME,\nSITE_CODE,\nSITE_NAME,\nPROJECT_CODE,\nPROJECT_NAME,\nDOCJOURNALTYPE_CODE,\nDOCJOURNALTYPE_NAME,\nACCOUNT_CODE,\nACCOUNT_4NAME,\nABSTRACT_ID,\nABSTRACT_CODE,\nABSTRACT_NAME,\nDOCJOURNAL_ABSTRACT,\nCLIENT_CODE,\nCLIENT_NAME,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT\nFROM FS.DOCUMENT\nWHERE (DOC_DATE <= (SELECT LAST_DAY(to_date(:END_MONTH,'YYYY-MM')) FROM dual)\nAND DOC_DATE >= to_date(:START_MONTH,'YYYY-MM-DD'))\nORDER BY DOC_DATE ASC, DOC_ORDER ASC, DOCJOURNAL_ROWSEQ ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentSO', 'ReadDocBO', 'readDoc', 'DocDOF', 'DOCREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentSO', 'ReadDocJournalBO', 'readDocJournal', 'DocJournalDOF', 'DOCJOURNALREAD', 'SELECT DOCJOURNAL_ROWSEQ, \nDOCJOURNAL_DEBIT, \nDOCJOURNAL_CREDIT, \nDOCJOURNAL_ABSTRACT, \nDOC_ROWSEQ, \nDOCJOURNAL.ACCOUNT_CODE, \nACCOUNT.ACCOUNT_4NAME, \nDOCJOURNAL.CLIENT_CODE, \nCLIENT.CLIENT_NAME, \nDOCJOURNAL.DOCJOURNALTYPE_CODE, \nDOCJOURNALTYPE.DOCJOURNALTYPE_NAME, \nDOCJOURNAL.ABSTRACT_ID, \nABSTRACT.ABSTRACT_CODE,\nABSTRACT.ABSTRACT_NAME\nFROM FS.DOCJOURNAL\nLEFT JOIN FS.ACCOUNT ON DOCJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\nLEFT JOIN FS.CLIENT ON DOCJOURNAL.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCJOURNALTYPE ON DOCJOURNAL.DOCJOURNALTYPE_CODE = DOCJOURNALTYPE.DOCJOURNALTYPE_CODE\nLEFT JOIN FS.ABSTRACT ON DOCJOURNAL.ABSTRACT_ID = ABSTRACT.ABSTRACT_ID\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ\nORDER BY DOCJOURNAL_ROWSEQ ASC;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadGeneralDocumentSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'ReadDocDateBO', 'readDocDate', 'DocDOF', 'DOCDREAD', "SELECT\nTO_CHAR(DOC.DOC_DATE, 'YYYY-MM-DD') AS DOC_DATE\nFROM FS.DOC\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ; "], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATE', 'UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATE', 'UPDATE FS.DOC\nSET\nDOCTYPE_CODE = :DOCTYPE_CODE,\nDOC_PARENT = :DOC_PARENT,\nCOMPANY_CODE = :COMPANY_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'DeleteDocJournalBO', 'deleteDocJournal', 'DocDOF', 'DOCJDELETE', 'DELETE FROM FS.DOCJOURNAL \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'InsertDocJournalBO', 'insertDocJournal', 'DocJournalDOF', 'DOCJOURNALINSERT', 'INSERT \nINTO FS.DOCJOURNAL(\nDOCJOURNAL_ROWSEQ,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT,\nDOCJOURNAL_ABSTRACT,\nABSTRACT_ID,\nCLIENT_CODE,\nDOC_ROWSEQ,\nACCOUNT_CODE,\nDOCJOURNALTYPE_CODE\n)\nVALUES (\n(SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL),\n:DOCJOURNAL_DEBIT,\n:DOCJOURNAL_CREDIT,\n:DOCJOURNAL_ABSTRACT,\n:ABSTRACT_ID,\n:CLIENT_CODE,\n:DOC_ROWSEQ,\n:ACCOUNT_CODE,\n:DOCJOURNALTYPE_CODE);\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : UpdateGeneralDocSO', 'ReadDocTypeCodeBO', 'readDocTypeCode', 'DocDOF', 'DOCTYPEREAD', 'SELECT DOCTYPE_CODE, DOC_ROWSEQ\nFROM FS.DOC\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : CopyGeneralDocSO', 'ReadDocBO', 'readDoc', 'DocDOF', 'DOCREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : CopyGeneralDocSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCINSERT', "INSERT \nINTO FS.DOC(\nDOC_ROWSEQ,\nCOMPANY_CODE,\nDOC_DATE,\nDOC_ORDER,\nDOC_MOVEDCOPIED,\nDOC_PARENT,\nEMPLOYEE_CODE,\nSITE_CODE,\nPROJECT_CODE,\nDOCTYPE_CODE,\nLOCALTAX_CODE)\nVALUES (\n(SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC),\n:COMPANY_CODE,\nto_date(:DOC_DATE, 'YYYY-MM-DD'),\n(SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE),\n:DOC_MOVEDCOPIED,\n:DOC_PARENT,\n:EMPLOYEE_CODE,\n:SITE_CODE,\n:PROJECT_CODE,\n:DOCTYPE_CODE,\n:LOCALTAX_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : CopyGeneralDocSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCNEWREAD', 'SELECT MAX(DOC_ROWSEQ) as DOC_ROWSEQ FROM FS.DOC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : GeneralDocDeleteSO', 'DeleteDocJournalBO', 'deleteDocJournal', 'DocDOF', 'DOCJDELETE', 'DELETE FROM FS.DOCJOURNAL \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : GeneralDocDeleteSO', 'DeleteDocBO', 'deleteDoc', 'DocDOF', 'DOCDELETE', 'DELETE FROM FS.DOC \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : DynamicTestFullSO', 'DynamicTestBO', 'fullMultiBindTest', 'DynamicQueryTestDOF', 'FULLMULTITEST', 'SELECT *\nFROM FS.DOC\nWHERE :_dynamic AND :_dynamic;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : InsertGeneralDocSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCINSERT', "INSERT \nINTO FS.DOC(\nDOC_ROWSEQ,\nCOMPANY_CODE,\nDOC_DATE,\nDOC_ORDER,\nDOC_MOVEDCOPIED,\nDOC_PARENT,\nEMPLOYEE_CODE,\nSITE_CODE,\nPROJECT_CODE,\nDOCTYPE_CODE,\nLOCALTAX_CODE)\nVALUES (\n(SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC),\n:COMPANY_CODE,\nto_date(:DOC_DATE, 'YYYY-MM-DD'),\n(SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE),\n:DOC_MOVEDCOPIED,\n:DOC_PARENT,\n:EMPLOYEE_CODE,\n:SITE_CODE,\n:PROJECT_CODE,\n:DOCTYPE_CODE,\n:LOCALTAX_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : InsertGeneralDocSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCNEWREAD', 'SELECT MAX(DOC_ROWSEQ) as DOC_ROWSEQ FROM FS.DOC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : InsertGeneralDocSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : InsertGeneralDocSO', 'InsertDocJournalBO', 'insertDocJournal', 'DocJournalDOF', 'DOCJOURNALINSERT', 'INSERT \nINTO FS.DOCJOURNAL(\nDOCJOURNAL_ROWSEQ,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT,\nDOCJOURNAL_ABSTRACT,\nABSTRACT_ID,\nCLIENT_CODE,\nDOC_ROWSEQ,\nACCOUNT_CODE,\nDOCJOURNALTYPE_CODE\n)\nVALUES (\n(SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL),\n:DOCJOURNAL_DEBIT,\n:DOCJOURNAL_CREDIT,\n:DOCJOURNAL_ABSTRACT,\n:ABSTRACT_ID,\n:CLIENT_CODE,\n:DOC_ROWSEQ,\n:ACCOUNT_CODE,\n:DOCJOURNALTYPE_CODE);\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : MoveGeneralDocSO', 'ReadDocBO', 'readDoc', 'DocDOF', 'DOCREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : MoveGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATE', 'UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : MoveGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATE', 'UPDATE FS.DOC\nSET\nDOCTYPE_CODE = :DOCTYPE_CODE,\nDOC_PARENT = :DOC_PARENT,\nCOMPANY_CODE = :COMPANY_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : MoveGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : MoveGeneralDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadDocJournalTypeSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadDocListByRowSeqSO', 'ReadDocListByRowSeqBO', 'readDocListByRowSeq', 'DocDOF', 'DOCREADCOPYMOVE', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ in :_dynamic\nORDER BY DOC_ROWSEQ ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'generaldoc', 'so', 'SO_NAME : ReadDocTypeSO', 'ReadDocTypeCodeBO', 'readDocTypeCode', 'DocDOF', 'DOCTYPEREAD', 'SELECT DOCTYPE_CODE, DOC_ROWSEQ\nFROM FS.DOC\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : CopySalesDocSO', 'ReadDocBO', 'readDoc', 'DocDOF', 'DOCREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : CopySalesDocSO', 'ReadDocSalesBO', 'readDocSales', 'DocSalesDOF', 'DOCSALESREAD', 'SELECT DOCSALES.DOC_ROWSEQ, \nDOCSALES.DOCSALES_PRODUCTNAME, \nDOCSALES.DOCSALES_TOTALPRICE, \nDOCSALES.DOCSALES_TOTALVAT, \nDOCSALES.DOCSALES_TOTALAMOUNT, \nDOCSALES.DOCSALES_ELECTAX,\nDOCSALES.DOCSALES_CLIENT,\nDOCSALES.CLIENT_CODE,\nCLIENT.CLIENT_NAME,\nCLIENT.CLIENT_NUMBER,\nDOCSALES.DOCSALESTYPE_CODE,\nDOCSALESTYPE.DOCSALESTYPE_NAME,\nDOCSALESTYPE_ISVAT,\nDOCSALES.VATNONDEDUCTIBLE_CODE,\nVATNONDEDUCTIBLE.VATNONDEDUCTIBLE_NAME,\nDOCSALES.DOCSALESJOURNAL_CODE,\nDOCSALES.DOCTYPE_CODE,\nDOCSALES.CLIENT_OCARD_CODE,\nCLIENTCARD.CLIENT_NAME AS CLIENT_OCARD_NAME\nFROM FS.DOCSALES\nLEFT JOIN FS.CLIENT ON DOCSALES.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCSALESTYPE ON DOCSALES.DOCSALESTYPE_CODE = DOCSALESTYPE.DOCSALESTYPE_CODE\nLEFT JOIN FS.VATNONDEDUCTIBLE ON DOCSALES.VATNONDEDUCTIBLE_CODE = VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_CODE\nLEFT JOIN FS.CLIENT AS CLIENTCARD ON DOCSALES.CLIENT_OCARD_CODE = CLIENTCARD.CLIENT_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : CopySalesDocSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCINSERT', "INSERT \nINTO FS.DOC(\nDOC_ROWSEQ,\nCOMPANY_CODE,\nDOC_DATE,\nDOC_ORDER,\nDOC_MOVEDCOPIED,\nDOC_PARENT,\nEMPLOYEE_CODE,\nSITE_CODE,\nPROJECT_CODE,\nDOCTYPE_CODE,\nLOCALTAX_CODE)\nVALUES (\n(SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC),\n:COMPANY_CODE,\nto_date(:DOC_DATE, 'YYYY-MM-DD'),\n(SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE),\n:DOC_MOVEDCOPIED,\n:DOC_PARENT,\n:EMPLOYEE_CODE,\n:SITE_CODE,\n:PROJECT_CODE,\n:DOCTYPE_CODE,\n:LOCALTAX_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : CopySalesDocSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCNEWREAD', 'SELECT MAX(DOC_ROWSEQ) as DOC_ROWSEQ FROM FS.DOC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : CopySalesDocSO', 'InsertDocSalesBO', 'insertDocSales', 'DocSalesDOF', 'DOCSALESINSERT', 'INSERT\nINTO FS.DOCSALES\n(DOC_ROWSEQ, \nDOCSALES_PRODUCTNAME,\nDOCSALES_TOTALPRICE, \nDOCSALES_TOTALVAT, \nDOCSALES_TOTALAMOUNT, \nDOCSALES_ELECTAX,\nDOCSALES_CLIENT,\nCLIENT_CODE,\nCLIENT_OCARD_CODE,\nDOCSALESTYPE_CODE, \nVATNONDEDUCTIBLE_CODE, \nDOCSALESJOURNAL_CODE, \nDOCTYPE_CODE)\nVALUES (:DOC_ROWSEQ, \n:DOCSALES_PRODUCTNAME, \n:DOCSALES_TOTALPRICE, \n:DOCSALES_TOTALVAT, \n:DOCSALES_TOTALAMOUNT, \n:DOCSALES_ELECTAX, \n:DOCSALES_CLIENT,\n:CLIENT_CODE,\n:CLIENT_OCARD_CODE,\n:DOCSALESTYPE_CODE, \n:VATNONDEDUCTIBLE_CODE, \n:DOCSALESJOURNAL_CODE, \n:DOCTYPE_CODE); '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : CopySalesDocSO', 'ReadDocProductBO', 'readDocProduct', 'DocProductDOF', 'DOCPRODUCTREAD', 'SELECT DOCPRODUCT_NAME, DOCPRODUCT_QUANTITY, DOCPRODUCT_UNITPRICE, DOCPRODUCT_PRICE, DOCPRODUCT_VAT, DOCPRODUCT_REMARK, DOCPRODUCT.PRODUCT_CODE, PRODUCT_TAXTYPE\nFROM FS.DOCPRODUCT\nLEFT JOIN FS.PRODUCT ON DOCPRODUCT.PRODUCT_CODE = PRODUCT.PRODUCT_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocDeleteSO', 'DeleteDocJournalBO', 'deleteDocJournal', 'DocDOF', 'DOCJDELETE', 'DELETE FROM FS.DOCJOURNAL \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocDeleteSO', 'DeleteDocSalesBO', 'deleteDocSales', 'DocDOF', 'DOCSALESDELETE', 'DELETE\nFROM FS.DOCSALES\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocDeleteSO', 'DeleteDocProductBO', 'deleteDocProduct', 'DocDOF', 'DOCPRODUCTDELETE', 'DELETE\nFROM FS.DOCPRODUCT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocDeleteSO', 'DeleteDocBO', 'deleteDoc', 'DocDOF', 'DOCDELETE', 'DELETE FROM FS.DOC \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : DocSalesJournalGenerateSO', 'ReadDocSalesTypeInfoBO', 'readDocSalesTypeInfo', 'DocSalesTypeInfoDOF', 'DOCSALESTYPEINFOREAD', 'SELECT \nDOCSALESTYPE_NAME, \nDOCSALESTYPE_ISVAT,\nDOCSALESTYPE.DOCTYPE_CODE, \nDOCSALESJOURNAL.DOCSALESJOURNAL_CODE, \nDOCSALESJOURNAL.DOCSALESJOURNAL_NAME,\nDOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT, \nDOCSALESJOURNAL.ACCOUNT_CODE, \nDOCSALESJOURNAL.ACCOUNT_4NAME\nFROM FS.DOCSALESTYPE\nLEFT JOIN\n(SELECT\nDOCSALESJOURNAL.DOCSALESJOURNAL_CODE, \nDOCSALESJOURNAL.DOCTYPE_CODE,\nDOCSALESJOURNAL.DOCSALESJOURNAL_NAME,\nDOCSALESJOURNAL.DOCSALESJOURNAL_DEBITCREDIT, \nDOCSALESJOURNAL.ACCOUNT_CODE, \nACCOUNT.ACCOUNT_4NAME\nFROM FS.DOCSALESJOURNAL\nLEFT JOIN FS.ACCOUNT ON DOCSALESJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE) AS DOCSALESJOURNAL\nON DOCSALESTYPE.DOCTYPE_CODE = DOCSALESJOURNAL.DOCTYPE_CODE\nWHERE DOCSALESTYPE_CODE = :DOCSALESTYPE_CODE AND DOCSALESJOURNAL_CODE = :DOCSALESJOURNAL_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocInsertSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCINSERT', "INSERT \nINTO FS.DOC(\nDOC_ROWSEQ,\nCOMPANY_CODE,\nDOC_DATE,\nDOC_ORDER,\nDOC_MOVEDCOPIED,\nDOC_PARENT,\nEMPLOYEE_CODE,\nSITE_CODE,\nPROJECT_CODE,\nDOCTYPE_CODE,\nLOCALTAX_CODE)\nVALUES (\n(SELECT MAX(DOC_ROWSEQ)+1 FROM FS.DOC),\n:COMPANY_CODE,\nto_date(:DOC_DATE, 'YYYY-MM-DD'),\n(SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD') AND DOCTYPE_CODE = :DOCTYPE_CODE),\n:DOC_MOVEDCOPIED,\n:DOC_PARENT,\n:EMPLOYEE_CODE,\n:SITE_CODE,\n:PROJECT_CODE,\n:DOCTYPE_CODE,\n:LOCALTAX_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocInsertSO', 'InsertDocBO', 'insertDoc', 'DocDOF', 'DOCNEWREAD', 'SELECT MAX(DOC_ROWSEQ) as DOC_ROWSEQ FROM FS.DOC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocInsertSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocInsertSO', 'InsertDocJournalBO', 'insertDocJournal', 'DocJournalDOF', 'DOCJOURNALINSERT', 'INSERT \nINTO FS.DOCJOURNAL(\nDOCJOURNAL_ROWSEQ,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT,\nDOCJOURNAL_ABSTRACT,\nABSTRACT_ID,\nCLIENT_CODE,\nDOC_ROWSEQ,\nACCOUNT_CODE,\nDOCJOURNALTYPE_CODE\n)\nVALUES (\n(SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL),\n:DOCJOURNAL_DEBIT,\n:DOCJOURNAL_CREDIT,\n:DOCJOURNAL_ABSTRACT,\n:ABSTRACT_ID,\n:CLIENT_CODE,\n:DOC_ROWSEQ,\n:ACCOUNT_CODE,\n:DOCJOURNALTYPE_CODE);\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocInsertSO', 'InsertDocSalesBO', 'insertDocSales', 'DocSalesDOF', 'DOCSALESINSERT', 'INSERT\nINTO FS.DOCSALES\n(DOC_ROWSEQ, \nDOCSALES_PRODUCTNAME,\nDOCSALES_TOTALPRICE, \nDOCSALES_TOTALVAT, \nDOCSALES_TOTALAMOUNT, \nDOCSALES_ELECTAX,\nDOCSALES_CLIENT,\nCLIENT_CODE,\nCLIENT_OCARD_CODE,\nDOCSALESTYPE_CODE, \nVATNONDEDUCTIBLE_CODE, \nDOCSALESJOURNAL_CODE, \nDOCTYPE_CODE)\nVALUES (:DOC_ROWSEQ, \n:DOCSALES_PRODUCTNAME, \n:DOCSALES_TOTALPRICE, \n:DOCSALES_TOTALVAT, \n:DOCSALES_TOTALAMOUNT, \n:DOCSALES_ELECTAX, \n:DOCSALES_CLIENT,\n:CLIENT_CODE,\n:CLIENT_OCARD_CODE,\n:DOCSALESTYPE_CODE, \n:VATNONDEDUCTIBLE_CODE, \n:DOCSALESJOURNAL_CODE, \n:DOCTYPE_CODE); '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'ReadDocBO', 'readDoc', 'DocDOF', 'DOCREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'ReadDocSalesBO', 'readDocSales', 'DocSalesDOF', 'DOCSALESREAD', 'SELECT DOCSALES.DOC_ROWSEQ, \nDOCSALES.DOCSALES_PRODUCTNAME, \nDOCSALES.DOCSALES_TOTALPRICE, \nDOCSALES.DOCSALES_TOTALVAT, \nDOCSALES.DOCSALES_TOTALAMOUNT, \nDOCSALES.DOCSALES_ELECTAX,\nDOCSALES.DOCSALES_CLIENT,\nDOCSALES.CLIENT_CODE,\nCLIENT.CLIENT_NAME,\nCLIENT.CLIENT_NUMBER,\nDOCSALES.DOCSALESTYPE_CODE,\nDOCSALESTYPE.DOCSALESTYPE_NAME,\nDOCSALESTYPE_ISVAT,\nDOCSALES.VATNONDEDUCTIBLE_CODE,\nVATNONDEDUCTIBLE.VATNONDEDUCTIBLE_NAME,\nDOCSALES.DOCSALESJOURNAL_CODE,\nDOCSALES.DOCTYPE_CODE,\nDOCSALES.CLIENT_OCARD_CODE,\nCLIENTCARD.CLIENT_NAME AS CLIENT_OCARD_NAME\nFROM FS.DOCSALES\nLEFT JOIN FS.CLIENT ON DOCSALES.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCSALESTYPE ON DOCSALES.DOCSALESTYPE_CODE = DOCSALESTYPE.DOCSALESTYPE_CODE\nLEFT JOIN FS.VATNONDEDUCTIBLE ON DOCSALES.VATNONDEDUCTIBLE_CODE = VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_CODE\nLEFT JOIN FS.CLIENT AS CLIENTCARD ON DOCSALES.CLIENT_OCARD_CODE = CLIENTCARD.CLIENT_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATE', 'UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATE', 'UPDATE FS.DOC\nSET\nDOCTYPE_CODE = :DOCTYPE_CODE,\nDOC_PARENT = :DOC_PARENT,\nCOMPANY_CODE = :COMPANY_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : MoveSalesDocSO', 'UpdateDocSalesProductNameBO', 'updateDocSalesProductName', 'DocSalesDOF', 'DOCSALESUPDATEPRODUCT', 'UPDATE FS.DOCSALES\nSET\nDOCSALES_PRODUCTNAME = :DOCSALES_PRODUCTNAME\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadDocProductSO', 'ReadDocProductBO', 'readDocProduct', 'DocProductDOF', 'DOCPRODUCTREAD', 'SELECT DOCPRODUCT_NAME, DOCPRODUCT_QUANTITY, DOCPRODUCT_UNITPRICE, DOCPRODUCT_PRICE, DOCPRODUCT_VAT, DOCPRODUCT_REMARK, DOCPRODUCT.PRODUCT_CODE, PRODUCT_TAXTYPE\nFROM FS.DOCPRODUCT\nLEFT JOIN FS.PRODUCT ON DOCPRODUCT.PRODUCT_CODE = PRODUCT.PRODUCT_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadDocSalesJournalListSO', 'ReadDocSalesJournalListBO', 'readDocSalesJournalList', 'DocSalesJournalDOF', 'READDOCSALESJOURNALLIST', 'SELECT DISTINCT\nDOCSALESJOURNAL.DOCSALESJOURNAL_CODE,\nDOCSALESJOURNAL.DOCSALESJOURNAL_NAME\nFROM FS.DOCSALESJOURNAL\nORDER BY DOCSALESJOURNAL_CODE ASC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadDocSalesTypeListSO', 'ReadDocSalesTypeListBO', 'readDocSalesTypeListByDocTypeCode', 'DocSalesTypeDOF', 'READDOCSASLETYPELISTBYCODTYPE', 'SELECT DOCSALESTYPE_CODE, DOCSALESTYPE_NAME, DOCSALESTYPE_ISVAT\nFROM FS.DOCSALESTYPE\nWHERE DOCTYPE_CODE = :DOCTYPE_CODE\nORDER BY DOCSALESTYPE_CODE ASC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadSalesDocumentSO', 'ReadSalesDocumentBO', 'readSalesDocument', 'SalesDocumentDOF', 'SALESDOCUMENTREAD', "SELECT *\nFROM FS.SALESDOCUMENT\nWHERE DOC_DATE = TO_DATE(:DOCDATE,'YYYY-MM-DD');"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadSingleSalesDocumentSO', 'ReadDocBO', 'readDoc', 'DocDOF', 'DOCREAD', "SELECT\nDOC.DOC_ROWSEQ,\nDOC.COMPANY_CODE,\nto_char(DOC.DOC_DATE,'yyyy-mm-dd') AS DOC_DATE,\nDOC.DOC_ORDER,\nDOC.DOC_MOVEDCOPIED,\nDOC.DOC_PARENT,\nDOC.EMPLOYEE_CODE,\nEMPDEPT.EMPLOYEE_NAME,\nEMPDEPT.DEPARTMENT_CODE,\nEMPDEPT.DEPARTMENT_NAME,\nDOC.SITE_CODE,\nSITE.SITE_NAME,\nDOC.PROJECT_CODE,\nPROJECT.PROJECT_NAME,\nDOC.DOCTYPE_CODE,\nDOCTYPE.DOCTYPE_NAME,\nDOC.LOCALTAX_CODE,\nLOCALTAX.LOCALTAX_NAME\nFROM FS.DOC\nLEFT JOIN (\nSELECT\nEMPLOYEE.EMPLOYEE_CODE,\nEMPLOYEE.EMPLOYEE_NAME,\nEMPLOYEE.DEPARTMENT_CODE,\nDEPARTMENT.DEPARTMENT_NAME\nFROM FS.EMPLOYEE\nLEFT JOIN FS.DEPARTMENT ON EMPLOYEE.DEPARTMENT_CODE = DEPARTMENT.DEPARTMENT_CODE) AS EMPDEPT ON DOC.EMPLOYEE_CODE = EMPDEPT.EMPLOYEE_CODE\nLEFT JOIN FS.SITE ON DOC.SITE_CODE = SITE.SITE_CODE\nLEFT JOIN FS.PROJECT ON DOC.PROJECT_CODE = PROJECT.PROJECT_CODE\nLEFT JOIN FS.DOCTYPE ON DOC.DOCTYPE_CODE = DOCTYPE.DOCTYPE_CODE\nLEFT JOIN FS.LOCALTAX ON DOC.LOCALTAX_CODE = LOCALTAX.LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadSingleSalesDocumentSO', 'ReadDocSalesBO', 'readDocSales', 'DocSalesDOF', 'DOCSALESREAD', 'SELECT DOCSALES.DOC_ROWSEQ, \nDOCSALES.DOCSALES_PRODUCTNAME, \nDOCSALES.DOCSALES_TOTALPRICE, \nDOCSALES.DOCSALES_TOTALVAT, \nDOCSALES.DOCSALES_TOTALAMOUNT, \nDOCSALES.DOCSALES_ELECTAX,\nDOCSALES.DOCSALES_CLIENT,\nDOCSALES.CLIENT_CODE,\nCLIENT.CLIENT_NAME,\nCLIENT.CLIENT_NUMBER,\nDOCSALES.DOCSALESTYPE_CODE,\nDOCSALESTYPE.DOCSALESTYPE_NAME,\nDOCSALESTYPE_ISVAT,\nDOCSALES.VATNONDEDUCTIBLE_CODE,\nVATNONDEDUCTIBLE.VATNONDEDUCTIBLE_NAME,\nDOCSALES.DOCSALESJOURNAL_CODE,\nDOCSALES.DOCTYPE_CODE,\nDOCSALES.CLIENT_OCARD_CODE,\nCLIENTCARD.CLIENT_NAME AS CLIENT_OCARD_NAME\nFROM FS.DOCSALES\nLEFT JOIN FS.CLIENT ON DOCSALES.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCSALESTYPE ON DOCSALES.DOCSALESTYPE_CODE = DOCSALESTYPE.DOCSALESTYPE_CODE\nLEFT JOIN FS.VATNONDEDUCTIBLE ON DOCSALES.VATNONDEDUCTIBLE_CODE = VATNONDEDUCTIBLE.VATNONDEDUCTIBLE_CODE\nLEFT JOIN FS.CLIENT AS CLIENTCARD ON DOCSALES.CLIENT_OCARD_CODE = CLIENTCARD.CLIENT_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadSingleSalesDocumentSO', 'ReadDocJournalBO', 'readDocJournal', 'DocJournalDOF', 'DOCJOURNALREAD', 'SELECT DOCJOURNAL_ROWSEQ, \nDOCJOURNAL_DEBIT, \nDOCJOURNAL_CREDIT, \nDOCJOURNAL_ABSTRACT, \nDOC_ROWSEQ, \nDOCJOURNAL.ACCOUNT_CODE, \nACCOUNT.ACCOUNT_4NAME, \nDOCJOURNAL.CLIENT_CODE, \nCLIENT.CLIENT_NAME, \nDOCJOURNAL.DOCJOURNALTYPE_CODE, \nDOCJOURNALTYPE.DOCJOURNALTYPE_NAME, \nDOCJOURNAL.ABSTRACT_ID, \nABSTRACT.ABSTRACT_CODE,\nABSTRACT.ABSTRACT_NAME\nFROM FS.DOCJOURNAL\nLEFT JOIN FS.ACCOUNT ON DOCJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\nLEFT JOIN FS.CLIENT ON DOCJOURNAL.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCJOURNALTYPE ON DOCJOURNAL.DOCJOURNALTYPE_CODE = DOCJOURNALTYPE.DOCJOURNALTYPE_CODE\nLEFT JOIN FS.ABSTRACT ON DOCJOURNAL.ABSTRACT_ID = ABSTRACT.ABSTRACT_ID\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ\nORDER BY DOCJOURNAL_ROWSEQ ASC;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadSingleSalesDocumentSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : ReadVatnondeductibleSO', 'ReadVatdeductibleBO', 'readVatdeductible', 'VatNondeductibleDOF', 'READVAT', 'SELECT *\nFROM FS.VATNONDEDUCTIBLE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'ReadDocDateBO', 'readDocDate', 'DocDOF', 'DOCDREAD', "SELECT\nTO_CHAR(DOC.DOC_DATE, 'YYYY-MM-DD') AS DOC_DATE\nFROM FS.DOC\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ; "], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATE', 'UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATE', 'UPDATE FS.DOC\nSET\nDOCTYPE_CODE = :DOCTYPE_CODE,\nDOC_PARENT = :DOC_PARENT,\nCOMPANY_CODE = :COMPANY_CODE,\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND DOCTYPE_CODE = 1),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'UpdateDocBO', 'updateDoc', 'DocDOF', 'DOCSUPDATEDATE', "UPDATE FS.DOC\nSET\nCOMPANY_CODE = :COMPANY_CODE,\nDOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD'),\nDOC_ORDER = (SELECT MAX(DOC_ORDER)+1\nFROM FS.DOC\nWHERE (DOC_DATE = to_date(12121010, 'YYYY-MM-DD')\nOR DOC_DATE = to_date(:DOC_DATE, 'YYYY-MM-DD')) AND (DOCTYPE_CODE = 2 OR  DOCTYPE_CODE = 3)),\nEMPLOYEE_CODE = :EMPLOYEE_CODE,\nDOCTYPE_CODE = :DOCTYPE_CODE,\nSITE_CODE = :SITE_CODE,\nPROJECT_CODE = :PROJECT_CODE,\nLOCALTAX_CODE = :LOCALTAX_CODE,\nDOC_MOVEDCOPIED = :DOC_MOVEDCOPIED,\nDOC_PARENT = :DOC_PARENT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'DeleteDocJournalBO', 'deleteDocJournal', 'DocDOF', 'DOCJDELETE', 'DELETE FROM FS.DOCJOURNAL \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'InsertDocJournalBO', 'insertDocJournal', 'DocJournalDOF', 'DOCJOURNALINSERT', 'INSERT \nINTO FS.DOCJOURNAL(\nDOCJOURNAL_ROWSEQ,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT,\nDOCJOURNAL_ABSTRACT,\nABSTRACT_ID,\nCLIENT_CODE,\nDOC_ROWSEQ,\nACCOUNT_CODE,\nDOCJOURNALTYPE_CODE\n)\nVALUES (\n(SELECT MAX(DOCJOURNAL_ROWSEQ)+1 FROM FS.DOCJOURNAL),\n:DOCJOURNAL_DEBIT,\n:DOCJOURNAL_CREDIT,\n:DOCJOURNAL_ABSTRACT,\n:ABSTRACT_ID,\n:CLIENT_CODE,\n:DOC_ROWSEQ,\n:ACCOUNT_CODE,\n:DOCJOURNALTYPE_CODE);\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'ReadDocJournalTypeListBO', 'readDocJournalType', 'DocJournalTypeDOF', 'SELECTDOCJOURNALTYPEALL', 'SELECT DOCJOURNALTYPE_CODE, DOCJOURNALTYPE_NAME, DOCJOURNALTYPE_DEBITCREDIT, FS.ACCOUNT.ACCOUNT_CODE, ACCOUNT_4NAME\nFROM FS.DOCJOURNALTYPE\nLEFT JOIN FS.ACCOUNT ON DOCJOURNALTYPE.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'DeleteDocProductBO', 'deleteDocProduct', 'DocDOF', 'DOCPRODUCTDELETE', 'DELETE\nFROM FS.DOCPRODUCT\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'document', 'salesdoc', 'so', 'SO_NAME : SalesDocUpdateSO', 'ReadDocTypeCodeBO', 'readDocTypeCode', 'DocDOF', 'DOCTYPEREAD', 'SELECT DOCTYPE_CODE, DOC_ROWSEQ\nFROM FS.DOC\nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'dq', 'SO_NAME : ReadPivotSO', 'GenerateInClauseBO', 'generateInClause', 'DqKeyValueDOF', 'SELECT', 'SELECT *\nFROM KH.DQTESTKEY;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'dq', 'SO_NAME : ReadPivotSO', 'ReadPivotBO', 'readPivot', ':_dynamicDqDOF', 'DQSELECT', 'SELECT *\nFROM KH.DQTESTMAIN, (SELECT *\nFROM KH.DQTESTKEYVALUE\nPIVOT ( MAX (DUMMYCOLUMN_VALUE) FOR DUMMYCOLUMN_KEYCODE IN :_dynamic)) AS DQTESTPIVOT\nWHERE DQTESTMAIN.DUMMYCOLUMN_EMPNO = DQTESTPIVOT.DUMMYCOLUMN_EMPNO'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'financialtstatement', 'so', 'SO_NAME : ReadFsSO', 'FinancialStatementBO', 'readFSlist', 'FinancialStatement1DOF', 'SELECT_LV1', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_1NAME\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.DOCUMENT.ACCOUNT_CODE < 40000\nGROUP BY FS.ACCOUNT.ACCOUNT_1NAME, FS.ACCOUNT.ACCOUNT_DEBIT\nORDER BY FS.ACCOUNT.ACCOUNT_DEBIT;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'financialtstatement', 'so', 'SO_NAME : ReadFsSO', 'FinancialStatementBO', 'readFSlist', 'FinancialStatement1DOF', 'SELECT_LV2', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_2NAME\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE) \nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nGROUP BY FS.ACCOUNT.ACCOUNT_2NAME, FS.ACCOUNT.ACCOUNT_DEBIT;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'financialtstatement', 'so', 'SO_NAME : ReadFsSO', 'FinancialStatementBO', 'readFSlist', 'FinancialStatement1DOF', 'SELECT_LV3', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, ACCOUNT_3NAME \nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR FS.DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nAND\nFS.ACCOUNT.ACCOUNT_2NAME = :ACCOUNT_2NAME\nGROUP BY FS.ACCOUNT.ACCOUNT_3NAME, FS.ACCOUNT.ACCOUNT_DEBIT"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'financialtstatement', 'so', 'SO_NAME : ReadFsSO', 'FinancialStatementBO', 'readFSlist', 'FinancialStatement1DOF', 'SELECT_LV4', "SELECT SUM(DOCJOURNAL_DEBIT) AS TOTAL_DEBIT, SUM(DOCJOURNAL_CREDIT) AS TOTAL_CREDIT,\nFS.ACCOUNT.ACCOUNT_DEBIT, FS.ACCOUNT.ACCOUNT_4NAME, FS.ACCOUNT.ACCOUNT_CODE, FS.ACCOUNT.ACCOUNT_TYPE\nFROM FS.DOCUMENT LEFT JOIN FS.ACCOUNT ON \nFS.DOCUMENT.ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE\nWHERE\nFS.DOCUMENT.DOC_DATE BETWEEN to_date(:START_DATE, 'YYYYMMDD') AND to_date(:END_DATE, 'YYYYMMDD')\nAND\n(:COMPANY_CODE IS NULL OR DOCUMENT.COMPANY_CODE = :COMPANY_CODE)\nAND\nFS.ACCOUNT.ACCOUNT_1NAME = :ACCOUNT_1NAME\nAND\nFS.ACCOUNT.ACCOUNT_2NAME = :ACCOUNT_2NAME\nAND\n(FS.ACCOUNT.ACCOUNT_3NAME IS NULL OR FS.ACCOUNT.ACCOUNT_3NAME = :ACCOUNT_3NAME)\nGROUP BY FS.ACCOUNT.ACCOUNT_CODE, FS.ACCOUNT.ACCOUNT_DEBIT, FS.ACCOUNT.ACCOUNT_4NAME, FS.ACCOUNT.ACCOUNT_TYPE\nORDER BY FS.ACCOUNT.ACCOUNT_CODE"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'been', 'SO_NAME : ReadMiniAccountSO', 'MiniAccountBO', 'readMiniAccount', 'MiniAccountDOF', 'SELECT', 'SELECT * FROM FS.ACCOUNT;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'closing', 'content', 'so', 'SO_NAME : ReadClosingDocJournalSO', 'CRUDClosingDocJournalBO', 'readClosingDocJournal', 'ClosingDocJournalDOF', 'READCLOSINGJOURNPA', "SELECT DOCJOURNAL_ROWSEQ, \nDOCJOURNAL_DEBIT, \nDOCJOURNAL_CREDIT, \nDOCJOURNAL_ABSTRACT, \nDOCJOURNAL.DOC_ROWSEQ,\nTO_CHAR(DOC.DOC_DATE, 'YYYY-MM-DD') AS DOC_DATE, \nDOCJOURNAL.ACCOUNT_CODE, \nACCOUNT.ACCOUNT_4NAME, \nDOCJOURNAL.CLIENT_CODE, \nCLIENT.CLIENT_NAME, \nDOCJOURNAL.DOCJOURNALTYPE_CODE, \nDOCJOURNALTYPE.DOCJOURNALTYPE_NAME, \nDOCJOURNAL.ABSTRACT_ID, \nABSTRACT.ABSTRACT_NAME\nFROM FS.DOCJOURNAL\nLEFT JOIN FS.ACCOUNT ON DOCJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\nLEFT JOIN FS.DOC ON DOCJOURNAL.DOC_ROWSEQ=DOC.DOC_ROWSEQ \nLEFT JOIN FS.CLIENT ON DOCJOURNAL.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCJOURNALTYPE ON DOCJOURNAL.DOCJOURNALTYPE_CODE = DOCJOURNALTYPE.DOCJOURNALTYPE_CODE\nLEFT JOIN FS.ABSTRACT ON DOCJOURNAL.ABSTRACT_ID = ABSTRACT.ABSTRACT_ID\nWHERE DOCJOURNAL.DOC_ROWSEQ = :DOC_ROWSEQ\nORDER BY DOCJOURNAL_ROWSEQ ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'closing', 'content', 'so', 'SO_NAME : ReadClosingDocJournalSO', 'CRUDClosingDocJournalBO', 'readClosingDocJournal', 'ClosingDocJournalDOF', 'READCLOSINGJOURNCHILD', "SELECT DOCJOURNAL_ROWSEQ, \nDOCJOURNAL_DEBIT, \nDOCJOURNAL_CREDIT, \nDOCJOURNAL_ABSTRACT, \nDOCJOURNAL.DOC_ROWSEQ,\nTO_CHAR(DOC.DOC_DATE, 'YYYY-MM-DD') AS DOC_DATE,  \nDOCJOURNAL.ACCOUNT_CODE, \nACCOUNT.ACCOUNT_4NAME, \nDOCJOURNAL.CLIENT_CODE, \nCLIENT.CLIENT_NAME, \nDOCJOURNAL.DOCJOURNALTYPE_CODE, \nDOCJOURNALTYPE.DOCJOURNALTYPE_NAME, \nDOCJOURNAL.ABSTRACT_ID, \nABSTRACT.ABSTRACT_NAME\nFROM FS.DOCJOURNAL\nLEFT JOIN FS.ACCOUNT ON DOCJOURNAL.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\nLEFT JOIN FS.DOC ON DOCJOURNAL.DOC_ROWSEQ=DOC.DOC_ROWSEQ\nLEFT JOIN FS.CLIENT ON DOCJOURNAL.CLIENT_CODE = CLIENT.CLIENT_CODE\nLEFT JOIN FS.DOCJOURNALTYPE ON DOCJOURNAL.DOCJOURNALTYPE_CODE = DOCJOURNALTYPE.DOCJOURNALTYPE_CODE\nLEFT JOIN FS.ABSTRACT ON DOCJOURNAL.ABSTRACT_ID = ABSTRACT.ABSTRACT_ID\nWHERE DOCJOURNAL.DOC_ROWSEQ = (SELECT DOC.DOC_ROWSEQ FROM FS.DOC WHERE DOC.DOC_PARENT = :DOC_ROWSEQ)\nORDER BY DOCJOURNAL_ROWSEQ ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'closing', 'content', 'so', 'SO_NAME : ReadClosingDocSO', 'CRUDClosingDocBO', 'readClosingDoc', 'ClosingAccountDOF', 'READCLOSINGACCOUNT', 'SELECT\nCLOSINGACCOUNTLIST.CLOSINGLIST_CODE,\nCLOSINGACCOUNTLIST.ACCOUNT_CODE\nFROM FS.CLOSINGACCOUNTLIST\nWHERE CLOSINGACCOUNTLIST.CLOSINGLIST_CODE = (SELECT CLOSINGLIST.CLOSINGLIST_CODE FROM FS.CLOSINGLIST WHERE CLOSINGLIST.CLOSINGLIST_NAME = :CLOSINGLIST_NAME);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'closing', 'content', 'so', 'SO_NAME : ReadClosingDocSO', 'CRUDClosingDocBO', 'readClosingDoc', 'ClosingDocDOF', 'READCLOSINGDOC', "SELECT\nDOCJOURNAL.DOC_ROWSEQ,\nDOCJOURNAL.DOCJOURNAL_DEBIT,\nDOCJOURNAL.CLIENT_CODE,\nTO_CHAR(DOC.DOC_DATE, 'YYYY-MM-DD') AS DOC_DATE,\nDOC.DOC_PARENT,\nCLOSINGPREEXP.CLOSINGPREEXP_NAME,\nTO_CHAR(CLOSINGPREEXP.CLOSINGPREEXP_STARTDATE, 'YYYY-MM-DD') AS CLOSINGPREEXP_STARTDATE, \nTO_CHAR(CLOSINGPREEXP.CLOSINGPREEXP_ENDDATE, 'YYYY-MM-DD') AS CLOSINGPREEXP_ENDDATE,\nCLOSINGPREEXP.CLOSINGPREEXP_BALANCE,\nTO_CHAR(CLOSINGPREEXP.CLOSINGPREEXP_UPLOADDATE, 'YYYY-MM-DD') AS CLOSINGPREEXP_UPLOADDATE,\nCLOSINGPREEXP.CLOSINGPREEXP_EXPSUM,\nCLIENT.CLIENT_NAME\nFROM FS.DOCJOURNAL\nLEFT JOIN FS.DOC ON DOCJOURNAL.DOC_ROWSEQ=DOC.DOC_ROWSEQ\nLEFT JOIN FS.CLOSINGPREEXP ON DOCJOURNAL.DOC_ROWSEQ=CLOSINGPREEXP.DOC_ROWSEQ\nLEFT JOIN FS.CLIENT ON DOCJOURNAL.CLIENT_CODE=CLIENT.CLIENT_CODE\nWHERE DOCJOURNAL.ACCOUNT_CODE = :ACCOUNT_CODE\nAND DOC.DOC_DATE <= TO_DATE(:ENDDATE, 'YYYYMMDD')\nAND DOC.DOC_DATE >= TO_DATE(:STARTDATE,'YYYYMMDD'); "], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'abstractcode', 'so', 'SO_NAME : ReadAbsNameByAbsCodeCashSO', 'SelectAbsNamebyCodeBO', 'readAbsNameByAbsCodeCash', 'AbstractCodeDOF', 'NAMEBYABSCODECASH', "SELECT ABSTRACT_CODE, ABSTRACT_ID, ABSTRACT_NAME FROM FS.ABSTRACT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE AND ABSTRACT_TYPE='CASH' AND ABSTRACT_CODE=:ABSTRACT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'abstractcode', 'so', 'SO_NAME : ReadAbsNameByAbsCodeSubSO', 'SelectAbsNamebyCodeBO', 'readAbsNameByAbsCodeSub', 'AbstractCodeDOF', 'NAMEBYABSCODESUB', "SELECT ABSTRACT_CODE, ABSTRACT_ID, ABSTRACT_NAME FROM FS.ABSTRACT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE AND ABSTRACT_TYPE='SUB' AND ABSTRACT_CODE=:ABSTRACT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'abstractcode', 'so', 'SO_NAME : ReadAbsNameByCodeCashSO', 'SelectAbsNamebyCodeBO', 'readAbsNameByCodeCash', 'AbstractCodeDOF', 'SELNAMEBYCODECASH', "SELECT ABSTRACT_NAME FROM FS.ABSTRACT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE AND ABSTRACT_TYPE='CASH' AND ABSTRACT_CODE=:ABSTRACT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'abstractcode', 'so', 'SO_NAME : ReadAbsNameByCodeSubSO', 'SelectAbsNamebyCodeBO', 'readAbsNameByCodeSub', 'AbstractCodeDOF', 'SELNAMEBYCODESUB', "SELECT ABSTRACT_NAME FROM FS.ABSTRACT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE AND ABSTRACT_TYPE='SUB' AND ABSTRACT_CODE=:ABSTRACT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'accountcode', 'so', 'SO_NAME : ReadAccount4NameByCode', 'AccountCodeBOforDoc', 'read4NameByCode', 'AccountCodeDOF', 'SELECT4NAMEBYCODE', 'SELECT ACCOUNT_4NAME FROM FS.ACCOUNT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'accountcode', 'so', 'SO_NAME : ReadDistinctACC1SO', 'ReadDistinctACC1BO', 'readDistinctACC1', 'AccountDOF', 'SELECTDISTINCTACC1', 'SELECT ACCOUNT_CODE, ACCOUNT_1NAME FROM FS.ACCOUNT\nWHERE (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE)\nORDER BY ACCOUNT_CODE ASC; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'adminitemcode', 'so', 'SO_NAME : ReadAdminItemSO', 'CRUDAdminItemBO', 'readAdminItem', 'AdminItemDOF', 'SELECTALL', 'SELECT * FROM FS.ADMINITEM'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtax', 'so', 'SO_NAME : DeleteLocalTaxCodeSO', 'DelectLocalTaxCodeBO', 'DeleteMethod', 'LocalTaxDOF', 'DELETE', '/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */\nDELETE FROM FS.LOCALTAX\nWHERE\n    LOCALTAX_CODE = :LOCALTAX_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtax', 'so', 'SO_NAME : DeleteLocalTaxSO', 'DeleteLocalTaxBO', 'DeleteMethod', 'LocalTaxDOF', 'DELETE', '/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */\nDELETE FROM FS.LOCALTAX\nWHERE\n    LOCALTAX_CODE = :LOCALTAX_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtax', 'so', 'SO_NAME : InsertLocalTaxCodeSO', 'InsertLocalTaxCodeBO', 'InsertMethod', 'LocalTaxDOF', 'INSERT', '/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */\nINSERT INTO FS.LOCALTAX (\n    LOCALTAX_CODE,\n    LOCALTAX_NAME\n) VALUES (\n    :LOCALTAX_CODE,\n    :LOCALTAX_NAME\n)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtax', 'so', 'SO_NAME : ShowLocalTaxCodeSO', 'ReadLocalTaxCodeBO', 'SelectAllMethod', 'LocalTaxDOF', 'SELECTALL', 'SELECT * FROM FS.LOCALTAX'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtax', 'so', 'SO_NAME : SelectLocalTaxCodeSO', 'SelectLocalTaxCodeBO', 'SelectMethod', 'LocalTaxDOF', 'SELECT', '/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */\nSELECT     LOCALTAX_CODE, LOCALTAX_NAME\nFROM\n    FS.LOCALTAX    A\nWHERE\n        A.LOCALTAX_CODE = :LOCALTAX_CODE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtax', 'so', 'SO_NAME : UpdateLocalTaxSO', 'UpdateLocalTaxBO', 'UpdateMethod', 'LocalTaxDOF', 'UPDATE', '/* com.tmax.fs.depth1.depth2.so.LocalTaxDOF */\nUPDATE     FS.LOCALTAX\nSET\n    LOCALTAX_CODE = :LOCALTAX_CODE,\n    LOCALTAX_NAME = :LOCALTAX_NAME\nWHERE\n    LOCALTAX_CODE = :LOCALTAX_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtaxcorptype', 'so', 'SO_NAME : DeleteLocalTaxCorpTypeSO', 'DeleteLocalTaxCorpTypeBO', 'DeleteMethod', 'LocalTaxCorpTypeDOF', 'DELETE', '/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */\nDELETE FROM FS.LOCALTAX_CORP_TYPE\nWHERE\n    LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtaxcorptype', 'so', 'SO_NAME : InsertLocalTaxCorpTypeCodeSO', 'InsertLocalTaxCorpTypeCodeBO', 'InsertMethod', 'LocalTaxCorpTypeDOF', 'INSERT', '/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */\nINSERT INTO FS.LOCALTAX_CORP_TYPE (\n    LOCALTAX_CORP_TYPE_CODE,\n    LOCALTAX_CORP_TYPE_CORPERATION\n) VALUES (\n    :LOCALTAX_CORP_TYPE_CODE,\n    :LOCALTAX_CORP_TYPE_CORPERATION\n)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtaxcorptype', 'so', 'SO_NAME : ReadLocalTaxCorpTypeCodeSO', 'ReadLocalTaxCorpTypeCodeBO', 'SelectAllMethod', 'LocalTaxCorpTypeDOF', 'SELECTALL', 'SELECT * FROM FS.LOCALTAX_CORP_TYPE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtaxcorptype', 'so', 'SO_NAME : SelectLocalTaxCorpTypeCodeSO', 'SelectLocalTaxCorpTypeCodeBO', 'selectMethod', 'LocalTaxCorpTypeDOF', 'SELECT', '/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */\nSELECT     LOCALTAX_CORP_TYPE_CODE,\n    LOCALTAX_CORP_TYPE_CORPERATION\nFROM\n    FS.LOCALTAX_CORP_TYPE\nWHERE\n        LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'localtaxcorptype', 'so', 'SO_NAME : UpdateLocalTaxCorpTypeSO', 'UpdateLocalTaxCorpTypeBO', 'UpdateMethod', 'LocalTaxCorpTypeDOF', 'UPDATE', '/* com.tmax.fs.localtaxcorptype.LocalTaxCorpTypeDOF */\nUPDATE     FS.LOCALTAX_CORP_TYPE\nSET\n    LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE,\n    LOCALTAX_CORP_TYPE_CORPERATION = :LOCALTAX_CORP_TYPE_CORPERATION\nWHERE\n    LOCALTAX_CORP_TYPE_CODE = :LOCALTAX_CORP_TYPE_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'stdaccount', 'so', 'SO_NAME : ReadStdAccountByACC2SO', 'StdAccountCodeBO', 'readStdAccountByACC2', 'StdAccountDOF', 'SELECTBYACC2', 'SELECT STDACCOUNT_PARENT, STDACCOUNT_CODE, STDACCOUNT_NAME\nFROM FS.STDACCOUNT\nSTART WITH STDACCOUNT_PARENT=(SELECT STDACCOUNT_CODE FROM FS.STDACCOUNT WHERE STDACCOUNT_NAME=:STARTACCOUNTNAME)\nCONNECT BY PRIOR STDACCOUNT_CODE=STDACCOUNT_PARENT;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'stdaccount', 'so', 'SO_NAME : ReadStdAccountByACC2SO', 'StdAccountCodeBO', 'readStdAccountByACC2', 'StdAccountDOF', 'SELECTNAMEBYCODE', 'SELECT STDACCOUNT_NAME FROM FS.STDACCOUNT WHERE STDACCOUNT_CODE=:STDACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'stdaccount', 'so', 'SO_NAME : ReadStdCodeByNameSO', 'StdAccountCodeBO', 'readStdCodeByName', 'StdAccountDOF', 'SELECTCODEBYNAME', "SELECT STDACCOUNT_CODE, STDACCOUNT_NAME\nFROM FS.STDACCOUNT\nWHERE STDACCOUNT_CODE = (SELECT STDACCOUNT_CODE FROM FS.STDACCOUNT WHERE (STDACCOUNT_NAME LIKE '%'||:STDACCOUNT_NAME||'%') AND ROWNUM =1 );"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'calculategive', 'so', 'SO_NAME : ReadGiveCutAmountSO', 'ReadGiveCutAmountBO', 'ReadGiveCutAmount', 'GiveFixedAssetDOF', 'SELECTALL', 'SELECT FIXEDASSET_CODE, FIXEDASSET_NAME, FIXEDASSET_DATE, INDUSTRY_CODE, FIXEDASSET_AMOUNTSET, FIXEDASSET_NEWPLUS, FIXEDASSET_PRECUTSUM, FIXEDASSET_DURATIONRATIO, FIXEDASSET_CUTRATIO, FIXEDASSET_SPECIALCUTRATIO, FIXEDASSET_CUTSUM\nFROM FS.FIXEDASSET;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'calculateuncut', 'so', 'SO_NAME : ReadAllUncutAmountSO', 'ReadAllUncutAmountBO', 'ReadAllUncutAmount', 'UncutFixedAssetDOF', 'SELECTBYTYPE', 'SELECT FIXEDASSET_CODE, FIXEDASSET_NAME, FIXEDASSET_DATE, INDUSTRY_CODE, FIXEDASSET_AMOUNTSET, FIXEDASSET_NEWPLUS, FIXEDASSET_PRECUTSUM, FIXEDASSET_DURATIONRATIO, FIXEDASSET_CUTRATIO, FIXEDASSET_SPECIALCUTRATIO, FIXEDASSET_CUTSUM\nFROM FS.FIXEDASSET\nWHERE FIXEDASSET_TYPE = :FIXEDASSET_TYPE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'calculateuncut', 'so', 'SO_NAME : ReadUncutAmountSO', 'ReadUncutAmountBO', 'ReadUncutAmount', 'UncutFixedAssetDOF', 'SELECT', 'SELECT FIXEDASSET_CODE, FIXEDASSET_NAME, FIXEDASSET_DATE, INDUSTRY_CODE, FIXEDASSET_AMOUNTSET, FIXEDASSET_NEWPLUS, FIXEDASSET_PRECUTSUM, FIXEDASSET_DURATIONRATIO, FIXEDASSET_CUTRATIO, FIXEDASSET_SPECIALCUTRATIO, FIXEDASSET_CUTSUM\nFROM FS.FIXEDASSET\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE AND FIXEDASSET_TYPE = :FIXEDASSET_TYPE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'management', 'so', 'SO_NAME : ReadAllListFixedAssetSO', 'ReadAllListFixedAssetBO', 'ReadAllListFixedAsset', 'FixedAssetManagementDOF', 'SELECTALL', 'SELECT *\nFROM FS.FIXEDASSET;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'management', 'so', 'SO_NAME : ReadListFixedAssetSO', 'ReadListFixedAssetBO', 'ReadListFixedAsset', 'FixedAssetManagementDOF', 'SELECT', 'SELECT *\nFROM FS.FIXEDASSET\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE AND FIXEDASSET_TYPE = :FIXEDASSET_TYPE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'monthly', 'so', 'SO_NAME : ReadClosingCutAmountSO', 'ReadClosingCutAmountBO', 'ReadClosingCutAmount', 'ClosingCutFixedAssetDOF', 'SELECT_DATE', "SELECT FIXEDASSET_CODE, FIXEDASSET_NAME, FIXEDASSET_DATE, ACCOUNT_CODE, INDUSTRY_CODE, FIXEDASSET_AMOUNTSET, FIXEDASSET_NEWPLUS, FIXEDASSET_PRECUTSUM, FIXEDASSET_CUTSET, FIXEDASSET_CUTRANGE, FIXEDASSET_SPECIALCUTAMOUNT, FIXEDASSET_CUTSUM, FIXEDASSET_SET\nFROM FS.FIXEDASSET\nWHERE FIXEDASSET_DATE < to_date(:DATE_INPUT,'yyyy-mm-dd');"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'productcost', 'so', 'SO_NAME : ReadAllProductCostCutAmountSO', 'ReadAllProductCostCutAmountBO', 'ReadAllProductCostCutAmount', 'ProductCostFixedAssetDOF', 'SELECTALL', 'SELECT FIXEDASSET_CODE, FIXEDASSET_NAME, FIXEDASSET_DATE, INDUSTRY_CODE, FIXEDASSET_AMOUNTSET, FIXEDASSET_NEWPLUS, FIXEDASSET_PRECUTSUM, FIXEDASSET_DURATIONRATIO, FIXEDASSET_CUTRATIO, FIXEDASSET_SPECIALCUTRATIO, FIXEDASSET_CUTSUM\nFROM FS.FIXEDASSET\nWHERE FIXEDASSET_TYPE = :FIXEDASSET_TYPE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'productcost', 'so', 'SO_NAME : ReadProductCostCutAmountSO', 'ReadProductCostCutAmountBO', 'ReadProductCostCutAmount', 'ProductCostFixedAssetDOF', 'SELECT', 'SELECT FIXEDASSET_CODE, FIXEDASSET_NAME, FIXEDASSET_DATE, INDUSTRY_CODE, FIXEDASSET_AMOUNTSET, FIXEDASSET_NEWPLUS, FIXEDASSET_PRECUTSUM, FIXEDASSET_DURATIONRATIO, FIXEDASSET_CUTRATIO, FIXEDASSET_SPECIALCUTRATIO, FIXEDASSET_CUTSUM\nFROM FS.FIXEDASSET\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE AND FIXEDASSET_TYPE = :FIXEDASSET_TYPE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : DeleteFixedAssetSO', 'DeleteFixedAssetBO', 'DeleteFixedAsset', 'FixedAssetDOF', 'DELETE', 'DELETE\nFROM FS.FIXEDASSET\nWHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : InsertFixedAssetSO', 'InsertFixedAssetBO', 'insertFixedAsset', 'FixedAssetDOF', 'INSERT', "INSERT INTO FS.FIXEDASSET\nVALUES (\n    :FIXEDASSET_CODE,\n    :ACCOUNT_CODE,\n    :EMPLOYEE_USE_CODE,\n    :SITE_CODE,\n    :INDUSTRY_CODE,\n    :PROJECT_CODE,\n    :FIXEDASSET_NAME,\n\tTO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),\n    :FIXEDASSET_AMOUNTSET,\n    :FIXEDASSET_PRECUTSUM,\n    :FIXEDASSET_PRESET,\n    :FIXEDASSET_NEWPLUS,\n    :FIXEDASSET_PARTSELLDISUSE,\n    :FIXEDASSET_TRUSTAMOUNTSET,\n    :FIXEDASSET_TRUSTCUTSUM,\n    :FIXEDASSET_TRUSTCUTSET,\n    :FIXEDASSET_CUTSET,\n    :FIXEDASSET_CUTTYPE_CODE,\n    :FIXEDASSET_DURATIONRATIO,\n    :FIXEDASSET_DURATIONTIME,\n    TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),\n    :FIXEDASSET_CUTAMOUNT,\n    :FIXEDASSET_TRUSTBOOKAMOUNT,\n    :FIXEDASSET_PREOVERCUTSUM,\n    :FIXEDASSET_PREPAYSUM,\n    :FIXEDASSET_CUTNOW,\n    :FIXEDASSET_CUTASSUMESUM,\n    :FIXEDASSET_CUTRANGE,\n    :FIXEDASSET_CUTRATIO,\n    :FIXEDASSET_SPECIALCUTRATIO,\n    :FIXEDASSET_SPECIALCUTAMOUNT,\n    :FIXEDASSET_CUTSUM,\n    :FIXEDASSET_SET,\n    :FIXEDASSET_ISSPECIAL_CODE,\n    :FIXEDASSET_ISCAR_CODE,\n    :FIXEDASSET_AMOUNT,\n    :FIXEDASSET_TYPERANGE_CODE,\n    TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),\n    :FIXEDASSET_MINOVERCUTSET,\n    :FIXEDASSET_CUTASSUMEAMOUNT,\n    TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),\n    :FIXEDASSET_MANAGECODE,\n    :FIXEDASSET_GETBY,\n    :FIXEDASSET_MADEBY,\n    :FIXEDASSET_SIZE,\n    :FIXEDASSET_MODEL,\n    :FIXEDASSET_REMARKS,\n    :FIXEDASSET_HISTORY,\n    :FIXEDASSET_TYPE_CODE,\n    :COMPANY_CODE,\n    :EMPLOYEE_MANAGE_CODE,\n    :FIXEDASSET_ISSPECIAL_YEAR\n);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : ReadAllFixedAssetSO', 'ReadAllFixedAssetBO', 'ReadAllFixedAsset', 'FixedAssetDOF', 'SELECTALL', 'SELECT\nFIXEDASSET_CODE,\nACCOUNT_CODE,\nEMPLOYEE_USE_CODE,\nEMPLOYEE_MANAGE_CODE,\nSITE_CODE,\nINDUSTRY_CODE,\nPROJECT_CODE,\nFIXEDASSET_NAME,\nFIXEDASSET_DATE,\nFIXEDASSET_AMOUNTSET,\nFIXEDASSET_PRECUTSUM,\nFIXEDASSET_PRESET,\nFIXEDASSET_NEWPLUS,\nFIXEDASSET_PARTSELLDISUSE,\nFIXEDASSET_TRUSTAMOUNTSET,\nFIXEDASSET_TRUSTCUTSUM,\nFIXEDASSET_TRUSTCUTSET,\nFIXEDASSET_CUTSET,\nFIXEDASSET.FIXEDASSET_CUTTYPE_CODE,\nFIXEDASSET_CUTTYPE.FIXEDASSET_CUTTYPE_NAME,\nFIXEDASSET_DURATIONRATIO,\nFIXEDASSET_DURATIONTIME,\nFIXEDASSET_ISCUTFINISHDATE,\nFIXEDASSET_CUTAMOUNT,\nFIXEDASSET_TRUSTBOOKAMOUNT,\nFIXEDASSET_PREOVERCUTSUM,\nFIXEDASSET_PREPAYSUM,\nFIXEDASSET_CUTNOW,\nFIXEDASSET_CUTASSUMESUM,\nFIXEDASSET_CUTRANGE,\nFIXEDASSET_CUTRATIO,\nFIXEDASSET_SPECIALCUTRATIO,\nFIXEDASSET_SPECIALCUTAMOUNT,\nFIXEDASSET_CUTSUM,\nFIXEDASSET_SET,\nFIXEDASSET.FIXEDASSET_ISSPECIAL_CODE,\nFIXEDASSET_ISSPECIAL.FIXEDASSET_ISSPECIAL_NAME,\nFIXEDASSET.FIXEDASSET_ISCAR_CODE,\nFIXEDASSET_ISCAR.FIXEDASSET_ISCAR_NAME,\nFIXEDASSET_AMOUNT,\nFIXEDASSET.FIXEDASSET_TYPERANGE_CODE,\nFIXEDASSET_TYPERANGE.FIXEDASSET_TYPERANGE_NAME,\nFIXEDASSET_GIVEDATE,\nFIXEDASSET_MINOVERCUTSET,\nFIXEDASSET_CUTASSUMEAMOUNT,\nFIXEDASSET_DISUSEDATE,\nFIXEDASSET_MANAGECODE,\nFIXEDASSET_GETBY,\nFIXEDASSET_MADEBY,\nFIXEDASSET_SIZE,\nFIXEDASSET_MODEL,\nFIXEDASSET_REMARKS,\nFIXEDASSET_HISTORY,\nFIXEDASSET.FIXEDASSET_TYPE_CODE,\nFIXEDASSET_TYPE.FIXEDASSET_TYPE_NAME,\nCOMPANY_CODE,\nFIXEDASSET_ISSPECIAL_YEAR\nFROM FS.FIXEDASSET\nLEFT JOIN FS.FIXEDASSET_CUTTYPE ON FS.FIXEDASSET.FIXEDASSET_CUTTYPE_CODE = FS.FIXEDASSET_CUTTYPE.FIXEDASSET_CUTTYPE_CODE\nLEFT JOIN FS.FIXEDASSET_ISCAR ON FS.FIXEDASSET.FIXEDASSET_ISCAR_CODE = FS.FIXEDASSET_ISCAR.FIXEDASSET_ISCAR_CODE\nLEFT JOIN FS.FIXEDASSET_TYPERANGE ON FS.FIXEDASSET.FIXEDASSET_TYPERANGE_CODE = FS.FIXEDASSET_TYPERANGE.FIXEDASSET_TYPERANGE_CODE\nLEFT JOIN FS.FIXEDASSET_TYPE ON FS.FIXEDASSET.FIXEDASSET_TYPE_CODE = FS.FIXEDASSET_TYPE.FIXEDASSET_TYPE_CODE\nLEFT JOIN FS.FIXEDASSET_ISSPECIAL ON FS.FIXEDASSET.FIXEDASSET_ISSPECIAL_CODE = FS.FIXEDASSET_ISSPECIAL.FIXEDASSET_ISSPECIAL_CODE\nORDER BY FIXEDASSET_CODE ASC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : ReadFixedAssetbyFSCodeSO', 'ReadFixedAssetbyFSCodeBO', 'readFixedAssetbyFSCode', 'FixedAssetDOF', 'SELECTFSCODE', 'SELECT\nFIXEDASSET_CODE,\nACCOUNT_CODE,\nEMPLOYEE_USE_CODE,\nEMPLOYEE_MANAGE_CODE,\nSITE_CODE,\nINDUSTRY_CODE,\nPROJECT_CODE,\nFIXEDASSET_NAME,\nFIXEDASSET_DATE,\nFIXEDASSET_AMOUNTSET,\nFIXEDASSET_PRECUTSUM,\nFIXEDASSET_PRESET,\nFIXEDASSET_NEWPLUS,\nFIXEDASSET_PARTSELLDISUSE,\nFIXEDASSET_TRUSTAMOUNTSET,\nFIXEDASSET_TRUSTCUTSUM,\nFIXEDASSET_TRUSTCUTSET,\nFIXEDASSET_CUTSET,\nFIXEDASSET.FIXEDASSET_CUTTYPE_CODE,\nFIXEDASSET_CUTTYPE.FIXEDASSET_CUTTYPE_NAME,\nFIXEDASSET_DURATIONRATIO,\nFIXEDASSET_DURATIONTIME,\nFIXEDASSET_ISCUTFINISHDATE,\nFIXEDASSET_CUTAMOUNT,\nFIXEDASSET_TRUSTBOOKAMOUNT,\nFIXEDASSET_PREOVERCUTSUM,\nFIXEDASSET_PREPAYSUM,\nFIXEDASSET_CUTNOW,\nFIXEDASSET_CUTASSUMESUM,\nFIXEDASSET_CUTRANGE,\nFIXEDASSET_CUTRATIO,\nFIXEDASSET_SPECIALCUTRATIO,\nFIXEDASSET_SPECIALCUTAMOUNT,\nFIXEDASSET_CUTSUM,\nFIXEDASSET_SET,\nFIXEDASSET.FIXEDASSET_ISSPECIAL_CODE,\nFIXEDASSET_ISSPECIAL.FIXEDASSET_ISSPECIAL_NAME,\nFIXEDASSET.FIXEDASSET_ISCAR_CODE,\nFIXEDASSET_ISCAR.FIXEDASSET_ISCAR_NAME,\nFIXEDASSET_AMOUNT,\nFIXEDASSET.FIXEDASSET_TYPERANGE_CODE,\nFIXEDASSET_TYPERANGE.FIXEDASSET_TYPERANGE_NAME,\nFIXEDASSET_GIVEDATE,\nFIXEDASSET_MINOVERCUTSET,\nFIXEDASSET_CUTASSUMEAMOUNT,\nFIXEDASSET_DISUSEDATE,\nFIXEDASSET_MANAGECODE,\nFIXEDASSET_GETBY,\nFIXEDASSET_MADEBY,\nFIXEDASSET_SIZE,\nFIXEDASSET_MODEL,\nFIXEDASSET_REMARKS,\nFIXEDASSET_HISTORY,\nFIXEDASSET.FIXEDASSET_TYPE_CODE,\nFIXEDASSET_TYPE.FIXEDASSET_TYPE_NAME,\nCOMPANY_CODE,\nFIXEDASSET_ISSPECIAL_YEAR\nFROM FS.FIXEDASSET\nLEFT JOIN FS.FIXEDASSET_CUTTYPE ON FS.FIXEDASSET.FIXEDASSET_CUTTYPE_CODE = FS.FIXEDASSET_CUTTYPE.FIXEDASSET_CUTTYPE_CODE\nLEFT JOIN FS.FIXEDASSET_ISCAR ON FS.FIXEDASSET.FIXEDASSET_ISCAR_CODE = FS.FIXEDASSET_ISCAR.FIXEDASSET_ISCAR_CODE\nLEFT JOIN FS.FIXEDASSET_TYPERANGE ON FS.FIXEDASSET.FIXEDASSET_TYPERANGE_CODE = FS.FIXEDASSET_TYPERANGE.FIXEDASSET_TYPERANGE_CODE\nLEFT JOIN FS.FIXEDASSET_TYPE ON FS.FIXEDASSET.FIXEDASSET_TYPE_CODE = FS.FIXEDASSET_TYPE.FIXEDASSET_TYPE_CODE\nLEFT JOIN FS.FIXEDASSET_ISSPECIAL ON FS.FIXEDASSET.FIXEDASSET_ISSPECIAL_CODE = FS.FIXEDASSET_ISSPECIAL.FIXEDASSET_ISSPECIAL_CODE\nWHERE FIXEDASSET_CODE = :FIXEDASSET_CODE\nORDER BY FIXEDASSET_CODE ASC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : ReadFixedAssetSO', 'ReadFixedAssetBO', 'ReadFixedAsset', 'FixedAssetDOF', 'SELECT', 'SELECT \nFIXEDASSET_CODE,\nACCOUNT_CODE,\nEMPLOYEE_USE_CODE,\nEMPLOYEE_MANAGE_CODE,\nSITE_CODE,\nINDUSTRY_CODE,\nPROJECT_CODE,\nFIXEDASSET_NAME,\nFIXEDASSET_DATE,\nFIXEDASSET_AMOUNTSET,\nFIXEDASSET_PRECUTSUM,\nFIXEDASSET_PRESET,\nFIXEDASSET_NEWPLUS,\nFIXEDASSET_PARTSELLDISUSE,\nFIXEDASSET_TRUSTAMOUNTSET,\nFIXEDASSET_TRUSTCUTSUM,\nFIXEDASSET_TRUSTCUTSET,\nFIXEDASSET_CUTSET,\nFIXEDASSET.FIXEDASSET_CUTTYPE_CODE,\nFIXEDASSET_CUTTYPE.FIXEDASSET_CUTTYPE_NAME,\nFIXEDASSET_DURATIONRATIO,\nFIXEDASSET_DURATIONTIME,\nFIXEDASSET_ISCUTFINISHDATE,\nFIXEDASSET_CUTAMOUNT,\nFIXEDASSET_TRUSTBOOKAMOUNT,\nFIXEDASSET_PREOVERCUTSUM,\nFIXEDASSET_PREPAYSUM,\nFIXEDASSET_CUTNOW,\nFIXEDASSET_CUTASSUMESUM,\nFIXEDASSET_CUTRANGE,\nFIXEDASSET_CUTRATIO,\nFIXEDASSET_SPECIALCUTRATIO,\nFIXEDASSET_SPECIALCUTAMOUNT,\nFIXEDASSET_CUTSUM,\nFIXEDASSET_SET,\nFIXEDASSET.FIXEDASSET_ISSPECIAL_CODE,\nFIXEDASSET_ISSPECIAL.FIXEDASSET_ISSPECIAL_NAME,\nFIXEDASSET.FIXEDASSET_ISCAR_CODE,\nFIXEDASSET_ISCAR.FIXEDASSET_ISCAR_NAME,\nFIXEDASSET_AMOUNT,\nFIXEDASSET.FIXEDASSET_TYPERANGE_CODE,\nFIXEDASSET_TYPERANGE.FIXEDASSET_TYPERANGE_NAME,\nFIXEDASSET_GIVEDATE,\nFIXEDASSET_MINOVERCUTSET,\nFIXEDASSET_CUTASSUMEAMOUNT,\nFIXEDASSET_DISUSEDATE,\nFIXEDASSET_MANAGECODE,\nFIXEDASSET_GETBY,\nFIXEDASSET_MADEBY,\nFIXEDASSET_SIZE,\nFIXEDASSET_MODEL,\nFIXEDASSET_REMARKS,\nFIXEDASSET_HISTORY,\nFIXEDASSET.FIXEDASSET_TYPE_CODE,\nFIXEDASSET_TYPE.FIXEDASSET_TYPE_NAME,\nCOMPANY_CODE,\nFIXEDASSET_ISSPECIAL_YEAR\nFROM FS.FIXEDASSET\nLEFT JOIN FS.FIXEDASSET_CUTTYPE ON FS.FIXEDASSET.FIXEDASSET_CUTTYPE_CODE = FS.FIXEDASSET_CUTTYPE.FIXEDASSET_CUTTYPE_CODE\nLEFT JOIN FS.FIXEDASSET_ISCAR ON FS.FIXEDASSET.FIXEDASSET_ISCAR_CODE = FS.FIXEDASSET_ISCAR.FIXEDASSET_ISCAR_CODE\nLEFT JOIN FS.FIXEDASSET_TYPERANGE ON FS.FIXEDASSET.FIXEDASSET_TYPERANGE_CODE = FS.FIXEDASSET_TYPERANGE.FIXEDASSET_TYPERANGE_CODE\nLEFT JOIN FS.FIXEDASSET_TYPE ON FS.FIXEDASSET.FIXEDASSET_TYPE_CODE = FS.FIXEDASSET_TYPE.FIXEDASSET_TYPE_CODE\nLEFT JOIN FS.FIXEDASSET_ISSPECIAL ON FS.FIXEDASSET.FIXEDASSET_ISSPECIAL_CODE = FS.FIXEDASSET_ISSPECIAL.FIXEDASSET_ISSPECIAL_CODE\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE\nORDER BY FIXEDASSET_CODE ASC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : UpdateFixedAssetSO', 'UpdateFixedAssetBO', 'updateFixedAsset', 'FixedAssetDOF', 'UPDATE', "UPDATE FS.FIXEDASSET\nSET  EMPLOYEE_USE_CODE = :EMPLOYEE_USE_CODE,\n  SITE_CODE =  :SITE_CODE,\n  INDUSTRY_CODE =  :INDUSTRY_CODE,\n  PROJECT_CODE =  :PROJECT_CODE,\n  FIXEDASSET_AMOUNTSET =  :FIXEDASSET_AMOUNTSET,\n  FIXEDASSET_PRECUTSUM =  :FIXEDASSET_PRECUTSUM,\n  FIXEDASSET_PRESET =  :FIXEDASSET_PRESET,\n  FIXEDASSET_NEWPLUS =  :FIXEDASSET_NEWPLUS,\n  FIXEDASSET_PARTSELLDISUSE =  :FIXEDASSET_PARTSELLDISUSE,\n  FIXEDASSET_TRUSTAMOUNTSET =  :FIXEDASSET_TRUSTAMOUNTSET,\n  FIXEDASSET_TRUSTCUTSUM =  :FIXEDASSET_TRUSTCUTSUM,\n  FIXEDASSET_TRUSTCUTSET =  :FIXEDASSET_TRUSTCUTSET,\n  FIXEDASSET_CUTSET =  :FIXEDASSET_CUTSET,\n  FIXEDASSET_CUTTYPE_CODE =  :FIXEDASSET_CUTTYPE_CODE,\n  FIXEDASSET_DURATIONRATIO =  :FIXEDASSET_DURATIONRATIO,\n  FIXEDASSET_DURATIONTIME =  :FIXEDASSET_DURATIONTIME,\n  FIXEDASSET_ISCUTFINISHDATE =  TO_DATE(:FIXEDASSET_ISCUTFINISHDATE, 'YYYY.MM.DD'),\n  FIXEDASSET_CUTAMOUNT =  :FIXEDASSET_CUTAMOUNT,\n  FIXEDASSET_TRUSTBOOKAMOUNT =  :FIXEDASSET_TRUSTBOOKAMOUNT,\n  FIXEDASSET_PREOVERCUTSUM =  :FIXEDASSET_PREOVERCUTSUM,\n  FIXEDASSET_PREPAYSUM =  :FIXEDASSET_PREPAYSUM,\n  FIXEDASSET_CUTNOW =  :FIXEDASSET_CUTNOW,\n  FIXEDASSET_CUTASSUMESUM =  :FIXEDASSET_CUTASSUMESUM,\n  FIXEDASSET_CUTRANGE =  :FIXEDASSET_CUTRANGE,\n  FIXEDASSET_CUTRATIO =  :FIXEDASSET_CUTRATIO,\n  FIXEDASSET_SPECIALCUTRATIO =  :FIXEDASSET_SPECIALCUTRATIO,\n  FIXEDASSET_SPECIALCUTAMOUNT =  :FIXEDASSET_SPECIALCUTAMOUNT,\n  FIXEDASSET_CUTSUM =  :FIXEDASSET_CUTSUM,\n  FIXEDASSET_SET =  :FIXEDASSET_SET,\n  FIXEDASSET_ISSPECIAL_CODE =  :FIXEDASSET_ISSPECIAL_CODE,\n  FIXEDASSET_ISCAR_CODE =  :FIXEDASSET_ISCAR_CODE,\n  FIXEDASSET_AMOUNT =  :FIXEDASSET_AMOUNT,\n  FIXEDASSET_TYPERANGE_CODE =  :FIXEDASSET_TYPERANGE_CODE,\n  FIXEDASSET_GIVEDATE =  TO_DATE(:FIXEDASSET_GIVEDATE, 'YYYY.MM.DD'),\n  FIXEDASSET_MINOVERCUTSET =  :FIXEDASSET_MINOVERCUTSET,\n  FIXEDASSET_CUTASSUMEAMOUNT =  :FIXEDASSET_CUTASSUMEAMOUNT,\n  FIXEDASSET_DISUSEDATE =  TO_DATE(:FIXEDASSET_DISUSEDATE, 'YYYY.MM.DD'),\n  FIXEDASSET_MANAGECODE =  :FIXEDASSET_MANAGECODE,\n  FIXEDASSET_GETBY =   :FIXEDASSET_GETBY,\n  FIXEDASSET_MADEBY =  :FIXEDASSET_MADEBY,\n  FIXEDASSET_SIZE =  :FIXEDASSET_SIZE,\n  FIXEDASSET_MODEL =  :FIXEDASSET_MODEL,\n  FIXEDASSET_REMARKS =  :FIXEDASSET_REMARKS,\n  FIXEDASSET_HISTORY =  :FIXEDASSET_HISTORY,\n  EMPLOYEE_MANAGE_CODE =  :EMPLOYEE_MANAGE_CODE,\n  FIXEDASSET_ISSPECIAL_YEAR =  :FIXEDASSET_ISSPECIAL_YEAR\nWHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'fixed', 'register', 'so', 'SO_NAME : UpdateFixedAssetTableSO', 'UpdateFixedAssetTableBO', 'updateFixedAssetTable', 'FixedAssetDOF', 'UPDATETABLE', "UPDATE FS.FIXEDASSET\nSET FIXEDASSET_CODE = :FIXEDASSET_CODE,\n  FIXEDASSET_NAME = :FIXEDASSET_NAME,\n  FIXEDASSET_DATE = TO_DATE(:FIXEDASSET_DATE, 'YYYY.MM.DD'),\n  FIXEDASSET_CUTTYPE_CODE = :FIXEDASSET_CUTTYPE_CODE\nWHERE FIXEDASSET_CODE = :FIXEDASSET_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'abs', 'so', 'SO_NAME : DeleteAbstractSO', 'CRUDAbstractBO', 'deleteAbstract', 'AbstractCRUDDOF', 'DELETE', 'DELETE FROM FS.ABSTRACT\nWHERE ABSTRACT_ID = :ABSTRACT_ID;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'abs', 'so', 'SO_NAME : InsertAbstractSO', 'CRUDAbstractBO', 'insertAbstract', 'AbstractCRUDDOF', 'INSERT', 'INSERT INTO FS.ABSTRACT (\n    ABSTRACT_ID,\n    ABSTRACT_NAME,\n    ABSTRACT_CODE,\n    ABSTRACT_TYPE,\n    ACCOUNT_CODE,\n    ABSTRACT_EXTRA\n) VALUES (\n    :ABSTRACT_ID,\n    :ABSTRACT_NAME,\n    :ABSTRACT_CODE,\n    :ABSTRACT_TYPE,\n    :ACCOUNT_CODE,\n    :ABSTRACT_EXTRA);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'abs', 'so', 'SO_NAME : ReadCasbAbstractSO', 'CRUDAbstractBO', 'readAbstractCash', 'AbsstractCRUD', 'SELECTCASH', "SELECT * FROM FS.ABSTRACT\nWHERE ABSTRACT_TYPE = 'CASH' AND ACCOUNT_CODE = :ACCOUNT_CODE;\n"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'abs', 'so', 'SO_NAME : ReadSubAbstractSO', 'CRUDAbstractBO', 'readAbstractSub', 'AbsstractCRUD', 'SELECTSUB', "SELECT * FROM FS.ABSTRACT\nWHERE ABSTRACT_TYPE = 'SUB' AND ACCOUNT_CODE = :ACCOUNT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'abs', 'so', 'SO_NAME : UpdateAbstractSO', 'CRUDAbstractBO', 'updateAbstract', 'AbstractCRUDDOF', 'UPDATE', 'UPDATE FS.ABSTRACT\nSET\n    ABSTRACT_NAME = :ABSTRACT_NAME,\n    ABSTRACT_CODE = :ABSTRACT_CODE,\n    ABSTRACT_TYPE = :ABSTRACT_TYPE,\n    ABSTRACT_EXTRA =:ABSTRACT_EXTRA\nWHERE ABSTRACT_ID = :ABSTRACT_ID;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : DeleteAccountSO', 'CRUDAccountBO', 'deleteAccount', 'AccountCRUDDOF', 'DELETE', 'DELETE FROM FS.ACCOUNT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : InsertAccountSO', 'CRUDAccountBO', 'insertAccount', 'AccountCRUDDOF', 'INSERT_ALL', 'INSERT INTO FS.ACCOUNT (ACCOUNT_CODE, ACCOUNT_4NAME, ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, STDACCOUNT_CODE, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT,ACCOUNT_ADMIN) \nVALUES (:ACCOUNT_CODE, :ACCOUNT_4NAME, :ACCOUNT_TYPE, :ACCOUNT_USAGE, :ACCOUNT_REL, :STDACCOUNT_CODE, :ACCOUNT_PRNAME, :ACCOUNT_ENG, :ACCOUNT_3NAME, :ACCOUNT_2NAME, :ACCOUNT_1NAME, :ACCOUNT_PARENT, :ACCOUNT_ADMIN);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : InsertAccountSO', 'CRUDAccountBO', 'insertAccount', 'AccountHierarchyDOF', 'CONNECTBYREVERSE', 'SELECT ACCOUNT_CODE, ACCOUNT_4NAME, LEVEL AS ACCOUNT_LEVEL, ACCOUNT_1NAME\nFROM FS.ACCOUNT\nSTART WITH ACCOUNT_CODE =:ACCOUNT_PARENT\nCONNECT BY PRIOR ACCOUNT_PARENT=ACCOUNT_CODE; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC1SO', 'FilterAccountBO', 'filterAccountByACC1', 'AccountFilteringDOF', 'SELECTBYACC1', "SELECT ACCOUNT_CODE, STDACCOUNT_CODE, ACCOUNT_4NAME, (ACCOUNT.ACCOUNT_TYPE||'.'||ACCOUNTTYPE.ACCOUNT_TYPENAME) AS ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT, ACCOUNT_ADMIN \nFROM FS.ACCOUNT \nLEFT JOIN FS.ACCOUNTTYPE ON ACCOUNT.ACCOUNT_TYPE=ACCOUNTTYPE.ACCOUNT_TYPE \nWHERE ACCOUNT_1NAME =:ACCOUNT_1NAME AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC1SO', 'FilterAccountBO', 'filterAccountByACC1', 'AccountCodeDOF', 'SELECT4NAMEBYCODE', 'SELECT ACCOUNT_4NAME FROM FS.ACCOUNT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC1SO', 'FilterAccountBO', 'filterAccountByACC1', 'StdAccountDOF', 'SELECTNAMEBYCODE', 'SELECT STDACCOUNT_NAME FROM FS.STDACCOUNT WHERE STDACCOUNT_CODE=:STDACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC2SO', 'FilterAccountBO', 'filterAccountByACC2', 'AccountFilteringDOF', 'SELECTBYACC2', "SELECT ACCOUNT_CODE, STDACCOUNT_CODE, ACCOUNT_4NAME, (ACCOUNT.ACCOUNT_TYPE||'.'||ACCOUNTTYPE.ACCOUNT_TYPENAME) AS ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT, ACCOUNT_ADMIN \nFROM FS.ACCOUNT \nLEFT JOIN FS.ACCOUNTTYPE ON ACCOUNT.ACCOUNT_TYPE=ACCOUNTTYPE.ACCOUNT_TYPE \nWHERE ACCOUNT_2NAME =:ACCOUNT_2NAME AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC2SO', 'FilterAccountBO', 'filterAccountByACC2', 'AccountCodeDOF', 'SELECT4NAMEBYCODE', 'SELECT ACCOUNT_4NAME FROM FS.ACCOUNT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC2SO', 'FilterAccountBO', 'filterAccountByACC2', 'StdAccountDOF', 'SELECTNAMEBYCODE', 'SELECT STDACCOUNT_NAME FROM FS.STDACCOUNT WHERE STDACCOUNT_CODE=:STDACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC3SO', 'FilterAccountBO', 'filterAccountByACC3', 'AccountFilteringDOF', 'SELECTBYACC3', "SELECT ACCOUNT_CODE, STDACCOUNT_CODE, ACCOUNT_4NAME, (ACCOUNT.ACCOUNT_TYPE||'.'||ACCOUNTTYPE.ACCOUNT_TYPENAME) AS ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT, ACCOUNT_ADMIN  \nFROM FS.ACCOUNT \nLEFT JOIN FS.ACCOUNTTYPE ON ACCOUNT.ACCOUNT_TYPE=ACCOUNTTYPE.ACCOUNT_TYPE \nWHERE ACCOUNT_3NAME =:ACCOUNT_3NAME AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC3SO', 'FilterAccountBO', 'filterAccountByACC3', 'AccountCodeDOF', 'SELECT4NAMEBYCODE', 'SELECT ACCOUNT_4NAME FROM FS.ACCOUNT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountByACC3SO', 'FilterAccountBO', 'filterAccountByACC3', 'StdAccountDOF', 'SELECTNAMEBYCODE', 'SELECT STDACCOUNT_NAME FROM FS.STDACCOUNT WHERE STDACCOUNT_CODE=:STDACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountListSO', 'CRUDAccountBO', 'readAccountList', 'AccountDOF', 'SELECT_ALL', "SELECT ACCOUNT_CODE, STDACCOUNT_CODE, ACCOUNT_4NAME, (ACCOUNT.ACCOUNT_TYPE||'.'||ACCOUNTTYPE.ACCOUNT_TYPENAME) AS ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT, ACCOUNT_ADMIN       \nFROM FS.ACCOUNT\nLEFT JOIN FS.ACCOUNTTYPE ON ACCOUNT.ACCOUNT_TYPE=ACCOUNTTYPE.ACCOUNT_TYPE \nWHERE (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountListSO', 'CRUDAccountBO', 'readAccountList', 'AccountCodeDOF', 'SELECT4NAMEBYCODE', 'SELECT ACCOUNT_4NAME FROM FS.ACCOUNT\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountListSO', 'CRUDAccountBO', 'readAccountList', 'StdAccountDOF', 'SELECTNAMEBYCODE', 'SELECT STDACCOUNT_NAME FROM FS.STDACCOUNT WHERE STDACCOUNT_CODE=:STDACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountTreeSO', 'FilterAccountBO', 'readDistinctAccount123', 'AccountFilteringDOF', 'SELECTDISTINCT123', 'SELECT ACCOUNT_CODE, ACCOUNT_1NAME, ACCOUNT_2NAME, ACCOUNT_3NAME FROM FS.ACCOUNT\nWHERE (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE)\nORDER BY ACCOUNT_CODE ASC; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadAccountTreeSO', 'ReadDistinctACC1BO', 'readDistinctACC1', 'AccountDOF', 'SELECTDISTINCTACC1', 'SELECT ACCOUNT_CODE, ACCOUNT_1NAME FROM FS.ACCOUNT\nWHERE (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE)\nORDER BY ACCOUNT_CODE ASC; '], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : ReadOneAccountSO', 'CRUDAccountBO', 'readOneAccount', 'AccountCRUDDOF', 'SELECT_ONE', "SELECT ACCOUNT_CODE, STDACCOUNT_CODE, ACCOUNT_4NAME, (ACCOUNT.ACCOUNT_TYPE||'.'||ACCOUNTTYPE.ACCOUNT_TYPENAME) AS ACCOUNT_TYPE, ACCOUNT_USAGE, ACCOUNT_REL, ACCOUNT_PRNAME, ACCOUNT_ENG, ACCOUNT_3NAME, ACCOUNT_2NAME, ACCOUNT_1NAME, ACCOUNT_PARENT, ACCOUNT_ADMIN    \nFROM FS.ACCOUNT\nLEFT JOIN FS.ACCOUNTTYPE ON ACCOUNT.ACCOUNT_TYPE=ACCOUNTTYPE.ACCOUNT_TYPE \nWHERE ACCOUNT_CODE=:ACCOUNT_CODE AND (:COMPANY_CODE IS NULL OR COMPANY_CODE = :COMPANY_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : UpdateAccountSO', 'CRUDAccountBO', 'updateAccount', 'AccountCRUDDOF', 'UPDATE', 'UPDATE FS.ACCOUNT\nSET ACCOUNT_4NAME=:ACCOUNT_4NAME, ACCOUNT_TYPE=:ACCOUNT_TYPE, ACCOUNT_USAGE=:ACCOUNT_USAGE, ACCOUNT_REL=:ACCOUNT_REL, ACCOUNT_PRNAME=:ACCOUNT_PRNAME, ACCOUNT_ENG=:ACCOUNT_ENG, ACCOUNT_3NAME=:ACCOUNT_3NAME, ACCOUNT_2NAME=:ACCOUNT_2NAME, ACCOUNT_1NAME=:ACCOUNT_1NAME, STDACCOUNT_CODE=:STDACCOUNT_CODE, ACCOUNT_PARENT=:ACCOUNT_PARENT, ACCOUNT_ADMIN=:ACCOUNT_ADMIN\nWHERE ACCOUNT_CODE=:ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'account', 'so', 'SO_NAME : UpdateDebitListSO', 'CRUDAccountBO', 'updateAccountDebitList', 'AccountCRUDDOF', 'UPDATEDEBITLIST', "UPDATE FS.ACCOUNT SET ACCOUNT_DEBIT = '1' WHERE \n((ACCOUNT_1NAME IN\n(SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST)\nOR\nACCOUNT_2NAME IN\n(SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST))\nAND\nACCOUNT_TYPE = '1') OR ((ACCOUNT_1NAME NOT IN\n(SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST)\nAND\nACCOUNT_2NAME NOT IN\n(SELECT ACCOUNT_NAME FROM FS.ACCOUNTDEBITLIST))\nAND\nACCOUNT_TYPE = '2') ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : DeletePBSSO', 'PBSBO', 'DeletePBS', 'PBSDOF', 'DeleteRow', 'DELETE FROM FS.PREBALANCESHEET\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : InsertPBSCodeSO', 'PBSBO', 'InsertPBSCode', 'PBSDOF', 'InsertCode', 'INSERT INTO FS.PREBALANCESHEET (ACCOUNT_CODE )\nSELECT ACCOUNT_CODE  FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : Read2NameLogicSO', 'PBSLOGICBO', 'Read2NAMELOGIC', 'PBSLOGICDOF', 'READPBS2NAME', 'SELECT ACCOUNT_2NAME, SUM(PREBALANCESHEET_DEBIT) AS SUM_DEBIT, SUM(PREBALANCESHEET_CREDIT) AS SUM_CREDIT\nFROM\n(SELECT\nACCOUNT.ACCOUNT_2NAME, PREBALANCESHEET.PREBALANCESHEET_CREDIT, PREBALANCESHEET.PREBALANCESHEET_DEBIT, PREBALANCESHEET_YEAR\nFROM FS.ACCOUNT LEFT JOIN FS.PREBALANCESHEET ON FS.ACCOUNT.ACCOUNT_CODE = FS.PREBALANCESHEET.ACCOUNT_CODE\n)\nWHERE ACCOUNT_2NAME = :ACCOUNT_2NAME AND PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR\n\nGROUP BY ACCOUNT_2NAME'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : Read3NameLogicSO', 'PBSLOGICBO', 'Read3NAMELOGIC', 'PBSLOGICDOF', 'READPBS3NAME', 'SELECT ACCOUNT_3NAME, SUM(PREBALANCESHEET_DEBIT) AS SUM_DEBIT, SUM(PREBALANCESHEET_CREDIT) AS SUM_CREDIT\nFROM\n(SELECT\nACCOUNT.ACCOUNT_3NAME, PREBALANCESHEET.PREBALANCESHEET_CREDIT, PREBALANCESHEET.PREBALANCESHEET_DEBIT, PREBALANCESHEET_YEAR\nFROM FS.ACCOUNT LEFT JOIN FS.PREBALANCESHEET ON FS.ACCOUNT.ACCOUNT_CODE = FS.PREBALANCESHEET.ACCOUNT_CODE\n)\nWHERE ACCOUNT_3NAME = :ACCOUNT_3NAME AND PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR\n\nGROUP BY ACCOUNT_3NAME'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : ReadPBSbyYearSO', 'PBSBO', 'ReadPBSbyYear', 'PBSDOF', 'ReadByYear', 'SELECT     \n\tROWNUM,\n\tFS.PREBALANCESHEET.PREBALANCESHEET_SEQ,\n    FS.PREBALANCESHEET.ACCOUNT_CODE,\n    FS.ACCOUNT.ACCOUNT_4NAME,\n    FS.PREBALANCESHEET.PREBALANCESHEET_DEBIT,\n    FS.PREBALANCESHEET.PREBALANCESHEET_CREDIT,\n    FS.PREBALANCESHEET.PREBALANCESHEET_YEAR\n  \nFROM\n   FS.PREBALANCESHEET \n   LEFT JOIN FS.ACCOUNT ON PREBALANCESHEET.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\n\nWHERE\nPREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR\nORDER BY ACCOUNT_CODE ASC;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : UpdatePBSDebitCreditSO', 'PBSBO', 'UpdatePBSDebitCredit', 'PBSDOF', 'UpdateDebitCredit', 'UPDATE     FS.PREBALANCESHEET\nSET\n    PREBALANCESHEET_DEBIT = :PREBALANCESHEET_DEBIT,\n    PREBALANCESHEET_CREDIT = :PREBALANCESHEET_CREDIT,\n    PREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR\n    \nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'prebalancesheet', 'so', 'SO_NAME : UpdateYearSO', 'PBSBO', 'UpdateYear', 'PBSDOF', 'UpdateYear', 'UPDATE     FS.PREBALANCESHEET\nSET\n\tPREBALANCESHEET_YEAR = :PREBALANCESHEET_YEAR\nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precco', 'so', 'SO_NAME : DeleteCCOSO', 'CCOBO', 'DeleteCCO', 'CCODOF', 'DeleteCCO', 'DELETE FROM FS.PRECCO\nWHERE CLIENT_CODE = :CLIENT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precco', 'so', 'SO_NAME : InsertCCOCodeSO', 'CCOBO', 'InsertCCOCode', 'CCODOF', 'InsertCCOCode', 'INSERT INTO FS.PRECCO (CLIENT_CODE)\nSELECT CLIENT_CODE FROM FS.CLIENT WHERE CLIENT_CODE = :CLIENT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precco', 'so', 'SO_NAME : UpdateCCOAccountSO', 'CCOBO', 'UpdateCCOCode', 'CCODOF', 'UpdateCCOCode', 'UPDATE    FS.PRECCO\nSET\n   CLIENT_CODE = :CLIENT_CODE\nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precco', 'so', 'SO_NAME : UpdateCCOAmountSO', 'CCOBO', 'UpdateCCOAmount', 'CCODOF', 'UpdateCCOAmount', 'UPDATE    FS.PRECCO\nSET\n   PRECCO_AMOUNT = :PRECCO_AMOUNT\nWHERE\n    CLIENT_CODE = :CLIENT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precco', 'so', 'SO_NAME : UpdateCCOCodeSO', 'CCOBO', 'UpdateCCOCode', 'CCODOF', 'UpdateCCOCode', 'UPDATE    FS.PRECCO\nSET\n   CLIENT_CODE = :CLIENT_CODE\nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precostofgoods', 'so', 'SO_NAME : DeleteCOGSO', 'COGBO', 'DeleteCOG', 'COGDOF', 'DeleteRow', 'DELETE FROM FS.PRECOSTOFGOODS\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precostofgoods', 'so', 'SO_NAME : InsertCOGCodeSO', 'COGBO', 'InsertCOGCode', 'COGDOF', 'InsertCode', 'INSERT INTO FS.PRECOSTOFGOODS (ACCOUNT_CODE)\nSELECT ACCOUNT_CODE FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precostofgoods', 'so', 'SO_NAME : ReadCOGbyYearSO', 'COGBO', 'ReadCOGbyYear', 'COGDOF', 'READBYYEAR', 'SELECT\n\tROWNUM,     \n\tPRECOSTOFGOODS_SEQ,\n    ACCOUNT_CODE,\n    PRECOSTOFGOODS_AMOUNT\n  \nFROM\n   FS.PRECOSTOFGOODS\n\nWHERE\nPRECOSTOFGOODS_YEAR = :PRECOSTOFGOODS_YEAR'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precostofgoods', 'so', 'SO_NAME : ReadCOGbyYearSO', 'COGBO', 'ReadCOGbyYear', 'COGDOF', 'READBYYEAR', 'SELECT\n\tROWNUM,     \n\tPRECOSTOFGOODS_SEQ,\n    ACCOUNT_CODE,\n    PRECOSTOFGOODS_AMOUNT\n  \nFROM\n   FS.PRECOSTOFGOODS\n\nWHERE\nPRECOSTOFGOODS_YEAR = :PRECOSTOFGOODS_YEAR'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'precostofgoods', 'so', 'SO_NAME : UpdateCOGAmountSO', 'COGBO', 'UpdateCOGAmount', 'COGDOF', 'UpdateAmount', 'UPDATE    FS.PRECOSTOFGOODS\nSET\n   PRECOSTOFGOODS_AMOUNT = :PRECOSTOFGOODS_AMOUNT\nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'preincomestatement', 'so', 'SO_NAME : DeletePISSO', 'PISBO', 'DeletePIS', 'PISDOF', 'DeleteRow', 'DELETE FROM FS.PREINCOMESTATEMENT\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'preincomestatement', 'so', 'SO_NAME : ReadPISStEdSO', 'PISBO', 'ReadPISStEd', 'PISDOF', 'ReadStEd', "SELECT\n\tROWNUM,     \n    FS.PREINCOMESTATEMENT.ACCOUNT_CODE,\n    FS.ACCOUNT.ACCOUNT_4NAME,\n    FS.PREINCOMESTATEMENT.PREINCOMESTATEMENT_AMOUNT,\n    PREINCOMESTATEMENT_STDATE,\n    PREINCOMESTATEMENT_EDDATE\n  \nFROM\n   FS.PREINCOMESTATEMENT\n   LEFT JOIN FS.ACCOUNT ON PREINCOMESTATEMENT.ACCOUNT_CODE = ACCOUNT.ACCOUNT_CODE\n\nWHERE\nPREINCOMESTATEMENT_STDATE >= to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY-MM-DD') \nAND\nPREINCOMESTATEMENT_EDDATE < to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY-MM-DD')+1\nORDER BY ACCOUNT_CODE ASC;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'preincomestatement', 'so', 'SO_NAME : UpdatePISAmountSO', 'PISBO', 'UpdatePISAmount', 'PISDOF', 'UpdateAmount', "UPDATE    FS.PREINCOMESTATEMENT\nSET\n   PREINCOMESTATEMENT_AMOUNT = :PREINCOMESTATEMENT_AMOUNT,\n   PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD'),\n   PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD')\n   \nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'preincomestatement', 'so', 'SO_NAME : UpdatePISEdDateSO', 'PISBO', 'UpdatePISEdDate', 'PISDOF', 'UpdateEDDate', "UPDATE     FS.PREINCOMESTATEMENT\nSET\n    PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD')\nWHERE\n    PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD');"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'preincomestatement', 'so', 'SO_NAME : UpdatePISStDateSO', 'PISBO', 'UpdatePISStDate', 'PISDOF', 'UpdateSTDate', "UPDATE     FS.PREINCOMESTATEMENT\nSET\n    PREINCOMESTATEMENT_STDATE =to_date(:PREINCOMESTATEMENT_STDATE, 'YYYY/MM/DD')\nWHERE\n    PREINCOMESTATEMENT_EDDATE =to_date(:PREINCOMESTATEMENT_EDDATE, 'YYYY/MM/DD');"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : DeleteSOASO', 'SOABO', 'DeleteSOA', 'SOADOF', 'DeleteRow', 'DELETE FROM FS.PRESOA\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : InsertSOASubjectSO', 'SOABO', 'InsertSOASubject', 'SOADOF', 'InsertSubject', 'INSERT INTO FS.PRESOA (PRESOA_SUBJECT)\nVALUES ( :PRESOA_SUBJECT)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : ReadSOAStEdSO', 'SOABO', 'ReadSOAStEd', 'SOADOF', 'ReadStEd', "SELECT     \n\tROWNUM,\n\tPRESOA_SUBJECT,\n    ACCOUNT_CODE,\n    PRESOA_AMOUNT\n  \nFROM\n   FS.PRESOA\n\nWHERE\nPRESOA_STDATE >= to_date(:PRESOA_STDATE, 'YYYY-MM-DD') \nAND\nPRESOA_EDDATE < to_date(:PRESOA_EDDATE, 'YYYY-MM-DD')+1 ;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : UpdateSOAAmountSO', 'SOABO', 'UpdateSOAAmount', 'SOADOF', 'UpdateAmount', 'UPDATE    FS.PRESOA\nSET\n   PRESOA_AMOUNT = :PRESOA_AMOUNT\nWHERE\n    ACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : UpdateSOACodeSO', 'SOABO', 'UpdateSOACode', 'SOADOF', 'UpdateCode', 'UPDATE \tFS.PRESOA\nSET\n    ACCOUNT_CODE = (SELECT ACCOUNT_CODE FROM FS.ACCOUNT WHERE ACCOUNT_CODE = :ACCOUNT_CODE)\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : UpdateSOAEdDateSO', 'SOABO', 'UpdateSOAEdDate', 'SOADOF', 'UpdateEdDate', "UPDATE     FS.PRESOA\nSET\n    PRESOA_EDDATE =to_date(:PRESOA_EDDATE, 'YYYY/MM/DD')\nWHERE\n    PRESOA_STDATE =to_date(:PRESOA_STDATE, 'YYYY/MM/DD')"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'presoa', 'so', 'SO_NAME : UpdateSOAStDateSO', 'SOABO', 'UpdateSOAStDate', 'SOADOF', 'UpdateStDate', "UPDATE \tFS.PRESOA\nSET\n    PRESOA_STDATE =to_date(:PRESOA_STDATE, 'YYYY/MM/DD')\nWHERE\n    PRESOA_EDDATE =to_date(:PRESOA_EDDATE, 'YYYY/MM/DD')"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : Insert11SO', 'Delete02BO', 'Delete02', 'ISDOF', 'DELETE02', 'DELETE FROM FS.ISCOMPONENT2;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : InsertDate01SO', 'Insert11BO', 'InsertMethod', 'ISDOF', 'INSERT11', "INSERT INTO FS.INCOME01\nSELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT\n\nFROM FS.STDACCOUNT AS A,  \n(\n\nSELECT STDACCOUNT_CODE, SUM(DOCJOURNAL_CREDIT) + SUM(DOCJOURNAL_DEBIT) AS LEFTVAL\nFROM \n(\nSELECT STDACCOUNT.STDACCOUNT_CODE,STDACCOUNT.STDACCOUNT_NAME,STDACCOUNT.STDACCOUNT_PARENT,STDACCOUNT_DEDUCTTYPE,ACCOUNT.ACCOUNT_CODE,\n DOCUMENT.DOCJOURNAL_CREDIT, DOCUMENT.DOCJOURNAL_DEBIT,DOCUMENT.DOC_DATE\nFROM FS.STDACCOUNT LEFT JOIN FS.ACCOUNT ON FS.STDACCOUNT.STDACCOUNT_CODE = FS.ACCOUNT.STDACCOUNT_CODE\nLEFT JOIN FS.DOCUMENT\nON FS.ACCOUNT.ACCOUNT_CODE = FS.DOCUMENT.ACCOUNT_CODE\nwhere (STDACCOUNT.stdaccount_code like 'IS%')  and ((DOCUMENT.DOC_DATE BETWEEN ADD_MONTHS( \nTO_DATE(CONCAT(\n(select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-0) and (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,:DOC_DATE),'YYYYMM')),0     ) from dual)))\n)\nGROUP BY STDACCOUNT_CODE\n\n) AS B\nWHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : InsertDate01SO', 'Insert12BO', 'Insert12', 'ISDOF', 'INSERT12', "INSERT INTO FS.INCOME02\nSELECT B.STDACCOUNT_CODE, B.LEFTVAL, A.STDACCOUNT_PARENT\n\nFROM FS.STDACCOUNT AS A,  \n(\n\nSELECT STDACCOUNT_CODE, SUM(PREINCOMESTATEMENT_AMOUNT) AS LEFTVAL\nFROM\n(\nSELECT B.STDACCOUNT_CODE, A.PREINCOMESTATEMENT_STDATE, A.PREINCOMESTATEMENT_EDDATE, A.ACCOUNT_CODE, A.PREINCOMESTATEMENT_AMOUNT, C.STDACCOUNT_PARENT\nFROM FS.PREINCOMESTATEMENT A LEFT OUTER JOIN FS.ACCOUNT B ON A.ACCOUNT_CODE = B.ACCOUNT_CODE \nLEFT OUTER JOIN FS.STDACCOUNT C ON B.STDACCOUNT_CODE = C.STDACCOUNT_CODE\nWHERE\nA.PREINCOMESTATEMENT_STDATE >= (ADD_MONTHS(TO_DATE(CONCAT((select :PREINCOMESTATEMENT_EDDATE from dual),'.01.01'),'yyyy.mm.dd'),-12))\nAND\nA.PREINCOMESTATEMENT_EDDATE <=  (select ADD_MONTHS(LAST_DAY(TO_DATE(CONCAT(:PREINCOMESTATEMENT_EDDATE,'12'),'YYYYMM')),0  ) from dual)\n)\nGROUP BY STDACCOUNT_CODE\n) AS B\nWHERE A.STDACCOUNT_CODE = B.STDACCOUNT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : InsertDate01SO', 'Delete01BO', 'Delete01', 'ISDOF', 'DELETE01', 'DELETE FROM FS.ISCOMPONENT;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : InsertDate01SO', 'Delete02BO', 'Delete02', 'ISDOF', 'DELETE02', 'DELETE FROM FS.ISCOMPONENT2;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : InsertDate01SO', 'Delete03BO', 'Delete03', 'ISDOF', 'DELETE03', 'DELETE FROM FS.INCOME01;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : InsertDate01SO', 'Delete04BO', 'Delete04', 'ISDOF', 'DELETE04', 'DELETE FROM FS.INCOME02;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'ReadAccountISBO', 'SelectAccountMethod', 'ISDOF', 'SELECTISFULL', 'SELECT DISTINCT C.STDACCOUNT_NAME, C.STDACCOUNT_CODE, A.LEFTVAL AS ACCOUNT_1NAME, A.RIGHTVAL AS ACCOUNT_2NAME, B.LEFTVAL AS ACCOUNT_4NAME, B.RIGHTVAL AS ACCOUNT_CODE\nFROM FS.ISCOMPONENT A FULL OUTER JOIN FS.ISCOMPONENT2 B \nON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE\nLEFT JOIN FS.STDACCOUNT C\nON C.STDACCOUNT_CODE = B.STDACCOUNT_CODE OR C.STDACCOUNT_CODE = A.STDACCOUNT_CODE\nORDER BY LENGTH( C.STDACCOUNT_CODE), C.STDACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert13BO', 'Insert13', 'ISDOF', 'INSERT13', "INSERT ALL\nINTO FS.ISCOMPONENT\nVALUES ('IS01',NULL,NULL,  --매출액 --당기 테이블에서\nNVL((\nSELECT SUM( NVL(LEFTVAL,0) )\nFROM FS.INCOME01\nWHERE STDACCOUNT_PARENT = 'IS01'\nGROUP BY STDACCOUNT_PARENT\n),0))\nINTO FS.ISCOMPONENT\nVALUES ('IS09',NULL,NULL,  --매출원가\nNVL((\nSELECT SUM( NVL(LEFTVAL,0) )\nFROM FS.INCOME01\nWHERE STDACCOUNT_PARENT = 'IS09'\nGROUP BY STDACCOUNT_PARENT\n),0)\n+\nNVL((\nSELECT SUM( NVL(RIGHTVAL,0) )\nFROM FS.ISCOMPONENT\nWHERE STDACCOUNT_PARENT = 'IS09'\nGROUP BY STDACCOUNT_PARENT\n),0)\n)\nINTO FS.ISCOMPONENT\nVALUES ('IS21',NULL,NULL, --판관비\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT\nVALUES ('IS63',NULL,NULL, --영업외손익(수익)\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT\nVALUES ('IS81',NULL,NULL, --영업외비용\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT\nVALUES ('IS100',NULL,NULL, --법인세비용\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME01 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT2\nVALUES ('IS01',NULL,NULL, --매출액  --전기 테이블에서\nNVL((\nSELECT SUM( NVL(LEFTVAL,0) )\nFROM FS.INCOME02\nWHERE STDACCOUNT_PARENT = 'IS01'\nGROUP BY STDACCOUNT_PARENT\n),0))\nINTO FS.ISCOMPONENT2\nVALUES ('IS09',NULL,NULL, --매출원가\nNVL((\nSELECT SUM( NVL(LEFTVAL,0) )\nFROM FS.INCOME02\nWHERE STDACCOUNT_PARENT = 'IS09'\nGROUP BY STDACCOUNT_PARENT\n),0)\n+\nNVL((\nSELECT SUM( NVL(RIGHTVAL,0) )\nFROM FS.ISCOMPONENT2\nWHERE STDACCOUNT_PARENT = 'IS09'\nGROUP BY STDACCOUNT_PARENT\n),0)\n)\nINTO FS.ISCOMPONENT2\nVALUES ('IS21',NULL,NULL, --판관비\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS21' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT2\nVALUES ('IS63',NULL,NULL, --영업외손익(수익)\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS63' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT2\nVALUES ('IS81',NULL,NULL, --영업외비용\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS81' GROUP BY STDACCOUNT_PARENT)\n,0))\nINTO FS.ISCOMPONENT2\nVALUES ('IS100',NULL,NULL, --법인세비용\nNVL((SELECT SUM( NVL(LEFTVAL,0) ) FROM FS.INCOME02 WHERE STDACCOUNT_PARENT = 'IS100' GROUP BY STDACCOUNT_PARENT)\n,0))\nSELECT * FROM DUAL;\n"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert14BO', 'Insert14', 'ISDOF', 'INSERT14', "INSERT ALL\nINTO FS.ISCOMPONENT\nVALUES ('IS20',NULL,NULL,  (  --당기매출총이익(로우넘1로 멀티 서브쿼리 방지해줘야.. 피오문제)\n\nSELECT NVL(RIGHTVAL,0) - \n\n(SELECT NVL(RIGHTVAL,0)\nFROM FS.ISCOMPONENT\nWHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)\n\nFROM FS.ISCOMPONENT\nWHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1\n))\nINTO FS.ISCOMPONENT2\nVALUES ('IS20',NULL,NULL,  (  --전기매출총이익(ROWNUM)\n\nSELECT NVL(RIGHTVAL,0) - \n\n(SELECT NVL(RIGHTVAL,0)\nFROM FS.ISCOMPONENT2\nWHERE STDACCOUNT_CODE = 'IS09' AND ROWNUM=1)\n\nFROM FS.ISCOMPONENT2\nWHERE STDACCOUNT_CODE = 'IS01' AND ROWNUM=1\n))\nSELECT * FROM DUAL;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert15BO', 'Insert15', 'ISDOF', 'INSERT15', "INSERT ALL\nINTO FS.ISCOMPONENT --당기영업이익(ROWNUM)\nVALUES ('IS62',NULL,NULL,  \n(SELECT NVL(RIGHTVAL,0) - \n(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS21' AND ROWNUM=1)  --뺄대상\nFROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS20' AND ROWNUM=1)\n)\nINTO FS.ISCOMPONENT2 --전기영업이익(ROWNUM)\nVALUES ('IS62',NULL,NULL,  \n(SELECT NVL(RIGHTVAL,0) - \n(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS21' AND ROWNUM=1)  --뺄대상\nFROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS20' AND ROWNUM=1)\n)\nSELECT * FROM DUAL;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert16BO', 'Insert16', 'ISDOF', 'INSERT16', "INSERT ALL\nINTO FS.ISCOMPONENT --당기 법인세차감전이익(ROWNUM)\nVALUES ('IS99',NULL,NULL,  \n(SELECT NVL(RIGHTVAL,0) \n-(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS81' AND ROWNUM=1)  --뺄대상(영업외비용)\n+(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS63' AND ROWNUM=1)  --더할대상(영업외손익)\nFROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS62' AND ROWNUM=1) --차감전대상(영업이익)\n)\nINTO FS.ISCOMPONENT2 --전기 법인세차감전이익(ROWNUM)\nVALUES ('IS99',NULL,NULL,  \n(SELECT NVL(RIGHTVAL,0) \n-(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS81' AND ROWNUM=1)  --뺄대상(영업외비용)\n+(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS63' AND ROWNUM=1)  --더할대상(영업외손익)\nFROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS62' AND ROWNUM=1) --차감전대상(영업이익)\n)\nSELECT * FROM DUAL;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert17BO', 'Insert17', 'ISDOF', 'INSERT17', "INSERT ALL\nINTO FS.ISCOMPONENT --당기순손익(이익)(ROWNUM)\nVALUES ('IS102',NULL,NULL,  \n(SELECT NVL(RIGHTVAL,0) \n-(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS100' AND ROWNUM=1)  --뺄대상(법인세비용)\nFROM FS.ISCOMPONENT WHERE STDACCOUNT_CODE = 'IS99' AND ROWNUM=1) --차감전대상(법인세차감전이익)\n)\nINTO FS.ISCOMPONENT2 --전기의 당기순손익(이익)(ROWNUM)\nVALUES ('IS102',NULL,NULL,  \n(SELECT NVL(RIGHTVAL,0) \n-(SELECT NVL(RIGHTVAL,0) FROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS100' AND ROWNUM=1)  --뺄대상(법인세비용)\nFROM FS.ISCOMPONENT2 WHERE STDACCOUNT_CODE = 'IS99' AND ROWNUM=1) --차감전대상(법인세차감전이익)\n)\nSELECT * FROM DUAL;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert18BO', 'Insert18', 'ISDOF', 'INSERT18', 'INSERT INTO FS.ISCOMPONENT (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT)\nSELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT\nFROM FS.INCOME01;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert19BO', 'Insert19', 'ISDOF', 'INSERT19', 'INSERT INTO FS.ISCOMPONENT2 (STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT)\nSELECT STDACCOUNT_CODE, LEFTVAL, STDACCOUNT_PARENT\nFROM FS.INCOME02;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert1ABO', 'Insert1A', 'ISDOF', 'INSERT1A', "INSERT\nINTO FS.ISCOMPONENT --ISCOMPONENT에 없던 계정과목 삽입\nSELECT B.STDACCOUNT_CODE, '0' AS LEFTVAL, B.STDACCOUNT_PARENT, NULL AS RIGHTVAL \nFROM FS.ISCOMPONENT A RIGHT OUTER JOIN FS.ISCOMPONENT2 B\nON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE\nWHERE A.STDACCOUNT_CODE IS NULL"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert1BBO', 'Insert1B', 'ISDOF', 'INSERT1B', "INSERT\nINTO FS.ISCOMPONENT2 --ISCOMPONENT2에 없던 계정과목 삽입\nSELECT A.STDACCOUNT_CODE, '0' AS LEFTVAL ,A.STDACCOUNT_PARENT, NULL AS RIGHTVAL \nFROM FS.ISCOMPONENT A LEFT OUTER JOIN FS.ISCOMPONENT2 B\nON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE\nWHERE B.STDACCOUNT_CODE IS NULL"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadAccountISSO', 'Insert121BO', 'Insert121', 'ISDOF', 'INSERT121', "INSERT ALL\nINTO FS.ISCOMPONENT --당기 상품매출원가(ROWNUM)\nVALUES ('IS10',NULL,'IS09',  \n((\n  NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS11' AND ROWNUM=1),0) --더할대상(기초재고액) \n+NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS12' AND ROWNUM=1),0)  --더할대상(당기매입액)\n-NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS13' AND ROWNUM=1),0)  --뺄대상(기말재고액)\n-NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME01 WHERE STDACCOUNT_CODE = 'IS14' AND ROWNUM=1),0)  --뺄대상(타계정대체액)\n  ))\n)\nINTO FS.ISCOMPONENT2 --전기 상품매출원가(ROWNUM)\nVALUES ('IS10',NULL,'IS09',  \n((\n  NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS11' AND ROWNUM=1),0) --더할대상(기초재고액) \n+NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS12' AND ROWNUM=1),0)  --더할대상(당기매입액)\n-NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS13' AND ROWNUM=1),0)  --뺄대상(기말재고액)\n-NVL((SELECT NVL(LEFTVAL,0) FROM FS.INCOME02 WHERE STDACCOUNT_CODE = 'IS14' AND ROWNUM=1),0)  --뺄대상(타계정대체액)\n  ))\n)\nSELECT * FROM DUAL;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'is', 'so', 'SO_NAME : ReadISSO', 'ReadISBO', 'SelectMethod', 'ISDOF', 'SELECTIS', "SELECT A.STDACCOUNT_NAME, A.STDACCOUNT_CODE, B.LEFTVAL AS DOCJOURNAL_DEBIT, B.RIGHTVAL AS DOCJOURNAL_CREDIT\nFROM FS.STDACCOUNT AS A FULL OUTER  JOIN FS.ISCOMPONENT AS B\nON A.STDACCOUNT_CODE = B.STDACCOUNT_CODE\nWHERE A.STDACCOUNT_CODE LIKE 'IS%'\nORDER BY LENGTH( A.STDACCOUNT_CODE), A.STDACCOUNT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'sare', 'so', 'SO_NAME : ReadSTDTableSO', 'ReadSAREPriceBO', 'SelectSTD', 'SAREPRICEDOF', 'SELECTSAREPRICE', 'SELECT ACCOUNT_4NAME,ACCOUNT_CODE,SUM(DOCJOuRNAL_CREDIT) as DOCJOuRNAL_CREDIT,SUM(DOCJOURNAL_DEBIT) as DOCJOURNAL_DEBIT\nFROM FS.DOCUMENT\nWHERE ACCOUNT_CODE = :ACCOUNT_CODE\nGROUP BY (ACCOUNT_4NAME,ACCOUNT_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'sare', 'so', 'SO_NAME : ReadSARETableSO', 'ReadSARETableBO', 'SelectMethod', 'SAREDOF', 'SELECTALL', 'SELECT   * FROM FS.SARE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'sare', 'so', 'SO_NAME : UpdateSARECodeSO', 'UpdateSARECodeBO', 'UpdateCode', 'SAREDOF', 'UPDATECODE', 'UPDATE FS.SARE\nSET ACCOUNT_CODE = :ACCOUNT_CODE,\nSARE_SUBJECT = :SARE_SUBJECT\nWHERE \nSARE_SUBJECT = :SARE_SUBJECT'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'statement', 'sare', 'so', 'SO_NAME : UpdateSARESubjectSO', 'UpdateSARESubjectBO', 'UpdateSubject', 'SAREDOF', 'UPDATESUBJECT', 'UPDATE FS.SARE\nSET SARE_SUBJECT = :SARE_SUBJECT,\nACCOUNT_CODE = :ACCOUNT_CODE\nWHERE \nACCOUNT_CODE = :ACCOUNT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : DeleteClientTable1SO', 'InsertClientTable1BO', 'DeleteClientTable1Method', 'InsertClientTable1DOF', 'DELETE', 'DELETE\nFROM FS.CLIENT\nWHERE CLIENT_CODE = :CLIENT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : InsertClientTable1SO', 'InsertClientTable1BO', 'InsertClientTable1Method', 'InsertClientTable1DOF', 'INSERT', 'INSERT \nINTO FS.CLIENT (CLIENT_CODE, CLIENT_NAME, CLIENT_NUMBER, CLIENT_REPRESENTATION, CLIENT_DIVISION, CLIENT_IS_USE)\nVALUES (:CLIENT_CODE, :CLIENT_NAME, :CLIENT_NUMBER, :CLIENT_REPRESENTATION, :CLIENT_DIVISION, :CLIENT_IS_USE);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable1SO', 'InsertClientTable1BO', 'ReadClientTable1Method', 'InsertClientTable1DOF', 'SELECTALL', 'SELECT *\nFROM FS.CLIENT\nWHERE CLIENT_CODE BETWEEN 101 AND 97999;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable2SO', 'ClientTable2BO', 'SelectClientTable2Method', 'ClientTable2DOF', 'SELECT', 'SELECT \nFS.CLIENT.*, FS.EMPLOYEE.EMPLOYEE_NAME, FS.CLIENTTYPE.CLIENTTYPE_NAME\nFROM FS.CLIENT, FS.EMPLOYEE, FS.CLIENTTYPE\nWHERE FS.CLIENT.CLIENT_CODE = :CLIENT_CODE AND FS.CLIENT.CLIENTTYPE_CODE = FS.CLIENTTYPE.CLIENTTYPE_CODE AND FS.CLIENT.EMPLOYEE_CODE = FS.EMPLOYEE.EMPLOYEE_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable3SO', 'ClientTable3BO', 'ReadClientTable3Method', 'ClientTable3DOF', 'SELECT', 'SELECT \nA.*, B.CLIENT_NAME AS CLIENT_ODEPOSIT_ACCOUNT_NAME, B.CLIENT_NUMBER AS CLIENT_ODEPOSIT_ACCOUNT_NUM, C.ACCOUNT_4NAME AS ACCOUNT_OBASIC_ACCOUNT_NAME, D.ACCOUNT_4NAME AS ACCOUNT_ORELATIVE_ACCOUNT_NAME, FS.BANKCODEHELP.BANKCODEHELP_NAME, FS.LOCALTAX.LOCALTAX_NAME\nFROM FS.CLIENT A, FS.CLIENT B,  FS.ACCOUNT C, FS.ACCOUNT D, FS.BANKCODEHELP, FS.LOCALTAX\nWHERE A.CLIENT_CODE = :CLIENT_CODE AND B.CLIENT_CODE = A.CLIENT_ODEPOSIT_ACCOUNT_CODE AND C.ACCOUNT_CODE = A.ACCOUNT_OBASIC_ACCOUNT_CODE AND D.ACCOUNT_CODE = A.ACCOUNT_ORELATIVE_ACCOUNT_CODE AND FS.BANKCODEHELP.BANKCODEHELP_CODE = A.BANKCODEHELP_CODE AND FS.LOCALTAX.LOCALTAX_CODE = A.LOCALTAX_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable4SO', 'InsertClientTable1BO', 'ReadClientTable4Method', 'InsertClientTable1DOF', 'SELECT4', 'SELECT *\nFROM FS.CLIENT\nWHERE CLIENT_CODE BETWEEN 98000 AND 99599;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable5SO', 'ClientTable4BO', 'ReadClientTable4Method', 'ClientTable4DOF', 'Select', 'SELECT \nFS.CLIENT.*, FS.BANKCODEHELP.BANKCODEHELP_NAME, FS.ACCOUNT.ACCOUNT_4NAME AS ACCOUNT_OBASIC_ACCOUNT_NAME, FS.CLIENTTYPE.CLIENTTYPE_NAME, FS.LOCALTAX.LOCALTAX_NAME\nFROM FS.CLIENT, FS.BANKCODEHELP, FS.ACCOUNT, FS.CLIENTTYPE, FS.LOCALTAX\nWHERE FS.CLIENT.CLIENT_CODE = :CLIENT_CODE AND FS.BANKCODEHELP.BANKCODEHELP_CODE = FS.CLIENT.BANKCODEHELP_CODE AND FS.ACCOUNT.ACCOUNT_CODE = FS.CLIENT.ACCOUNT_OBASIC_ACCOUNT_CODE AND FS.CLIENTTYPE.CLIENTTYPE_CODE = FS.CLIENT.CLIENTTYPE_CODE AND FS.LOCALTAX.LOCALTAX_CODE = FS.CLIENT.LOCALTAX_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable7SO', 'InsertClientTable1BO', 'ReadClientTable7Method', 'InsertClientTable1DOF', 'SELECT7', 'SELECT *\nFROM FS.CLIENT\nWHERE CLIENT_CODE BETWEEN 99600 AND 99999;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : ReadClientTable8SO', 'ClientTable5BO', 'SelectClientTable5Method', 'ClientTable5DOF', 'SELECT', 'SELECT \nA.*, FS.EMPLOYEE.EMPLOYEE_CODE, B.CLIENT_NAME AS CLIENT_ODEPOSIT_ACCOUNT_NAME, B.CLIENT_NUMBER AS CLIENT_ODEPOSIT_ACCOUNT_NUM, FS.ACCOUNT.ACCOUNT_4NAME AS ACCOUNT_OBASIC_ACCOUNT_NAME, FS.CLIENTTYPE.CLIENTTYPE_NAME\nFROM FS.CLIENT A, FS.CLIENT B, FS.EMPLOYEE, FS.ACCOUNT, FS.CLIENTTYPE\nWHERE A.CLIENT_CODE = :CLIENT_CODE AND A.EMPLOYEE_CODE = FS.EMPLOYEE.EMPLOYEE_CODE AND A.CLIENT_ODEPOSIT_ACCOUNT_CODE = B.CLIENT_CODE AND A.ACCOUNT_OBASIC_ACCOUNT_CODE = FS.ACCOUNT.ACCOUNT_CODE AND A.CLIENTTYPE_CODE = FS.CLIENTTYPE.CLIENTTYPE_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : UpdateClientTable1SO', 'InsertClientTable1BO', 'UpdateClientTable1Method', 'InsertClientTable1DOF', 'UPDATE', 'UPDATE FS.CLIENT\nSET CLIENT_NAME = :CLIENT_NAME, CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_IS_USE= :CLIENT_IS_USE\nWHERE CLIENT_CODE = :CLIENT_CODE;\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : UpdateClientTable2SO', 'ClientTable2BO', 'UpdateClientTable2Method', 'ClientTable2DOF', 'UPDATE', "UPDATE FS.CLIENT\nSET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_ID_NUM = :CLIENT_ID_NUM, CLIENT_REPRESENTATION = :CLIENT_REPRESENTATION, CLIENT_BUSINESS_CONDITION = :CLIENT_BUSINESS_CONDITION, CLIENT_EVENT= :CLIENT_EVENT, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_IS_MAIN_ESTABLISHMENT = :CLIENT_IS_MAIN_ESTABLISHMENT, CLIENT_UNIT_REPORT_CLIENT = :CLIENT_UNIT_REPORT_CLIENT, CLIENT_OUTPUT_NAME = :CLIENT_OUTPUT_NAME, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE\nWHERE CLIENT_CODE = :CLIENT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : UpdateClientTable3SO', 'ClientTable3BO', 'UpdateClientTable3Method', 'ClientTable3DOF', 'Update', 'UPDATE FS.CLIENT\nSET CLIENT_IN_CHARGE_TEL = :CLIENT_IN_CHARGE_TEL, CLIENT_IN_CHARGE_EMAIL = :CLIENT_IN_CHARGE_EMAIL, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_BANK_ACCOUNT= :CLIENT_BANK_ACCOUNT, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, ACCOUNT_ORELATIVE_ACCOUNT_CODE = :ACCOUNT_ORELATIVE_ACCOUNT_CODE, CLIENT_EXTRA_LIMIT_AMOUNT = :CLIENT_EXTRA_LIMIT_AMOUNT, CLIENT_MORTGAGE_LIMIT_AMOUNT = :CLIENT_MORTGAGE_LIMIT_AMOUNT, CLIENT_UNIT_PRICE_SALES = :CLIENT_UNIT_PRICE_SALES, CLIENT_UNIT_PRICE_PURCHASE = :CLIENT_UNIT_PRICE_PURCHASE, CLIENT_LIQUOR_CODE = :CLIENT_LIQUOR_CODE, LOCALTAX_CODE = :LOCALTAX_CODE\nWHERE CLIENT_CODE = :CLIENT_CODE;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : UpdateClientTable4', 'ClientTable4BO', 'UpdateClientTable4Method', 'ClientTable4DOF', 'Update', "UPDATE FS.CLIENT\nSET CLIENT_NUMBER = :CLIENT_NUMBER, BANKCODEHELP_CODE = :BANKCODEHELP_CODE, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_INTEREST_RATE = :CLIENT_INTEREST_RATE, CLIENT_OVERDRAFT_LIMIT_AMOUNT= :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_OVERDRAFT_DATE = TO_DATE(:CLIENT_OVERDRAFT_DATE, 'YYYY/MM/DD'), CLIENT_ID_NUM = :CLIENT_ID_NUM,  CLIENT_IS_MAIN_ESTABLISHMENT= :CLIENT_IS_MAIN_ESTABLISHMENT, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, LOCALTAX_CODE = :LOCALTAX_CODE, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE\nWHERE CLIENT_CODE = :CLIENT_CODE;\n\n"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'infra', 'client', 'so', 'SO_NAME : UpdateClientTable5SO', 'ClientTable5BO', 'UpdateClientTable5Method', 'ClientTable5DOF', 'UPDATE', "UPDATE FS.CLIENT\nSET CLIENT_NUMBER = :CLIENT_NUMBER, CLIENT_DEPOSIT_TYPE = :CLIENT_DEPOSIT_TYPE, CLIENT_PAYMENT_DATE = :CLIENT_PAYMENT_DATE, EMPLOYEE_CODE = :EMPLOYEE_CODE, CLIENT_ODEPOSIT_ACCOUNT_CODE = :CLIENT_ODEPOSIT_ACCOUNT_CODE, CLIENT_OVERDRAFT_LIMIT_AMOUNT = :CLIENT_OVERDRAFT_LIMIT_AMOUNT, CLIENT_DIVISION = :CLIENT_DIVISION, CLIENT_ID_NUM = :CLIENT_ID_NUM, ACCOUNT_OBASIC_ACCOUNT_CODE = :ACCOUNT_OBASIC_ACCOUNT_CODE, CLIENTTYPE_CODE = :CLIENTTYPE_CODE, CLIENT_ZIPCODE = :CLIENT_ZIPCODE, CLIENT_ADDRESS = :CLIENT_ADDRESS, CLIENT_TEL = :CLIENT_TEL, CLIENT_FAX = :CLIENT_FAX, CLIENT_HOMEPAGE = :CLIENT_HOMEPAGE, CLIENT_STARTDATE = TO_DATE(:CLIENT_STARTDATE, 'YYYY/MM/DD'), CLIENT_ENDDATE = TO_DATE(:CLIENT_ENDDATE, 'YYYY/MM/DD'), CLIENT_NOTE = :CLIENT_NOTE\nWHERE CLIENT_CODE = :CLIENT_CODE;"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'journal', 'so', 'SO_NAME : ReadDocumentSO', 'ReadDocumentBO', 'readDocument', 'DocumentDOF', 'DOCUMENTREAD', "SELECT *\nFROM FS.DOCUMENT\nWHERE DOC_DATE >= TO_DATE(:START_DATE,'YYYY-MM-DD')\nAND DOC_DATE <= TO_DATE(:END_DATE,'YYYY-MM-DD')\nAND (:DEPARTMENT_CODE IS NULL OR DEPARTMENT_CODE = :DEPARTMENT_CODE)\nAND (:EMPLOYEE_CODE IS NULL OR EMPLOYEE_CODE = :EMPLOYEE_CODE)\nAND (:DOCTYPE_CODE IS NULL OR DOCTYPE_CODE = :DOCTYPE_CODE)\nAND (:DOCJOURNALTYPE_CODE IS NULL OR DOCJOURNALTYPE_CODE = :DOCJOURNALTYPE_CODE);"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'journal', 'so', 'SO_NAME : ReadJournalSO', 'ReadJournalBO', 'ReadJournal', ':_dynamicJournalDOF', 'MANUALREADJOURNAL', "SELECT \nDOC_ROWSEQ,\nTO_CHAR(DOC_DATE, 'YYYY-MM-DD') AS DOC_DATE,\nDOC_ORDER,\nDOCJOURNALTYPE_CODE,\nDOCJOURNALTYPE_NAME,\nACCOUNT_CODE,\nACCOUNT_4NAME,\nDOCJOURNAL_DEBIT,\nDOCJOURNAL_CREDIT,\nCLIENT_CODE,\nCLIENT_NAME,\nABSTRACT_ID,\nABSTRACT_CODE,\nABSTRACT_NAME,\nEMPLOYEE_CODE,\nEMPLOYEE_NAME,\nDEPARTMENT_CODE,\nDEPARTMENT_NAME,\nDOCJOURNAL_ABSTRACT,\nDOCTYPE_CODE,\nDOCTYPE_NAME\nFROM FS.DOCUMENT\nWHERE (DOC_DATE BETWEEN TO_DATE(:START_DATE,'YYYY-MM-DD') AND TO_DATE(:END_DATE,'YYYY-MM-DD'))\nAND ((EMPLOYEE_CODE BETWEEN :START_EMPLOYEECODE  AND :END_EMPLOYEECODE) OR (:START_EMPLOYEECODE IS NULL AND :END_EMPLOYEECODE IS NULL))\nAND (:_dynamic)\nAND (:_dynamic)"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'industry', 'so', 'SO_NAME : ReadIndustrySO', 'ReadIndustryBO', 'readIndustryList', 'ReadIndustryDOF', 'SELECTALL', 'SELECT *\nFROM FS.INDUSTRY\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'taxoffice', 'so', 'SO_NAME : ReadTaxOfficeSO', 'TaxOfficeBO', 'readTaxOffice', 'TaxOfficeDOF', 'SELECTALL', 'SELECT *\nFROM FS.TAXOFFICE\nORDER BY TAXOFFICE_CODE ASC'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'taxrefundbank', 'so', 'SO_NAME : InsertTaxRefundBankSO', 'CRUDTaxRefundBankBO', 'insertTaxRefundBank', 'CRUDTaxRefundBankDOF', 'INSERT', 'INSERT\nINTO FS.TAXREFUNDBANK\nVALUES (:TAXREFUNDBANK_CODE, :TAXREFUNDBANK_BANKNAME);'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'code', 'taxrefundbank', 'so', 'SO_NAME : ReadTaxRefundBankSO', 'CRUDTaxRefundBankBO', 'readTaxRefundBank', 'CRUDTaxRefundBankDOF', 'SELECTALL', 'SELECT *\nFROM FS.TAXREFUNDBANK'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : DeleteAllDepartmentSO', 'CRUDDepartmentBO', 'deleteAllDepartment', 'CRUDDepartmentDOF', 'DELETE', 'DELETE FROM FS.DEPARTMENT\nWHERE DEPARTMENT_CODE=:DEPARTMENT_CODE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : DeleteDepartmentSO', 'CRUDDepartmentBO', 'deleteDepartment', 'CRUDDepartmentDOF', 'DELETE', 'DELETE FROM FS.DEPARTMENT\nWHERE DEPARTMENT_CODE=:DEPARTMENT_CODE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : InsertDepartmentSO', 'CRUDDepartmentBO', 'insertDepartment', 'CRUDDepartmentDOF', 'INSERT', 'INSERT INTO FS.DEPARTMENT\nVALUES (:DEPARTMENT_CODE, :DEPARTMENT_NAME, :DEPARTMENT_OPARENT_CODE, :COMPANY_CODE);\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : ReadDepartmentSO', 'CRUDDepartmentBO', 'readDepartment', 'CRUDDepartmentDOF', 'SELECTALL', 'SELECT *\nFROM FS.DEPARTMENT'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : ReadDepartmentSO', 'CRUDDepartmentBO', 'readDepartment', 'DocDOF', 'DOCDELETE', 'DELETE FROM FS.DOC \nWHERE DOC_ROWSEQ = :DOC_ROWSEQ;'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : ReadJoinDepartment', 'JoinDepartmentBO', 'readJoinDepartment', 'JoinDepartmentDOF', 'SELECT', 'SELECT FS.EMPLOYEE.EMPLOYEE_CODE, FS.EMPLOYEE.EMPLOYEE_NAME\nFROM FS.EMPLOYEE\nWHERE DEPARTMENT_CODE = :DEPARTMENT_CODE\nORDER BY EMPLOYEE_CODE ASC'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : ReadJoinDepartmentSO', 'JoinDepartmentBO', 'readJoinDepartment', 'JoinDepartmentDOF', 'SELECT', 'SELECT FS.EMPLOYEE.EMPLOYEE_CODE, FS.EMPLOYEE.EMPLOYEE_NAME\nFROM FS.EMPLOYEE\nWHERE DEPARTMENT_CODE = :DEPARTMENT_CODE\nORDER BY EMPLOYEE_CODE ASC'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : UpdateAllDepartmentSO', 'CRUDDepartmentBO', 'updateAllDepartment', 'CRUDDepartmentDOF', 'UPDATE', 'UPDATE FS.DEPARTMENT\nSET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE\nWHERE DEPARTMENT_CODE = :DEPARTMENT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'department', 'so', 'SO_NAME : UpdateDepartmentSO', 'CRUDDepartmentBO', 'updateDepartment', 'CRUDDepartmentDOF', 'UPDATE', 'UPDATE FS.DEPARTMENT\nSET DEPARTMENT_CODE = :DEPARTMENT_CODE, DEPARTMENT_NAME = :DEPARTMENT_NAME, DEPARTMENT_OPARENT_CODE = :DEPARTMENT_OPARENT_CODE, COMPANY_CODE = :COMPANY_CODE\nWHERE DEPARTMENT_CODE = :DEPARTMENT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'site', 'so', 'SO_NAME : DeleteSiteSO', 'CRUDSiteBO', 'deleteSite', 'CRUDSiteDOF', 'DELETE', 'DELETE FROM FS.SITE\nWHERE SITE_CODE = :SITE_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'site', 'so', 'SO_NAME : InsertSiteSO', 'CRUDSiteBO', 'insertSite', 'CRUDSiteDOF', 'INSERT', 'INSERT INTO FS.SITE\nVALUES (:SITE_CODE, :SITE_NAME, :COMPANY_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'site', 'so', 'SO_NAME : ReadSiteSO', 'CRUDSiteBO', 'readSite', 'CRUDSiteDOF', 'SELECTALL', 'SELECT *\nFROM FS.SITE\nORDER BY SITE_CODE ASC'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'site', 'so', 'SO_NAME : UpdateSiteSO', 'CRUDSiteBO', 'updateSite', 'CRUDSiteDOF', 'UPDATE', 'UPDATE FS.SITE\nSET SITE_CODE =:SITE_CODE, SITE_NAME = :SITE_NAME, COMPANY_CODE = :COMPANY_CODE\nWHERE SITE_CODE =:SITE_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : DeleteProjectEmpRelSO', 'CRUDProjectEmpRelBO', 'deleteProjectEmpRel', 'CRUDProjectEmpRelDOF', 'DELETE', 'DELETE FROM FS.PROJ_EMP_REL\nWHERE PROJECT_CODE =:PROJECT_CODE AND EMPLOYEE_CODE= :EMPLOYEE_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : DeleteProjectSO', 'CRUDProjectBO', 'deleteProject', 'CRUDProjectDOF', 'DELETE', 'DELETE FROM FS.PROJECT\nWHERE PROJECT_CODE=:PROJECT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : InsertProjectEmpRelSO', 'CRUDProjectEmpRelBO', 'insertProjectEmpRel', 'CRUDProjectEmpRelDOF', 'INSERT', 'INSERT INTO FS.PROJ_EMP_REL\nVALUES (:PROJECT_CODE, :EMPLOYEE_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : InsertProjectSO', 'CRUDProjectBO', 'insertProject', 'CRUDProjectDOF', 'INSERT', "INSERT INTO FS.PROJECT \nVALUES (:PROJECT_CODE , :CLIENT_CODE, :PROJECT_NAME, to_date(:PROJECT_STARTDATE , 'YYYY/MM/DD'), to_date(:PROJECT_ENDDATE , 'YYYY/MM/DD'),  :PROJECT_VALUE, :PROJECT_CONDITION , :PROJECT_ABSTRACT, :COMPANY_CODE)\n\n "], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : ReadProjectEmpRelSO', 'CRUDProjectEmpRelBO', 'readProjectEmpRel', 'CRUDProjectEmpRelDOF', 'SELECTALL', 'SELECT *\nFROM FS.PROJ_EMP_REL'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : ReadProjectSO', 'CRUDProjectBO', 'readProject', 'CRUDProjectDOF', 'SELECTALL', 'SELECT *\nFROM FS.PROJECT\nORDER BY PROJECT_CODE ASC'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : SelectDateProjectSO', 'CRUDProjectBO', 'selectDateProject', 'CRUDProjectDOF', 'DATESELECT', "SELECT *\nFROM FS.PROJECT\nWHERE to_date(:PROJECT_NAME ,  'YYYY/MM/DD') between PROJECT_STARTDATE and PROJECT_ENDDATE\nORDER BY PROJECT_CODE ASC"], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : SelectJoinProjectSO', 'JoinProjectBO', 'selectJoinProject', 'JoinProjectDOF', 'SELECT', 'SELECT FS.PROJ_EMP_REL.EMPLOYEE_CODE, FS.EMPLOYEE.EMPLOYEE_NAME\nFROM FS.PROJ_EMP_REL, FS.EMPLOYEE\nWHERE FS.PROJ_EMP_REL.PROJECT_CODE = :PROJECT_CODE AND FS.PROJ_EMP_REL.EMPLOYEE_CODE = FS.EMPLOYEE.EMPLOYEE_CODE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'project', 'so', 'SO_NAME : UpdateProjectSO', 'CRUDProjectBO', 'updateProject', 'CRUDProjectDOF', 'UPDATE', 'UPDATE FS.PROJECT\nSET PROJECT_CODE= :PROJECT_CODE , CLIENT_CODE= :CLIENT_CODE, PROJECT_NAME= :PROJECT_NAME, PROJECT_STARTDATE =:PROJECT_STARTDATE, PROJECT_ENDDATE = :PROJECT_ENDDATE , PROJECT_VALUE= :PROJECT_VALUE, PROJECT_CONDITION = :PROJECT_CONDITION , PROJECT_ABSTRACT= :PROJECT_ABSTRACT, COMPANY_CODE= :COMPANY_CODE\nWHERE PROJECT_CODE= :PROJECT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : DeleteProductEmpRelSO', 'CRUDProductEmpRelBO', 'deleteProductEmpRel', 'CRUDProductEmpRelDOF', 'DELETE', 'DELETE FROM FS.PROD_EMP_REL\nWHERE PRODUCT_CODE =:PRODUCT_CODE AND EMPLOYEE_CODE= :EMPLOYEE_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : DeleteProductSO', 'CRUDProductBO', 'deleteProduct', 'CRUDProductDOF', 'DELETE', 'DELETE FROM FS.PRODUCT\nWHERE PRODUCT_CODE =:PRODUCT_CODE'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : InsertProductEmpRelSO', 'CRUDProductEmpRelBO', 'insertProductEmpRel', 'CRUDProductEmpRelDOF', 'INSERT', 'INSERT INTO FS.PROD_EMP_REL\nVALUES (:PRODUCT_CODE, :EMPLOYEE_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : InsertProductSO', 'CRUDProductBO', 'insertProduct', 'CRUDProductDOF', 'INSERT', 'INSERT INTO FS.PRODUCT\nVALUES (:PRODUCT_CODE, :PRODUCT_NAME, :PRODUCT_TYPE, :PRODUCT_TAXTYPE, :PRODUCT_REMARKS, :COMPANY_CODE)\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : ReadProductEmpRelSO', 'CRUDProductEmpRelBO', 'readProductEmpRel', 'CRUDProductEmpRelDOF', 'SELECTALL', 'SELECT *\nFROM FS.PROD_EMP_REL'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : ReadProductSO', 'CRUDProductBO', 'readProduct', 'CRUDProductDOF', 'SELECTALL', 'SELECT *\nFROM FS.PRODUCT\nORDER BY PRODUCT_CODE ASC'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : ReadProductSO', 'CRUDProductBO', 'readProduct', 'DofPath Error'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : SearchProductSO', 'CRUDProductBO', 'searchProduct', 'CRUDProductDOF', 'SELECT', 'SELECT *\nFROM FS.PRODUCT\nWHERE (PRODUCT_CODE = :PRODUCT_CODE)'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : SelectProductEmpRelSO', 'CRUDProductEmpRelBO', 'selectProductEmpRel', 'CRUDProductEmpRelDOF', 'SELECT', 'select FS.PROD_EMP_REL.EMPLOYEE_CODE, FS.EMPLOYEE.EMPLOYEE_NAME\nfrom FS.PROD_EMP_REL, FS.EMPLOYEE\nwhere FS.PROD_EMP_REL.PRODUCT_CODE = :PRODUCT_CODE AND FS.PROD_EMP_REL.EMPLOYEE_CODE = FS.EMPLOYEE.EMPLOYEE_CODE\n'], ['FS', 'CORE', 'meta', 'com', 'tmax', 'fs', 'infra', 'product', 'so', 'SO_NAME : UpdateProductSO', 'CRUDProductBO', 'updateProduct', 'CRUDProductDOF', 'UPDATE', 'UPDATE FS.PRODUCT\nSET PRODUCT_CODE= :PRODUCT_CODE, PRODUCT_NAME = :PRODUCT_NAME, PRODUCT_TYPE=:PRODUCT_TYPE, PRODUCT_TAXTYPE=:PRODUCT_TAXTYPE, PRODUCT_REMARKS= :PRODUCT_REMARKS, COMPANY_CODE=:COMPANY_CODE\nWHERE PRODUCT_CODE= :PRODUCT_CODE']]
